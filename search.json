[{"title":"Hello World","url":"/2015/07/07/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"todo","url":"/2015/07/07/todo/","content":"<h1 id=\"Todo\"><a href=\"#Todo\" class=\"headerlink\" title=\"Todo\"></a>Todo</h1><p>ps top 线程</p>\n<h1 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h1><h1 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h1><h1 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h1><h1 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h1><h1 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h1><h1 id=\"MQ​\"><a href=\"#MQ​\" class=\"headerlink\" title=\"MQ​\"></a>MQ​</h1><h1 id=\"ES\"><a href=\"#ES\" class=\"headerlink\" title=\"ES\"></a>ES</h1><h1 id=\"Nginx\"><a href=\"#Nginx\" class=\"headerlink\" title=\"Nginx\"></a>Nginx</h1><h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h1 id=\"Net\"><a href=\"#Net\" class=\"headerlink\" title=\"Net\"></a>Net</h1><h1 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h1><p>Linux 连续执行多条命令的方法和区别 <a href=\"https://blog.csdn.net/bandaoyu/article/details/117296907\">https://blog.csdn.net/bandaoyu/article/details/117296907</a><br>inux Shell 多个命令中间间隔符号; 和&amp;和&amp;&amp; 区别 <a href=\"https://blog.csdn.net/channel310/article/details/8516560\">https://blog.csdn.net/channel310/article/details/8516560</a><br>Shell多个命令间隔符号; 、&amp;、&amp;&amp;、| 和 || 区别 <a href=\"https://juejin.cn/post/7046564473515016223\">https://juejin.cn/post/7046564473515016223</a></p>\n<p>shell：脚本执行失败就退出的3种方案 <a href=\"https://blog.csdn.net/wx17343624830/article/details/129171435\">https://blog.csdn.net/wx17343624830/article/details/129171435</a><br>linux脚本执行出错就退出 <a href=\"https://blog.csdn.net/qingquanyingyue/article/details/111386263\">https://blog.csdn.net/qingquanyingyue/article/details/111386263</a><br>shell 编程：冒号 后面跟 等号，加号，减号，问号的意义 <a href=\"https://www.cnblogs.com/liujiacai/p/15180991.html\">https://www.cnblogs.com/liujiacai/p/15180991.html</a><br>shell 编程：冒号 后面跟 等号，加号，减号，问号的意义 <a href=\"https://blog.csdn.net/trochiluses/article/details/9048539\">https://blog.csdn.net/trochiluses/article/details/9048539</a></p>\n<p>Shell三元表达式 <a href=\"https://www.cnblogs.com/exmyth/p/17015042.html\">https://www.cnblogs.com/exmyth/p/17015042.html</a></p>\n<p>好奇怪，网络大佬都是这样记住如此多命令行的？ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/599175964?utm_id=0\">https://zhuanlan.zhihu.com/p/599175964?utm_id=0</a><br>​ 命令行总结_一晌贪欢i的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_27674439/article/details/93506556\">https://blog.csdn.net/qq_27674439/article/details/93506556</a></p>\n<p>Linux的proc文件系统 : <a href=\"https://blog.csdn.net/m0_55793759/article/details/126454065\">https://blog.csdn.net/m0_55793759/article/details/126454065</a><br>Linux的父目录和子文件权限 : <a href=\"https://blog.csdn.net/weixin_41843699/article/details/88841510\">https://blog.csdn.net/weixin_41843699/article/details/88841510</a><br>shell脚本中的路径问题 <a href=\"https://blog.csdn.net/weixin_33542015/article/details/116823952\">https://blog.csdn.net/weixin_33542015/article/details/116823952</a><br>linux两个星号 <a href=\"https://blog.csdn.net/quqi99/article/details/78552156\">https://blog.csdn.net/quqi99/article/details/78552156</a></p>\n<p>Linux中查看换行符 <a href=\"https://www.cnblogs.com/cekaigongchengshi/p/12800765.html\">https://www.cnblogs.com/cekaigongchengshi/p/12800765.html</a><br>linux 查看文件字符 回车 换行 <a href=\"https://blog.csdn.net/u011149152/article/details/125782098\">https://blog.csdn.net/u011149152/article/details/125782098</a></p>\n<p>linux的ls命令详解&#x2F;-1和-l的区别 <a href=\"https://blog.csdn.net/cy413026/article/details/104779874\">https://blog.csdn.net/cy413026/article/details/104779874</a><br>linux文件属性及 ls -l 命令输出结果详解 <a href=\"https://blog.csdn.net/tsummer2010/article/details/104438878\">https://blog.csdn.net/tsummer2010/article/details/104438878</a><br>Windows 文件常规属性 VS 安全属性 <a href=\"https://blog.csdn.net/zhangchuan7758/article/details/121785160\">https://blog.csdn.net/zhangchuan7758/article/details/121785160</a></p>\n<p>也说说windows 文件系统 文件的三个时间 <a href=\"https://blog.csdn.net/dubiousway/article/details/8866399\">https://blog.csdn.net/dubiousway/article/details/8866399</a></p>\n<p>Linux字符串截取和处理命令 （cut、printf、awk、sed、sort、wc） 笔记 <a href=\"https://blog.csdn.net/yang_z_1/article/details/113988960\">https://blog.csdn.net/yang_z_1/article/details/113988960</a></p>\n<p>linux shell sleep usleep 延时命令 秒 毫秒 微秒 <a href=\"https://blog.csdn.net/whatday/article/details/103220136\">https://blog.csdn.net/whatday/article/details/103220136</a></p>\n<p>windows用powershell修改文档&#x2F;文件夹创建时间、修改时间 <a href=\"https://blog.csdn.net/u012223913/article/details/72123906\">https://blog.csdn.net/u012223913/article/details/72123906</a></p>\n<p>CentOS中rpm和yum区别 <a href=\"https://blog.csdn.net/RangerV3/article/details/102882247\">https://blog.csdn.net/RangerV3/article/details/102882247</a><br>dpkg、rpm 和 apt-get、yum 的区别及使用 <a href=\"https://blog.csdn.net/whuzm08/article/details/104259516\">https://blog.csdn.net/whuzm08/article/details/104259516</a><br>​ CentOS yum执行原理以及yum.conf配置文件 和 .repo文件详解_yzpyzp的博客-CSDN博客_centos &#x2F;etc&#x2F;yum.conf : <a href=\"https://blog.csdn.net/yzpbright/article/details/81387623\">https://blog.csdn.net/yzpbright/article/details/81387623</a><br>​ centos 多个yum源，系统怎么选择_weixin_30578677的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_30578677/article/details/99259730\">https://blog.csdn.net/weixin_30578677/article/details/99259730</a><br>​ 添加多个yum源并自动选择最快的源_爱码的博客-CSDN博客_yum源可以配置多个吗 : <a href=\"https://blog.csdn.net/kevinstoic/article/details/8978659\">https://blog.csdn.net/kevinstoic/article/details/8978659</a><br>​ yum查看软件包是通过哪个源下载的_qq_863909的博客-CSDN博客_查看yum源地址 : <a href=\"https://blog.csdn.net/qq_17576885/article/details/122245658?spm=1001.2101.3001.6650.10&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-122245658-blog-8978659.wap_blog_relevant_default&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-122245658-blog-8978659.wap_blog_relevant_default\">https://blog.csdn.net/qq_17576885/article/details/122245658?spm=1001.2101.3001.6650.10&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-122245658-blog-8978659.wap_blog_relevant_default&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-122245658-blog-8978659.wap_blog_relevant_default</a><br>​ linux命令：pgrep与pkill_qiuchangyong的博客-CSDN博客_pgrep pkill : <a href=\"https://blog.csdn.net/qiuchangyong/article/details/108802131\">https://blog.csdn.net/qiuchangyong/article/details/108802131</a><br>​ linux pgrep 和 pkill 命令使用案例 - 个人文章 - SegmentFault 思否 : <a href=\"https://segmentfault.com/a/1190000042748595\">https://segmentfault.com/a/1190000042748595</a><br>​ 【Linux】Shell命令 getopts&#x2F;getopt用法详解_镰刀韭菜的博客-CSDN博客 : <a href=\"https://blog.csdn.net/arpospf/article/details/103381621\">https://blog.csdn.net/arpospf/article/details/103381621</a><br>​ Shell命令 getopts&#x2F;getopt用法详解 命令行参数_二进制杯莫停的博客-CSDN博客_getopts : <a href=\"https://blog.csdn.net/weixin_43999327/article/details/118968405\">https://blog.csdn.net/weixin_43999327/article/details/118968405</a><br>​ 详解Linux帮助命令——help、–help、man、info_MultiSkill的博客-CSDN博客_–help : <a href=\"https://blog.csdn.net/MultiSkill/article/details/104187778\">https://blog.csdn.net/MultiSkill/article/details/104187778</a></p>\n<p>Linux添加自定义服务（service文件） <a href=\"https://blog.csdn.net/yanhanhui1/article/details/117196904\">https://blog.csdn.net/yanhanhui1/article/details/117196904</a></p>\n<p>Linux运维必知：如何从其 PID 中查找进程名称 <a href=\"https://blog.csdn.net/weixin_43025343/article/details/123240940\">https://blog.csdn.net/weixin_43025343/article/details/123240940</a><br>Linux: 如何根据进程名字查找进程号 <a href=\"https://blog.csdn.net/qq_40765537/article/details/113987339\">https://blog.csdn.net/qq_40765537/article/details/113987339</a><br>Linux - 如何根据名字杀掉一个进程 <a href=\"https://blog.csdn.net/guoqx/article/details/128695582\">https://blog.csdn.net/guoqx/article/details/128695582</a></p>\n<p>Linux命令之 ps、pgrep、pidof <a href=\"https://blog.csdn.net/mrtwenty/article/details/98638983\">https://blog.csdn.net/mrtwenty/article/details/98638983</a><br>Linux pidof –找出正在运行程序的进程PID <a href=\"https://blog.csdn.net/mosesmo1989/article/details/51094459\">https://blog.csdn.net/mosesmo1989/article/details/51094459</a><br>Linux pgrep命令 <a href=\"https://blog.csdn.net/qq_27870421/article/details/92648362\">https://blog.csdn.net/qq_27870421/article/details/92648362</a><br>linux上杀死进程命令：kill、pkill、killall杀死进程 <a href=\"https://blog.csdn.net/weixin_41010198/article/details/122370405\">https://blog.csdn.net/weixin_41010198/article/details/122370405</a><br>linux显示运行脚本进程号的方法 <a href=\"https://blog.csdn.net/styshoo/article/details/49405019\">https://blog.csdn.net/styshoo/article/details/49405019</a><br>Linux–ps、lsof、netstat命令 <a href=\"https://blog.csdn.net/weixin_42740015/article/details/88536418\">https://blog.csdn.net/weixin_42740015/article/details/88536418</a></p>\n<p>​ Ansible中文权威指南- 国内专业的Ansible中文官方学习手册 : <a href=\"http://ansible.com.cn/\">http://ansible.com.cn/</a></p>\n<p> Windows批处理文件（.bat文件和.cmd文件）介绍以及简单使用_bat批处理文件_Gary的面包屑小道的博客-CSDN博客 : <a href=\"https://blog.csdn.net/DY_1024/article/details/83094915\">https://blog.csdn.net/DY_1024/article/details/83094915</a><br> cmd文件和bat文件的区别+一个的bat脚本+bat基础知识_bat和cmd有什么区别_highgerms的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43605586/article/details/100526930\">https://blog.csdn.net/weixin_43605586/article/details/100526930</a></p>\n<p> Linux环境变量配置方法与加载顺序_linux环境变量加载顺序_气运联盟的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_46307478/article/details/128972918\">https://blog.csdn.net/weixin_46307478/article/details/128972918</a><br> Linux export、set、env和source作用详解_export env_JTbeiying的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_33912215/article/details/94436836\">https://blog.csdn.net/qq_33912215/article/details/94436836</a><br> Linux_ set&#x2F;env&#x2F;export 之间的关系 与 区别_env export_高达一号的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u010003835/article/details/79935434\">https://blog.csdn.net/u010003835/article/details/79935434</a><br> Linux文件 profile、bashrc、bash_profile区别 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/405174594?utm_id=0\">https://zhuanlan.zhihu.com/p/405174594?utm_id=0</a><br> 交互式shell和非交互式shell、登录shell和非登录shell的区别_比不了就不比的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u012317833/article/details/39236781\">https://blog.csdn.net/u012317833/article/details/39236781</a><br> .zprofile, .zshrc和.zshenv之间的区别 - 掘金 : <a href=\"https://juejin.cn/post/7128574050406367269\">https://juejin.cn/post/7128574050406367269</a><br> .bashrc .zshrc .profile .bash_profile 区别 - 掘金 : <a href=\"https://juejin.cn/post/6954620633313624100\">https://juejin.cn/post/6954620633313624100</a><br> &#x2F;etc&#x2F;profile，&#x2F;etc&#x2F;bashrc与~&#x2F;.bashrc的区别及联系 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/25944849?utm_id=0\">https://zhuanlan.zhihu.com/p/25944849?utm_id=0</a><br> 父 shell，子 shell ，export 与 变量传递_子shell可以感知父shell中的变量_穷游的兔子的博客-CSDN博客 : <a href=\"https://blog.csdn.net/dreamcoding/article/details/8519689\">https://blog.csdn.net/dreamcoding/article/details/8519689</a><br> Linux 中 eval命令的作用_春风来不来的博客-CSDN博客 : <a href=\"https://blog.csdn.net/a1414345/article/details/73729126\">https://blog.csdn.net/a1414345/article/details/73729126</a><br> pidstat命令详解_啊哈？？的博客-CSDN博客 : <a href=\"https://blog.csdn.net/supahero/article/details/107546269\">https://blog.csdn.net/supahero/article/details/107546269</a><br> sysstat命令的安装和使用_安澜仙王的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sinat_28317385/article/details/112967462\">https://blog.csdn.net/sinat_28317385/article/details/112967462</a><br> sysstat 工具详细说明_svod的博客-CSDN博客 : <a href=\"https://blog.csdn.net/svod/article/details/7241729\">https://blog.csdn.net/svod/article/details/7241729</a><br> Linux查看CPU和内存使用情况（ps、free、htop、atop、nmon、&#x2F;proc&#x2F;meminfo等）_linux查看cpu和内存信息_西京刀客的博客-CSDN博客 : <a href=\"https://blog.csdn.net/inthat/article/details/119800108\">https://blog.csdn.net/inthat/article/details/119800108</a><br> 比 top 更好，Linux 下的 7 大系统监视工具_程序员小乐的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xiaoxiaole0313/article/details/108289224\">https://blog.csdn.net/xiaoxiaole0313/article/details/108289224</a></p>\n<p> Linux可执行文件_荒-于嬉的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44455125/article/details/126196019\">https://blog.csdn.net/weixin_44455125/article/details/126196019</a><br> linux的可执行文件是什么后缀_linux可执行文件后缀_petition的博客-CSDN博客 : <a href=\"https://blog.csdn.net/jackuylove/article/details/104668159\">https://blog.csdn.net/jackuylove/article/details/104668159</a><br> 释伴：Linux 上的 Shebang 符号(#!)_Pikachu5808的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u012294618/article/details/78427864\">https://blog.csdn.net/u012294618/article/details/78427864</a><br> #!&#x2F;bin&#x2F;bash 和 #!&#x2F;usr&#x2F;bin&#x2F;env bash 的区别_十甫寸木南的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37164975/article/details/106181500\">https://blog.csdn.net/qq_37164975/article/details/106181500</a></p>\n<p> 【141】Linux 中xargs、grep、print0和xargs -0用法_小麦粒的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u010986753/article/details/108047324\">https://blog.csdn.net/u010986753/article/details/108047324</a><br> xargs命令详解_vanturman的博客-CSDN博客 : <a href=\"https://blog.csdn.net/vanturman/article/details/84325846\">https://blog.csdn.net/vanturman/article/details/84325846</a><br> Linux入门之玩转xargs命令_”xargs -i {} rm -f&quot;{}”_山阴少年的博客-CSDN博客 : <a href=\"https://blog.csdn.net/jclian91/article/details/114487032\">https://blog.csdn.net/jclian91/article/details/114487032</a><br> Linux基础：xargs命令-I选项使用技巧_xargs -i_淼叔的博客-CSDN博客 : <a href=\"https://blog.csdn.net/liumiaocn/article/details/105853141\">https://blog.csdn.net/liumiaocn/article/details/105853141</a><br> shell 问题 source project_env.sh_无左无右的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yang332233/article/details/120916354\">https://blog.csdn.net/yang332233/article/details/120916354</a></p>\n<p> linux中whereis、which、find、location的区别和用法 - 泥土里的绽放 - 博客园 : <a href=\"https://www.cnblogs.com/cjjjj/p/9846374.html\">https://www.cnblogs.com/cjjjj/p/9846374.html</a><br> 大量示例彻底搞懂Linux查找，which，whereis，locate，find - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/427486457?utm_id=0\">https://zhuanlan.zhihu.com/p/427486457?utm_id=0</a><br> cURL与wget的区别_wget和curl的区别_陌亡的博客-CSDN博客 : <a href=\"https://blog.csdn.net/IT_hejinrong/article/details/79361095\">https://blog.csdn.net/IT_hejinrong/article/details/79361095</a><br> Linux curl命令最全详解_Angel_CG的博客-CSDN博客 : <a href=\"https://blog.csdn.net/angle_chen123/article/details/120675472\">https://blog.csdn.net/angle_chen123/article/details/120675472</a><br> Linux- 系统随你玩之–玩出花活的命令浏览器上_风一样的美狼子的博客-CSDN博客 : <a href=\"https://blog.csdn.net/fyydlz/article/details/129539326\">https://blog.csdn.net/fyydlz/article/details/129539326</a><br> 在 Linux 上使用 Bash 创建一个临时文件 | 《Linux就该这么学》 : <a href=\"https://www.linuxprobe.com/linux-create-temp-file.html\">https://www.linuxprobe.com/linux-create-temp-file.html</a></p>\n<p> Linux查看文件编码格式_linux 查看文件编码_wang.zhiyuan的博客-CSDN博客 : <a href=\"https://blog.csdn.net/SimonSucks/article/details/106112069\">https://blog.csdn.net/SimonSucks/article/details/106112069</a><br> linux 查看文件字符 回车 换行_linux 查看换行符_globalcoding的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u011149152/article/details/125782098\">https://blog.csdn.net/u011149152/article/details/125782098</a><br> txt在linux下换行符, Linux下的换行符\\n\\r以及txt和word文档的使用_阿力吃饭前的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_35261213/article/details/116971013?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-116971013-blog-125782098.wap_relevant_featuresortv7&amp;spm=1001.2101.3001.4242.1\">https://blog.csdn.net/weixin_35261213/article/details/116971013?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-116971013-blog-125782098.wap_relevant_featuresortv7&amp;spm=1001.2101.3001.4242.1</a><br> 【Linux】CRLF、CR、LF详解_crlf lf linux_SoWhat1412的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_31821675/article/details/101102029\">https://blog.csdn.net/qq_31821675/article/details/101102029</a><br> Linux编码及dos2unix, unix2dos命令_王义凯_Rick的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wsdc0521/article/details/107520069\">https://blog.csdn.net/wsdc0521/article/details/107520069</a></p>\n<p>Windows 文件的创建时间 \\修改时间 \\访问时间 <a href=\"https://blog.csdn.net/wowolook/article/details/45669395\">https://blog.csdn.net/wowolook/article/details/45669395</a><br>linux下文件的创建时间、访问时间、修改时间和改变时间 <a href=\"https://blog.csdn.net/zyz511919766/article/details/14452027\">https://blog.csdn.net/zyz511919766/article/details/14452027</a></p>\n<p>linux log rotation日志滚动详解_ghostwritten的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xixihahalelehehe/article/details/105131841\">https://blog.csdn.net/xixihahalelehehe/article/details/105131841</a><br> Linux中Crontab（定时任务）命令详解及使用教程_crontab命令详解_StandByMe. 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_51514930/article/details/124269555\">https://blog.csdn.net/qq_51514930/article/details/124269555</a><br> linux定时任务(crontab)<em>ZOUZDC的博客-CSDN博客 : <a href=\"https://blog.csdn.net/XUEYUTIANQI/article/details/113976558\">https://blog.csdn.net/XUEYUTIANQI/article/details/113976558</a><br> Linux crontab 命令格式与详细例子_linux 定时任务格式_ethanzhao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ethanzhao/article/details/4406017\">https://blog.csdn.net/ethanzhao/article/details/4406017</a><br> linux中crontab表达式中日期和星期使用实测_crontab 星期_Gavinli_lgf的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Gavinli_lgf/article/details/107558264\">https://blog.csdn.net/Gavinli_lgf/article/details/107558264</a><br> Linux Inotify详解和使用_in_close_write_翼曦的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zhanglei_admin/article/details/97636301\">https://blog.csdn.net/zhanglei_admin/article/details/97636301</a><br> Linux中inotify详解及实例_inotify.h_king_weng的博客-CSDN博客 : <a href=\"https://blog.csdn.net/King_weng/article/details/112246425\">https://blog.csdn.net/King_weng/article/details/112246425</a><br> Linux下使用inotify-tools工具监控文件_linux inotify-tools_程序猿编码的博客-CSDN博客 : <a href=\"https://blog.csdn.net/chen1415886044/article/details/106740212\">https://blog.csdn.net/chen1415886044/article/details/106740212</a><br> inotifywait命令详解_凯哥笑的孤独的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43191116/article/details/109365820\">https://blog.csdn.net/qq_43191116/article/details/109365820</a><br> inotifywait的安装及基本使用_小白旗的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37788558/article/details/104985262\">https://blog.csdn.net/qq_37788558/article/details/104985262</a><br> rsyslog、rsync+inotify、ftp_孤独风中1匹狼的博客-CSDN博客 : <a href=\"https://blog.csdn.net/richeng\">https://blog.csdn.net/richeng</a></em>&#x2F;article&#x2F;details&#x2F;95041817<br> rsync同步+inotify实时同步部署_rsync+inotify_-ZhangQiang-的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_51616026/article/details/114371263\">https://blog.csdn.net/weixin_51616026/article/details/114371263</a><br> linux rsync远程同步 | rsync+inotify实时同步 | 详细讲解_文件rsync+inno_半世情&#96;半世醉¹³¹⁴的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Dark_Tk/article/details/116535077\">https://blog.csdn.net/Dark_Tk/article/details/116535077</a><br> NFS主从同步：Inotify+Rsync_IQ low的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43058911/article/details/104792394\">https://blog.csdn.net/qq_43058911/article/details/104792394</a><br> linux – syslog, rsyslog和syslog-ng之间有什么区别？_syslog-ng rsyslog_sinolover的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sinolover/article/details/103734645\">https://blog.csdn.net/sinolover/article/details/103734645</a><br> logger(二):linux下syslog &amp; syslog-ng 详解_logger 或 syslog-ng_wenmoxiao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wentianyao/article/details/50505581\">https://blog.csdn.net/wentianyao/article/details/50505581</a><br> syslog和rsyslog有什么不同？_rsyslog和syslog的区别_KFC质检员的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_45373345/article/details/120729968\">https://blog.csdn.net/weixin_45373345/article/details/120729968</a><br> Linux ❀ Rsyslog（Syslog）服务与配置文件参数详解_rsyslog配置文件详解_无糖可乐没有灵魂的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42197548/article/details/120289563\">https://blog.csdn.net/qq_42197548/article/details/120289563</a><br> rsyslog日志服务详解_爱吃西瓜大人的博客-CSDN博客 : <a href=\"https://blog.csdn.net/paopaohll/article/details/84388313\">https://blog.csdn.net/paopaohll/article/details/84388313</a><br> Linux日志系统-01：什么是rsyslog？_魏波. 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weibo1230123/article/details/116563695\">https://blog.csdn.net/weibo1230123/article/details/116563695</a><br> Linux启动syslog进程, 浅谈Linux下的syslog守护进程_Memory寶镖的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42516178/article/details/116577674\">https://blog.csdn.net/weixin_42516178/article/details/116577674</a><br> Linux系统日志分析_小布丁cc的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_44484541/article/details/129954691\">https://blog.csdn.net/qq_44484541/article/details/129954691</a><br> syslog协议介绍_syslog协议格式_快乐的霖霖的博客-CSDN博客 : <a href=\"https://blog.csdn.net/chdhust/article/details/50989785#:~:text=syslog%E6%9E%B6%E6%9E%84.%20Unix%2FLinux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E6%97%A5%E5%BF%97%E9%83%BD%E6%98%AF%E9%80%9A%E8%BF%87%E4%B8%80%E7%A7%8D%E5%8F%AB%E5%81%9Asyslog%E7%9A%84%E6%9C%BA%E5%88%B6%E4%BA%A7%E7%94%9F%E5%92%8C%E7%BB%B4%E6%8A%A4%E7%9A%84%E3%80%82.%20syslog%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E5%87%86%E7%9A%84%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%88%86%E4%B8%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%EF%BC%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%98%AF%E4%BA%A7%E7%94%9F%E6%97%A5%E5%BF%97%E6%B6%88%E6%81%AF%E7%9A%84%E4%B8%80%E6%96%B9%EF%BC%8C%E8%80%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%B4%9F%E8%B4%A3%E6%8E%A5%E6%94%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%91%E9%80%81%E6%9D%A5%E7%9A%84%E6%97%A5%E5%BF%97%E6%B6%88%E6%81%AF%EF%BC%8C%E5%B9%B6%E5%81%9A%E5%87%BA%E4%BF%9D%E5%AD%98%E5%88%B0%E7%89%B9%E5%AE%9A%E7%9A%84%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E4%B8%AD%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E6%96%B9%E5%BC%8F%E7%9A%84%E5%A4%84%E7%90%86%E3%80%82\">https://blog.csdn.net/chdhust/article/details/50989785#:~:text=syslog%E6%9E%B6%E6%9E%84.%20Unix%2FLinux%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E6%97%A5%E5%BF%97%E9%83%BD%E6%98%AF%E9%80%9A%E8%BF%87%E4%B8%80%E7%A7%8D%E5%8F%AB%E5%81%9Asyslog%E7%9A%84%E6%9C%BA%E5%88%B6%E4%BA%A7%E7%94%9F%E5%92%8C%E7%BB%B4%E6%8A%A4%E7%9A%84%E3%80%82.%20syslog%E6%98%AF%E4%B8%80%E7%A7%8D%E6%A0%87%E5%87%86%E7%9A%84%E5%8D%8F%E8%AE%AE%EF%BC%8C%E5%88%86%E4%B8%BA%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%EF%BC%8C%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%98%AF%E4%BA%A7%E7%94%9F%E6%97%A5%E5%BF%97%E6%B6%88%E6%81%AF%E7%9A%84%E4%B8%80%E6%96%B9%EF%BC%8C%E8%80%8C%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E8%B4%9F%E8%B4%A3%E6%8E%A5%E6%94%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8F%91%E9%80%81%E6%9D%A5%E7%9A%84%E6%97%A5%E5%BF%97%E6%B6%88%E6%81%AF%EF%BC%8C%E5%B9%B6%E5%81%9A%E5%87%BA%E4%BF%9D%E5%AD%98%E5%88%B0%E7%89%B9%E5%AE%9A%E7%9A%84%E6%97%A5%E5%BF%97%E6%96%87%E4%BB%B6%E4%B8%AD%E6%88%96%E8%80%85%E5%85%B6%E4%BB%96%E6%96%B9%E5%BC%8F%E7%9A%84%E5%A4%84%E7%90%86%E3%80%82</a>., %E5%9C%A8Linux%E4%B8%AD%EF%BC%8C%E5%B8%B8%E8%A7%81%E7%9A%84syslog%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%AB%AF%E7%A8%8B%E5%BA%8F%E6%98%AFsyslogd%E5%AE%88%E6%8A%A4%E7%A8%8B%E5%BA%8F%E3%80%82.%20%E8%BF%99%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%8F%AF%E4%BB%A5%E4%BB%8E%E4%B8%89%E4%B8%AA%E5%9C%B0%E6%96%B9%E6%8E%A5%E6%94%B6%E6%97%A5%E5%BF%97%E6%B6%88%E6%81%AF%EF%BC%9A%EF%BC%881%EF%BC%89Unix%E5%9F%9F%E5%A5%97%E6%8E%A5%E5%AD%97%20%2Fdev%2Flog%EF%BC%9B%EF%BC%882%EF%BC%89UDP%E7%AB%AF%E5%8F%A3514%EF%BC%9B%EF%BC%883%EF%BC%89%E7%89%B9%E6%AE%8A%E7%9A%84%E8%AE%BE%E5%A4%87%2Fdev%2Fklog%EF%BC%88%E8%AF%BB%E5%8F%96%E5%86%85%E6%A0%B8%E5%8F%91%E5%87%BA%E7%9A%84%E6%B6%88%E6%81%AF%EF%BC%89%E3%80%82.<br> syslog协议_rfc5424_富甲一方张三的博客-CSDN博客 : <a href=\"https://blog.csdn.net/humanhaunt/article/details/120766867\">https://blog.csdn.net/humanhaunt/article/details/120766867</a><br> 时间语义解析工具 Python版，从文本中提取时间，并解析其含义，在线使用，时间语义识别_python从文本中提取时间_jionlp数据分析的博客-CSDN博客 : <a href=\"https://blog.csdn.net/dongrixinyu/article/details/120245280\">https://blog.csdn.net/dongrixinyu/article/details/120245280</a><br> date-extractor · PyPI : <a href=\"https://pypi.org/project/date-extractor/\">https://pypi.org/project/date-extractor/</a><br> datefinder - extract dates from text — datefinder 0.0.1dev2 documentation : <a href=\"https://datefinder.readthedocs.io/en/latest/#:~:text=datefinder%20-%20extract%20dates%20from%20text%20%C2%B6%20A\">https://datefinder.readthedocs.io/en/latest/#:~:text=datefinder%20-%20extract%20dates%20from%20text%20%C2%B6%20A</a>, dateparser%20package%20to%20convert%20to%20the%20datetime%20object.</p>\n<p> 带有logrotate的rsyslog：重新加载rsyslog与copytruncate : <a href=\"https://qastack.cn/server/688658/rsyslog-with-logrotate-reload-rsyslog-vs-copytruncate\">https://qastack.cn/server/688658/rsyslog-with-logrotate-reload-rsyslog-vs-copytruncate</a><br> 由mv命令引发的对inode的思考 - 于果alpha - 博客园 : <a href=\"https://www.cnblogs.com/yuxiuyan/p/13598363.html\">https://www.cnblogs.com/yuxiuyan/p/13598363.html</a></p>\n<p>Linux| 那些跟主机名有关的事(hosts, hostname, host.conf, resolv.conf)_hosts和hostname_YvesHe的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u011479200/article/details/86501476\">https://blog.csdn.net/u011479200/article/details/86501476</a><br> 修改主机名(&#x2F;etc&#x2F;hostname和&#x2F;etc&#x2F;hosts区别)_hosts和hostname_不会推车的娘们的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shmily_lsl/article/details/81164404\">https://blog.csdn.net/shmily_lsl/article/details/81164404</a><br> SSH Config中的Host和HostName有什么区别？ : <a href=\"https://qastack.cn/superuser/503687/whats-the-difference-between-host-and-hostname-in-ssh-config\">https://qastack.cn/superuser/503687/whats-the-difference-between-host-and-hostname-in-ssh-config</a></p>\n<p>Shell 脚本自动输入密码的三种方式 <a href=\"https://blog.csdn.net/Hsk_03/article/details/125496258\">https://blog.csdn.net/Hsk_03/article/details/125496258</a></p>\n<p>Linux下如何查看一个文件是否拥有软链接或硬链接文件？ <a href=\"https://blog.csdn.net/weixin_34348174/article/details/92679904\">https://blog.csdn.net/weixin_34348174/article/details/92679904</a><br>Linux之 如何查看文件是 <code>硬链接</code> 还是 <code>软链接</code> <a href=\"https://blog.csdn.net/kfepiza/article/details/126654350\">https://blog.csdn.net/kfepiza/article/details/126654350</a><br>Linux中Readlink命令 <a href=\"https://blog.csdn.net/tanga842428/article/details/68952511\">https://blog.csdn.net/tanga842428/article/details/68952511</a><br>linux shell 判断一个文件是不是链接文件 <a href=\"https://blog.csdn.net/b779789251/article/details/88578100\">https://blog.csdn.net/b779789251/article/details/88578100</a><br>linux应用之test命令详细解析 <a href=\"https://www.cnblogs.com/tankblog/p/6160808.html\">https://www.cnblogs.com/tankblog/p/6160808.html</a></p>\n<p> LINUX还在用top，有更好的系统工具监控-今日头条 : <a href=\"https://m.toutiao.com/article/7196275144976433721/?app=news_article&amp;timestamp=1681749086&amp;use_new_style=1&amp;req_id=20230418003126199A81280527131FC609&amp;group_id=7196275144976433721&amp;share_token=c0d55bda-2e2a-4469-945d-3ed72aaf7c43&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7196275144976433721/?app=news_article&amp;timestamp=1681749086&amp;use_new_style=1&amp;req_id=20230418003126199A81280527131FC609&amp;group_id=7196275144976433721&amp;share_token=c0d55bda-2e2a-4469-945d-3ed72aaf7c43&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p>终端(terminal)、shell区别与联系_shell和终端的区别_西邮陈冠希的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_38214171/article/details/90050340\">https://blog.csdn.net/weixin_38214171/article/details/90050340</a><br> Linux 学习笔记（一）：终端 和 Shell 的区别和联系_终端和shell的区别_Amentos的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Amentos/article/details/129290846#:~:text=%E4%B8%80%E5%BC%80%E5%A7%8B%E6%88%91%E4%BB%A5%E4%B8%BA%E4%B8%8A%E9%9D%A2%E8%BF%99%E4%B8%AA%E9%BB%91%E9%BB%91%E7%9A%84%E7%BB%88%E7%AB%AF%E7%AA%97%E5%8F%A3%E5%B0%B1%E6%98%AF%20shell%EF%BC%8C%E5%90%8E%E6%9D%A5%E5%8F%91%E7%8E%B0%E5%B9%B6%E9%9D%9E%E5%A6%82%E6%AD%A4%E3%80%82%20%E7%BB%88%E7%AB%AF%20%E5%92%8C%20shell%20%E6%98%AF%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E6%A6%82%E5%BF%B5\">https://blog.csdn.net/Amentos/article/details/129290846#:~:text=%E4%B8%80%E5%BC%80%E5%A7%8B%E6%88%91%E4%BB%A5%E4%B8%BA%E4%B8%8A%E9%9D%A2%E8%BF%99%E4%B8%AA%E9%BB%91%E9%BB%91%E7%9A%84%E7%BB%88%E7%AB%AF%E7%AA%97%E5%8F%A3%E5%B0%B1%E6%98%AF%20shell%EF%BC%8C%E5%90%8E%E6%9D%A5%E5%8F%91%E7%8E%B0%E5%B9%B6%E9%9D%9E%E5%A6%82%E6%AD%A4%E3%80%82%20%E7%BB%88%E7%AB%AF%20%E5%92%8C%20shell%20%E6%98%AF%E4%B8%A4%E4%B8%AA%E4%B8%8D%E5%90%8C%E7%9A%84%E6%A6%82%E5%BF%B5</a>, %E3%80%82%20%E7%BB%88%E7%AB%AF%E6%98%AF%20terminal%EF%BC%8C%E8%80%8C%20shell%20%E7%9A%84%E6%84%8F%E6%80%9D%E6%98%AF%20%E2%80%9C%E5%A3%B3%22%EF%BC%8C%E8%BF%99%E4%B8%A4%E4%B8%AA%E6%80%8E%E4%B9%88%E7%9C%8B%E9%83%BD%E4%B8%8D%E4%BC%9A%E6%98%AF%E5%90%8C%E4%B8%80%E4%B8%AA%E4%B8%9C%E8%A5%BF%E3%80%82<br> linux几种常见的Shell：sh、bash、csh、tcsh、ash_csh tcsh_whatday的博客-CSDN博客 : <a href=\"https://blog.csdn.net/whatday/article/details/78929247\">https://blog.csdn.net/whatday/article/details/78929247</a><br> sh&#x2F;bash&#x2F;csh&#x2F;Tcsh&#x2F;ksh&#x2F;pdksh等shell本质区别_王小雷-多面手的博客-CSDN博客 : <a href=\"https://blog.csdn.net/dream_an/article/details/50548936\">https://blog.csdn.net/dream_an/article/details/50548936</a><br> zsh与bash区别_zsh和bash的区别_Raywit的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40520596/article/details/104642218\">https://blog.csdn.net/qq_40520596/article/details/104642218</a><br> Fish vs. Zsh vs. Bash以及为什么要改用Fish_fish bash_杭州程序员张张的博客-CSDN博客 : <a href=\"https://blog.csdn.net/duninet/article/details/107115082\">https://blog.csdn.net/duninet/article/details/107115082</a><br> 释伴：Linux 上的 Shebang 符号(#!)_Pikachu5808的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u012294618/article/details/78427864\">https://blog.csdn.net/u012294618/article/details/78427864</a><br> 魔数 (magic number) vs file 命令的工作原理 - 猪伯 - 博客园 : <a href=\"https://www.cnblogs.com/jg01/p/12388279.html\">https://www.cnblogs.com/jg01/p/12388279.html</a><br> Magic Number(魔数）是什么_1_Can的博客-CSDN博客 : <a href=\"https://blog.csdn.net/i_can1/article/details/108714784\">https://blog.csdn.net/i_can1/article/details/108714784</a><br> 计算机中魔数magic number的概念__佚名-2022_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wangjianno2/article/details/48859813\">https://blog.csdn.net/wangjianno2/article/details/48859813</a><br> 文件格式的幻数File Format and Magic Number_文件幻数_BloodyEve的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_35980805/article/details/106725455\">https://blog.csdn.net/qq_35980805/article/details/106725455</a><br> 根据Magic Number（幻数）判断文件类型-CSDN博客 : <a href=\"https://blog.csdn.net/thlzjfefe/article/details/122603256\">https://blog.csdn.net/thlzjfefe/article/details/122603256</a><br> 文件头格式标准魔数magic number和mime.types_文件头魔数_GK_hello的博客-CSDN博客 : <a href=\"https://blog.csdn.net/StringGK/article/details/124277085\">https://blog.csdn.net/StringGK/article/details/124277085</a></p>\n<p> Linux运维：推荐八款Linux远程连接工具，非常实用-今日头条 : <a href=\"https://m.toutiao.com/article/7223746275450274361/?app=news_article&amp;timestamp=1681996517&amp;use_new_style=1&amp;req_id=20230420211516A94217DCB2539B5BB7E2&amp;group_id=7223746275450274361&amp;share_token=4232a1c4-ab38-41b9-8f45-ecc904fc584b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7223746275450274361/?app=news_article&amp;timestamp=1681996517&amp;use_new_style=1&amp;req_id=20230420211516A94217DCB2539B5BB7E2&amp;group_id=7223746275450274361&amp;share_token=4232a1c4-ab38-41b9-8f45-ecc904fc584b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p> Linux域名解析（host、nslookup、dig、DNS）_linux域名解析命令_逍遥X的博客-CSDN博客 : <a href=\"https://blog.csdn.net/renfeigui0/article/details/101214865\">https://blog.csdn.net/renfeigui0/article/details/101214865</a></p>\n<p> IBM小型机+Oracle数据库+EMC存储设备，IOE简介_oracle ioe是什么意思__佚名-2022_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wangjianno2/article/details/17757261\">https://blog.csdn.net/wangjianno2/article/details/17757261</a><br> IBM的AIX 是什么？ AIX和UNIX的关系是什么_aix生态-CSDN博客 : <a href=\"https://blog.csdn.net/qq_20853741/article/details/125879174\">https://blog.csdn.net/qq_20853741/article/details/125879174</a></p>\n<p> cmd文件和bat文件的区别+一个的bat脚本+bat基础知识_cmd与bat区别_highgerms的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43605586/article/details/100526930\">https://blog.csdn.net/weixin_43605586/article/details/100526930</a><br> cmd和PowerShell的区别_powershell和cmd区别_孤独的代码的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_48885539/article/details/106924767\">https://blog.csdn.net/weixin_48885539/article/details/106924767</a><br> Win系统 - 命令行选 Cmd 还是 PowerShell 好？_cmd powershell 运行效率_放羊的牧码的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Dream_Weave/article/details/86791463\">https://blog.csdn.net/Dream_Weave/article/details/86791463</a><br> cmd 和 powershell 的区别_莹宝思密达的博客-CSDN博客 : <a href=\"https://blog.csdn.net/miin_ying/article/details/130407801\">https://blog.csdn.net/miin_ying/article/details/130407801</a><br> linux shell获取文件名和路径，basename&#x2F;dirname&#x2F;${}运用_用bash实现basename_ksj367043706的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ksj367043706/article/details/94993422\">https://blog.csdn.net/ksj367043706/article/details/94993422</a><br> Linux远程复制scp和rsync区别 - Jerry_Jin - 博客园 : <a href=\"https://www.cnblogs.com/jins-note/p/13266703.html\">https://www.cnblogs.com/jins-note/p/13266703.html</a><br> linux cp 目录 斜杠, 用cp命令拷贝文件，源目录后带不带斜杠的区别_陈总经理的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_29447473/article/details/116683171\">https://blog.csdn.net/weixin_29447473/article/details/116683171</a><br> Linux 移动或重命名文件&#x2F;目录—mv命令_mv 目录_anzhen0429的博客-CSDN博客 : <a href=\"https://blog.csdn.net/anzhen0429/article/details/74082336\">https://blog.csdn.net/anzhen0429/article/details/74082336</a><br> Linux cp 递归复制所有文件和文件夹_cp递归复制文件夹_咻咻ing的博客-CSDN博客 : <a href=\"https://blog.csdn.net/meifannao789456/article/details/112221897\">https://blog.csdn.net/meifannao789456/article/details/112221897</a><br> 如何用 vim 文本编辑器比较两文件 - klchang - 博客园 : <a href=\"https://www.cnblogs.com/klchang/p/13441038.html\">https://www.cnblogs.com/klchang/p/13441038.html</a><br> dos2unix和unix2dos命令使用_tommy_lgj的博客-CSDN博客 : <a href=\"https://blog.csdn.net/tommy_lgj/article/details/2910029\">https://blog.csdn.net/tommy_lgj/article/details/2910029</a><br> dos2unix和unix2dos_dos2unix windows_千册的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yueni_zhao/article/details/128026329\">https://blog.csdn.net/yueni_zhao/article/details/128026329</a><br> Linux中查看主机名的10种方法 - Hackerman - 博客园 : <a href=\"https://www.cnblogs.com/Hackerman/p/16001927.html\">https://www.cnblogs.com/Hackerman/p/16001927.html</a><br> Linux系统中sysctl命令详解 sysctl -p、sysctl -a、sysctl -w_phymat.nico的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shixin_0125/article/details/78943245\">https://blog.csdn.net/shixin_0125/article/details/78943245</a></p>\n<p>  Liunx命令总结全在这里了，几百条！整整几百条！-今日头条 : <a href=\"https://m.toutiao.com/article/7219679497342255656/?app=news_article&amp;timestamp=1683031188&amp;use_new_style=1&amp;req_id=2023050220394857B612F3765D38B1C8D4&amp;group_id=7219679497342255656&amp;share_token=68003984-7fda-43f3-9fdc-3f183545dd9f&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7219679497342255656/?app=news_article&amp;timestamp=1683031188&amp;use_new_style=1&amp;req_id=2023050220394857B612F3765D38B1C8D4&amp;group_id=7219679497342255656&amp;share_token=68003984-7fda-43f3-9fdc-3f183545dd9f&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p>  Linux中的date日期命令详解_linux date_码海小虾米_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_45551608/article/details/117095874\">https://blog.csdn.net/weixin_45551608/article/details/117095874</a></p>\n<p>  linux下的ctrl快捷键使用_张高伟的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_36663951/article/details/79928439\">https://blog.csdn.net/qq_36663951/article/details/79928439</a><br> shell命令行——快捷键 - linux——quan - 博客园 : <a href=\"https://www.cnblogs.com/betterquan/p/11456820.html\">https://www.cnblogs.com/betterquan/p/11456820.html</a></p>\n<p>文件&#x2F;目录对比：diff命令 <a href=\"https://www.cnblogs.com/amyzhu/p/13466049.html\">https://www.cnblogs.com/amyzhu/p/13466049.html</a><br>Linux 文本对比 diff 命令详解（整理） <a href=\"https://www.cnblogs.com/wf-linux/p/9488257.html\">https://www.cnblogs.com/wf-linux/p/9488257.html</a><br>linux 比较两个文件夹不同 <a href=\"https://www.cnblogs.com/xudong-bupt/p/6493903.html\">https://www.cnblogs.com/xudong-bupt/p/6493903.html</a><br>对比两个目录，找出有区别的文件【仅文件名，不是内容】 <a href=\"https://www.cnblogs.com/ZhYQ-Note/articles/13346226.html\">https://www.cnblogs.com/ZhYQ-Note/articles/13346226.html</a><br>Linux diff比较两个目录的不同 <a href=\"https://blog.csdn.net/W_s_j/article/details/121339587\">https://blog.csdn.net/W_s_j/article/details/121339587</a></p>\n<p>ls的输出有换行符，但显示在一行上。为什么？ <a href=\"https://qastack.cn/unix/10421/output-from-ls-has-newlines-but-displays-on-a-single-line-why\">https://qastack.cn/unix/10421/output-from-ls-has-newlines-but-displays-on-a-single-line-why</a><br>linux find命令-print0和xargs中-0使用技巧（转载） <a href=\"https://www.cnblogs.com/jjzd/p/5829558.html\">https://www.cnblogs.com/jjzd/p/5829558.html</a></p>\n<p>Linux od 命令详细介绍及用法实例 <a href=\"https://blog.csdn.net/qq_40085614/article/details/119532314\">https://blog.csdn.net/qq_40085614/article/details/119532314</a></p>\n<h1 id=\"Python\"><a href=\"#Python\" class=\"headerlink\" title=\"Python\"></a>Python</h1><p>【Django】用户登录与注销、判断用户是否登录_冰冷的希望的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_39147299/article/details/108405650\">https://blog.csdn.net/qq_39147299/article/details/108405650</a><br>​ tornado验证登录_fksfdh的博客-CSDN博客_tornado 登陆 : <a href=\"https://blog.csdn.net/fksfdh/article/details/106111320\">https://blog.csdn.net/fksfdh/article/details/106111320</a></p>\n<p>python代码编辑器Jupyter的使用_Go__home的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wander_ing/article/details/105397263\">https://blog.csdn.net/wander_ing/article/details/105397263</a></p>\n<p>Python函数和函数式编程（两万字长文警告！一文彻底搞定函数，建议收藏！）_gxhlh的博客-CSDN博客_n阶调和数python : <a href=\"https://blog.csdn.net/qq_44721831/article/details/102883028\">https://blog.csdn.net/qq_44721831/article/details/102883028</a><br> 转换算子(TransFormation)和执行算子(Action)_孤独の√ 3的博客-CSDN博客_转换算子 : <a href=\"https://blog.csdn.net/LCY_1013/article/details/105188074\">https://blog.csdn.net/LCY_1013/article/details/105188074</a><br> python字符串数字比较大小 <a href=\"https://blog.csdn.net/weixin_39760650/article/details/109974288\">https://blog.csdn.net/weixin_39760650/article/details/109974288</a></p>\n<p>分布式任务队列Celery入门与进阶 <a href=\"https://www.cnblogs.com/wdliu/p/9517535.html\">https://www.cnblogs.com/wdliu/p/9517535.html</a><br> 任务队列神器Celery <a href=\"https://blog.csdn.net/aaahtml/article/details/115131246\">https://blog.csdn.net/aaahtml/article/details/115131246</a><br> celery工作流 <a href=\"https://docs.celeryq.dev/en/stable/userguide/canvas.html\">https://docs.celeryq.dev/en/stable/userguide/canvas.html</a></p>\n<p>Python各版本的差异总结 : <a href=\"https://blog.csdn.net/qq_35952638/article/details/103101820\">https://blog.csdn.net/qq_35952638/article/details/103101820</a><br>Python爬虫框架 : <a href=\"https://blog.csdn.net/asdasdasd123123123/article/details/84639957\">https://blog.csdn.net/asdasdasd123123123/article/details/84639957</a></p>\n<p>python2类型注释 <a href=\"https://blog.csdn.net/qq_19895789/article/details/105344288\">https://blog.csdn.net/qq_19895789/article/details/105344288</a><br>Python3中typing模块介绍 <a href=\"https://blog.csdn.net/fengbingchun/article/details/122288737\">https://blog.csdn.net/fengbingchun/article/details/122288737</a></p>\n<p>Django中Mysql重复读丢失数据 <a href=\"https://docs.djangoproject.com/zh-hans/4.1/ref/databases/#mysql-isolation-level\">https://docs.djangoproject.com/zh-hans/4.1/ref/databases/#mysql-isolation-level</a><br>Django中Mysql重复读丢失数据 <a href=\"https://www.likecs.com/ask-3873024.html\">https://www.likecs.com/ask-3873024.html</a></p>\n<p>Python——str字符串和unicode字符串 <a href=\"https://blog.csdn.net/victoriaw/article/details/75314737\">https://blog.csdn.net/victoriaw/article/details/75314737</a><br>python之bytes、str与unicode详解 <a href=\"https://blog.csdn.net/mr_zhongjie/article/details/115283066\">https://blog.csdn.net/mr_zhongjie/article/details/115283066</a><br>了解bytes，str和unicode的区别 <a href=\"https://blog.csdn.net/tsoTeo/article/details/107752337\">https://blog.csdn.net/tsoTeo/article/details/107752337</a></p>\n<p>\\u与\\x的区别 <a href=\"https://blog.csdn.net/ningyanggege/article/details/106016673\">https://blog.csdn.net/ningyanggege/article/details/106016673</a><br>python字符串前缀 <a href=\"https://blog.csdn.net/tangkcc/article/details/119868258\">https://blog.csdn.net/tangkcc/article/details/119868258</a><br>python字符串拼接 <a href=\"https://blog.csdn.net/weixin_35825766/article/details/92402514\">https://blog.csdn.net/weixin_35825766/article/details/92402514</a><br>Python格式化字符串f-string概览 <a href=\"https://blog.csdn.net/sunxb10/article/details/81036693\">https://blog.csdn.net/sunxb10/article/details/81036693</a></p>\n<p>Python中reload重新设置编码 <a href=\"https://blog.csdn.net/youth06050/article/details/102874119\">https://blog.csdn.net/youth06050/article/details/102874119</a><br>为什么在sys.setdefaultencoding之前要写reload(sys) <a href=\"https://blog.csdn.net/qq_21148843/article/details/108954976\">https://blog.csdn.net/qq_21148843/article/details/108954976</a><br>立即停止使用setdefaultencoding <a href=\"https://www.cnblogs.com/yzhyingcool/p/13232690.html\">https://www.cnblogs.com/yzhyingcool/p/13232690.html</a><br>不推荐使用sys.setdefaultencoding <a href=\"https://www.qiniu.com/qfans/qnso-3828723\">https://www.qiniu.com/qfans/qnso-3828723</a><br>协程是否是线程安全(协程安全)的 <a href=\"https://zhuanlan.zhihu.com/p/40279108\">https://zhuanlan.zhihu.com/p/40279108</a><br>python 协程安全理解 <a href=\"https://blog.csdn.net/Lucas66666/article/details/119546476\">https://blog.csdn.net/Lucas66666/article/details/119546476</a><br>​ GitHub - flier&#x2F;pyfasthash: Python Non-cryptographic Hash Library : <a href=\"https://github.com/flier/pyfasthash\">https://github.com/flier/pyfasthash</a><br>​ murmur3 php, murmur: 更快更好的哈希函数_任念辰的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42136826/article/details/115248208\">https://blog.csdn.net/weixin_42136826/article/details/115248208</a><br>​ from <strong>future</strong> import unicode_literals的作用_一起学python吧的博客-CSDN博客 : <a href=\"https://blog.csdn.net/myli_binbin/article/details/84557113\">https://blog.csdn.net/myli_binbin/article/details/84557113</a><br>​ Python <strong>future</strong> 模块_exuan00的博客-CSDN博客___future__ : <a href=\"https://blog.csdn.net/m0_57845572/article/details/116596146\">https://blog.csdn.net/m0_57845572/article/details/116596146</a><br>​ Python中import的用法总结_易冷cheng的博客-CSDN博客_import 的用法 : <a href=\"https://blog.csdn.net/qq_41092406/article/details/118203572\">https://blog.csdn.net/qq_41092406/article/details/118203572</a><br>​ Python的相对导入和绝对导入_steventian72的博客-CSDN博客_相对导入 : <a href=\"https://blog.csdn.net/steventian72/article/details/86575538\">https://blog.csdn.net/steventian72/article/details/86575538</a><br>​ Python的绝对引用 vs 相对引用全面讲解_我是Roger的博客-CSDN博客_python 绝对引用 相对引用 : <a href=\"https://blog.csdn.net/ning13481193737/article/details/107165586\">https://blog.csdn.net/ning13481193737/article/details/107165586</a><br>​ Python – import 和 from …import… 的区别_樱花树上的alien的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_38630100/article/details/80808757\">https://blog.csdn.net/qq_38630100/article/details/80808757</a><br>​ python包导入方式import 和from import的区别和一些注意事项_caixxiong的博客-CSDN博客_import 与from 的区别 : <a href=\"https://blog.csdn.net/qq_24406903/article/details/98725931\">https://blog.csdn.net/qq_24406903/article/details/98725931</a><br>​ Python中import和from import的区别_jk_101的博客-CSDN博客_python中from和import : <a href=\"https://blog.csdn.net/jk_101/article/details/112279923\">https://blog.csdn.net/jk_101/article/details/112279923</a><br>​ python3 中的import 和from import 使用区别（包和模块）<em>ispringmw的博客-CSDN博客_python3 from import 区别 : <a href=\"https://blog.csdn.net/ispringmw/article/details/111408595\">https://blog.csdn.net/ispringmw/article/details/111408595</a><br>​ Python的from和import用法_菜鸟知识搬运工的博客-CSDN博客_python的from : <a href=\"https://blog.csdn.net/qq_30815237/article/details/93203934\">https://blog.csdn.net/qq_30815237/article/details/93203934</a><br>​ Python的 sys.path.append()、os.path.dirname(os.path.abspath(file))、使用os模块动态获取目录或文件路径_一只爱吃橙子的小蜗牛的博客-CSDN博客_sys.path.append : <a href=\"https://blog.csdn.net/weixin_43641920/article/details/122236711\">https://blog.csdn.net/weixin_43641920/article/details/122236711</a><br>​ 新手会踩的坑–os.path.abspath用法</em>@<del>一</del>米的博客-CSDN博客_os.path.abspath : <a href=\"https://blog.csdn.net/dmt103/article/details/106170431\">https://blog.csdn.net/dmt103/article/details/106170431</a><br>​ python基础： os.path.realpath()、os.path.getcwd()、 os.path.abspath() 的区别_NeverLate_gogogo的博客-CSDN博客_realpath和abspath : <a href=\"https://blog.csdn.net/NeverLate_gogogo/article/details/111867089\">https://blog.csdn.net/NeverLate_gogogo/article/details/111867089</a><br>​ os.path.abspath和os.path.realpath区别_橙好测试开发的博客-CSDN博客_abspath : <a href=\"https://blog.csdn.net/rainshine1190/article/details/85165059\">https://blog.csdn.net/rainshine1190/article/details/85165059</a><br>​ Python3 中使用 Pathlib 模块进行文件操作_或许对了的博客-CSDN博客_pathlib 如何移动文件 : <a href=\"https://blog.csdn.net/wads23456/article/details/116654408\">https://blog.csdn.net/wads23456/article/details/116654408</a><br>​ Python中hashlib模块详解_金鞍少年的博客-CSDN博客_hashlib : <a href=\"https://blog.csdn.net/weixin_42444693/article/details/104575153\">https://blog.csdn.net/weixin_42444693/article/details/104575153</a><br>​ Python 标准库 — Python 3.7.13 文档 : <a href=\"https://docs.python.org/zh-cn/3.7/library/index.html\">https://docs.python.org/zh-cn/3.7/library/index.html</a><br>​ 内置函数 — Python 3.11.2 文档 : <a href=\"https://docs.python.org/zh-cn/3/library/functions.html\">https://docs.python.org/zh-cn/3/library/functions.html</a><br>​ Python（十三）- 常用内置模块与第三方库_Alfred_|_derflA的博客-CSDN博客_python 中常用的内置模块 : <a href=\"https://blog.csdn.net/weixin_41599858/article/details/106890744\">https://blog.csdn.net/weixin_41599858/article/details/106890744</a><br>​ python 有用的3个工具：type, dir, help_usernah的博客-CSDN博客_python type dir : <a href=\"https://blog.csdn.net/usernah/article/details/102846395\">https://blog.csdn.net/usernah/article/details/102846395</a></p>\n<p>python tornado获取当前用户 <a href=\"https://blog.csdn.net/weixin_33744854/article/details/91694230\">https://blog.csdn.net/weixin_33744854/article/details/91694230</a></p>\n<p>用上这 7 个 Python 工具，提升开发幸福感-今日头条 : <a href=\"https://m.toutiao.com/article/7198726806684336675/?app=news_article&amp;timestamp=1677244910&amp;use_new_style=1&amp;req_id=2023022421214990429E34E8F694235B78&amp;group_id=7198726806684336675&amp;share_token=51caa6f3-4bf2-4c15-bb39-705b815cdec9&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7198726806684336675/?app=news_article&amp;timestamp=1677244910&amp;use_new_style=1&amp;req_id=2023022421214990429E34E8F694235B78&amp;group_id=7198726806684336675&amp;share_token=51caa6f3-4bf2-4c15-bb39-705b815cdec9&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p>Python 中 logging 日志模块在多进程环境下的使用_py2 logging 如何在多线程下使用_啊呜～的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43224440/article/details/112039113\">https://blog.csdn.net/weixin_43224440/article/details/112039113</a><br> python 多线程多进程logging系统写入同一日志文件处理方法_logging多线程写入重复_eightTeen的博客-CSDN博客 : <a href=\"https://blog.csdn.net/eightTeen/article/details/108511452\">https://blog.csdn.net/eightTeen/article/details/108511452</a><br> Python多进程不要使用TimedRotatingFileHandler_yongche_shi的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yongche_shi/article/details/49890103\">https://blog.csdn.net/yongche_shi/article/details/49890103</a><br> GitHub - wandaoe&#x2F;concurrent_log: 支持多进程并发的日志处理器 : <a href=\"https://github.com/wandaoe/concurrent_log\">https://github.com/wandaoe/concurrent_log</a><br> 多进程&#x2F;多线程同时向一个文件中写入日志如何避免冲突？_多个线程同时写一个文件, 如何避免重复写数据_Ruo_Xiao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/itworld123/article/details/115564732\">https://blog.csdn.net/itworld123/article/details/115564732</a></p>\n<p> Django runserver 默认是多线程模式—通透_django默认线程数_robch的博客-CSDN博客 : <a href=\"https://blog.csdn.net/cpxsxn/article/details/106102441\">https://blog.csdn.net/cpxsxn/article/details/106102441</a><br> Django的runserver部署和uwsgi部署对比-CSDN博客 : <a href=\"https://blog.csdn.net/zhoudapeng01/article/details/125363519\">https://blog.csdn.net/zhoudapeng01/article/details/125363519</a><br> django uwsgi多进程运行_柳暗花明又一村ヾ(◍°∇°◍)ﾉﾞ的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_41122834/article/details/111356870\">https://blog.csdn.net/qq_41122834/article/details/111356870</a><br> python 使用uwsgi 开启多进程服务_uwsgi 多进程_Macanv的博客-CSDN博客 : <a href=\"https://blog.csdn.net/macanv/article/details/105267051\">https://blog.csdn.net/macanv/article/details/105267051</a><br> tornado的协程、多线程、多进程实例_tornado多线程_东城地瓜的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_39422563/article/details/95641019\">https://blog.csdn.net/weixin_39422563/article/details/95641019</a><br> tornado之多进程服务_tornado 多进程_还是转转的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xiaoyi52/article/details/106650240\">https://blog.csdn.net/xiaoyi52/article/details/106650240</a><br> Tornado的多进程管理分析_tornado 进程_竹杖芒鞋轻胜马，谁怕？一蓑烟雨任平生。的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_21127151/article/details/105087528\">https://blog.csdn.net/qq_21127151/article/details/105087528</a><br> python协程的前世今生，future、yield、loop、task，yield from各个关键字详细图解_sf131097的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sf131097/article/details/80377645\">https://blog.csdn.net/sf131097/article/details/80377645</a><br> python协程(3): asyncio的EventLoop以及Future详解_python async future_python开发笔记的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37674086/article/details/113884099\">https://blog.csdn.net/qq_37674086/article/details/113884099</a><br> Python进阶——如何正确使用yield？ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/321302488?utm_id=0\">https://zhuanlan.zhihu.com/p/321302488?utm_id=0</a><br> 中间件 | Django 文档 | Django : <a href=\"https://docs.djangoproject.com/zh-hans/4.1/topics/http/middleware/\">https://docs.djangoproject.com/zh-hans/4.1/topics/http/middleware/</a><br> 深入讨论Python 装饰器 (与Java Aop对比思考)_Python3.7的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_45722061/article/details/102579539\">https://blog.csdn.net/weixin_45722061/article/details/102579539</a></p>\n<p> python离线安装依赖包_policycoreutils-python离线安装依赖包_FatPuffer的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42517220/article/details/108597469\">https://blog.csdn.net/qq_42517220/article/details/108597469</a><br> 相比 Pipenv，Poetry 是一个更好的选择 - 掘金 : <a href=\"https://juejin.cn/post/6844903934306304013\">https://juejin.cn/post/6844903934306304013</a><br> 不要用 Pipenv | 李辉 : <a href=\"https://greyli.com/do-not-use-pipenv/\">https://greyli.com/do-not-use-pipenv/</a></p>\n<p>  pyinstaller打包exe程序步骤和添加依赖文件方法_pyinstaller 依赖_Spider. Li的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42409884/article/details/109293327\">https://blog.csdn.net/weixin_42409884/article/details/109293327</a><br> pyinstaller 打包exe有依赖文件 py文件、dll文件、外部参数txt、json文件_Mooney安的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Iv_zzy/article/details/107462210\">https://blog.csdn.net/Iv_zzy/article/details/107462210</a><br> 如何将Python程序打包成linux可执行文件_python打包linux_甜度超标°的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_38703529/article/details/117521655\">https://blog.csdn.net/qq_38703529/article/details/117521655</a><br> Python开发 之 Python3打包（windows&#x2F;linux）详解_python 打包_沙振宇的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u014597198/article/details/104054250\">https://blog.csdn.net/u014597198/article/details/104054250</a></p>\n<p>Django 添加数据 Model.objects.create()和save()_飘灬渺的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43515713/article/details/128616696\">https://blog.csdn.net/qq_43515713/article/details/128616696</a><br> Django大咖之路: 深入理解Django创建对象的create和save方法_django create_大江狗的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42134789/article/details/80203270\">https://blog.csdn.net/weixin_42134789/article/details/80203270</a><br> Django数据库——objects_django objects_SnowSleet的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yuaicsdn/article/details/119026919\">https://blog.csdn.net/yuaicsdn/article/details/119026919</a><br> 执行查询 | Django 文档 | Django : <a href=\"https://docs.djangoproject.com/zh-hans/4.1/topics/db/queries/\">https://docs.djangoproject.com/zh-hans/4.1/topics/db/queries/</a></p>\n<p> Python3 async def和@asyncio.coroutine的区别_m345376054的博客-CSDN博客 : <a href=\"https://blog.csdn.net/m345376054/article/details/78538726\">https://blog.csdn.net/m345376054/article/details/78538726</a><br> 有了@asyncio.coroutine装饰器，为什么还需要async关键字？_caimouse的博客-CSDN博客 : <a href=\"https://blog.csdn.net/caimouse/article/details/77823179\">https://blog.csdn.net/caimouse/article/details/77823179</a><br> 理解Python协程: 从yield&#x2F;send到yield from再到async&#x2F;await_唐大麦的博客-CSDN博客 : <a href=\"https://blog.csdn.net/soonfly/article/details/78361819\">https://blog.csdn.net/soonfly/article/details/78361819</a><br> asyncio异步IO–协程（Coroutine）与任务(Task)详解 - 马鸣谦 - 博客园 : <a href=\"https://www.cnblogs.com/mamingqian/p/10008279.html\">https://www.cnblogs.com/mamingqian/p/10008279.html</a><br> python3 asyncio库学习（一）—— coroutine, task , future的区别 <a href=\"https://blog.csdn.net/hello_ufo/article/details/90770647\">https://blog.csdn.net/hello_ufo/article/details/90770647</a><br> asyncio: Task, create_task, ensure_future 都可以创建任务，该用哪个？ - 技术改变命运Andy - 博客园 : <a href=\"https://www.cnblogs.com/andy0816/p/15591485.html\">https://www.cnblogs.com/andy0816/p/15591485.html</a><br> python的types模块_python types_XYES@fff的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42604178/article/details/103135121\">https://blog.csdn.net/qq_42604178/article/details/103135121</a><br> Python中的abc模块_python abc_有关心情的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_41359051/article/details/86764867\">https://blog.csdn.net/qq_41359051/article/details/86764867</a><br> coroutine, task, future的理解_future和coroutine_weixin_zdpau的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43938663/article/details/119065195\">https://blog.csdn.net/weixin_43938663/article/details/119065195</a><br> Python的可等待对象在Asyncio的作用 - 掘金 : <a href=\"https://juejin.cn/post/7085256098885681159\">https://juejin.cn/post/7085256098885681159</a><br> 初识Python协程的实现 - So1n blog : <a href=\"https://so1n.me/2021/11/08/%E5%88%9D%E8%AF%86Python%20Async%E7%9A%84%E5%AE%9E%E7%8E%B0/#3-%E5%9F%BA%E4%BA%8E%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E5%8D%8F%E7%A8%8B\">https://so1n.me/2021/11/08/%E5%88%9D%E8%AF%86Python%20Async%E7%9A%84%E5%AE%9E%E7%8E%B0/#3-%E5%9F%BA%E4%BA%8E%E7%94%9F%E6%88%90%E5%99%A8%E7%9A%84%E5%8D%8F%E7%A8%8B</a><br> python awaitable_对于Python中可被await对象的一点研究_weixin_39522170的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_39522170/article/details/111428139\">https://blog.csdn.net/weixin_39522170/article/details/111428139</a><br> 玩转 Python 3.5 的 await&#x2F;async_generalAI的博客-CSDN博客 : <a href=\"https://blog.csdn.net/liujiandu101/article/details/81136537\">https://blog.csdn.net/liujiandu101/article/details/81136537</a><br> 用 Python 3 的 async &#x2F; await 做异步编程_generalAI的博客-CSDN博客 : <a href=\"https://blog.csdn.net/liujiandu101/article/details/81136651\">https://blog.csdn.net/liujiandu101/article/details/81136651</a><br> Python 3 的 async &#x2F; await 做异步编程_小明乐的博客-CSDN博客 : <a href=\"https://blog.csdn.net/catwan/article/details/84976082\">https://blog.csdn.net/catwan/article/details/84976082</a><br> python3 async await yield from 异步编程理解_yangxiaodong88的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yangxiaodong88/article/details/81900985\">https://blog.csdn.net/yangxiaodong88/article/details/81900985</a></p>\n<p> 用 Microdot Python库搭建嵌入式 Web 服务_微头条-今日头条 : <a href=\"https://m.toutiao.com/w/1759772879483908/?app=news_article&amp;timestamp=1678290428&amp;use_new_style=1&amp;share_token=3d8aae41-b18c-4fe6-ba54-c49dacfc80de&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/w/1759772879483908/?app=news_article&amp;timestamp=1678290428&amp;use_new_style=1&amp;share_token=3d8aae41-b18c-4fe6-ba54-c49dacfc80de&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p> Django MySQL REPEATABLE READ“数据丢失”答案 - 爱码网 : <a href=\"https://www.likecs.com/ask-3873024.html\">https://www.likecs.com/ask-3873024.html</a></p>\n<p>  Python多进程同步——文件锁_python windows 文件锁_weixin_45001971的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_45001971/article/details/129009768\">https://blog.csdn.net/weixin_45001971/article/details/129009768</a><br> 【python】详解multiprocessing多进程-Lock、Rlock进程同步（四）_brucewong0516的博客-CSDN博客 : <a href=\"https://blog.csdn.net/brucewong0516/article/details/85798414\">https://blog.csdn.net/brucewong0516/article/details/85798414</a></p>\n<p> Django教程——manage.py命令_django manage.py runserver编辑_xianjie0318的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xianjie0318/article/details/83782072\">https://blog.csdn.net/xianjie0318/article/details/83782072</a><br> django 数据库迁移(migrate)_django migrate_vivian_wanjin的博客-CSDN博客 : <a href=\"https://blog.csdn.net/vivian_wanjin/article/details/83893049\">https://blog.csdn.net/vivian_wanjin/article/details/83893049</a><br> django_migrate&amp;–fake: 迁移回滚&#x2F;重新执行某一次迁移&#x2F;伪回滚迁移(不执行相应的sql操作, 仅修改执行状态标记)_django migrations 回滚_xuchaoxin1375的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xuchaoxin1375/article/details/124925356\">https://blog.csdn.net/xuchaoxin1375/article/details/124925356</a><br> Django2.2中迁移(makemigrations和migrate)的原理和撤销回退操作图文详解_django的migration原理_T型人小付的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Victor2code/article/details/105282826\">https://blog.csdn.net/Victor2code/article/details/105282826</a><br> python manage.py migrate 命令执行失败，不用慌 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/194366330?utm_id=0\">https://zhuanlan.zhihu.com/p/194366330?utm_id=0</a><br> Django migrate –fake 与 –fake-initial_django migrate fake__Angular baby的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Enceladuce/article/details/102785738\">https://blog.csdn.net/Enceladuce/article/details/102785738</a><br> Django（21）migrate报错的解决方案_Silent丿丶黑羽的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43880991/article/details/117102642?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-4-117102642-blog-102785738.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-4-117102642-blog-102785738.wap_relevant_featuresortv7\">https://blog.csdn.net/weixin_43880991/article/details/117102642?spm=1001.2101.3001.6650.4&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-117102642-blog-102785738.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-4-117102642-blog-102785738.wap_relevant_featuresortv7</a><br> Django开发—如何重置migration_django 重新migrate_卓修武的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zhuoxiuwu/article/details/52167599\">https://blog.csdn.net/zhuoxiuwu/article/details/52167599</a><br> django 的 migrations 文件重置管理 - 侃豺小哥 - 博客园 : <a href=\"https://www.cnblogs.com/kcxg/p/12777552.html\">https://www.cnblogs.com/kcxg/p/12777552.html</a><br> Django笔记05：如何悄悄删除migrations下的文件而不引起任何错误 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/55440044?utm_id=0\">https://zhuanlan.zhihu.com/p/55440044?utm_id=0</a><br> django 数据迁移 (migrations)_django migrations_NET安梓晨的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44763552/article/details/114362818\">https://blog.csdn.net/weixin_44763552/article/details/114362818</a><br> Django多人开发模型迁移冲突问题解决 - 掘金 : <a href=\"https://juejin.cn/post/6844904041311387655\">https://juejin.cn/post/6844904041311387655</a><br> Django中的migration冲突处理_django migrate冲突_XM吹雪的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43305207/article/details/84204170\">https://blog.csdn.net/weixin_43305207/article/details/84204170</a></p>\n<p> python黑魔法—上下文管理器（contextor） <a href=\"https://www.jianshu.com/p/d53449f9e7e0\">https://www.jianshu.com/p/d53449f9e7e0</a><br> tornado源码分析（二）异步上下文管理（StackContext）<a href=\"https://www.jianshu.com/p/3e58f977b908\">https://www.jianshu.com/p/3e58f977b908</a><br> tornado.stack_context 模块解析 <a href=\"https://strawhatfy.github.io/2015/07/27/tornado.stack_context/\">https://strawhatfy.github.io/2015/07/27/tornado.stack_context/</a><br> tornado Stack-context-local variable pattern <a href=\"https://github.com/tornadoweb/tornado/issues/1063\">https://github.com/tornadoweb/tornado/issues/1063</a><br> tornado Stack-context-local <a href=\"https://github.com/viewfinderco/viewfinder/blob/master/backend/base/context_local.py\">https://github.com/viewfinderco/viewfinder/blob/master/backend/base/context_local.py</a><br> tornado An example of using a StackContext to store request data <a href=\"https://gist.github.com/simon-weber/7755289\">https://gist.github.com/simon-weber/7755289</a></p>\n<p> (转)Python中的上下文管理器和Tornado对其的巧妙应用 - liujiacai - 博客园 : <a href=\"https://www.cnblogs.com/liujiacai/p/10388771.html\">https://www.cnblogs.com/liujiacai/p/10388771.html</a><br> 「Python进阶 #1」上下文管理器Context Manager - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/385045365?utm_id=0\">https://zhuanlan.zhihu.com/p/385045365?utm_id=0</a><br> Tornado源码分析（二）异步上下文管理（StackContext） - 人世间 - 简书 : <a href=\"https://www.jianshu.com/p/3e58f977b908#1679798894800\">https://www.jianshu.com/p/3e58f977b908#1679798894800</a><br> Python协程中使用上下文 - 不写日记 - 博客园 : <a href=\"https://www.cnblogs.com/mithrilon/p/9934660.html\">https://www.cnblogs.com/mithrilon/p/9934660.html</a></p>\n<p> numpy与pandas各种功能及其对比（超全）_numpy pandas_阿丢是丢心心的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_41168304/article/details/123384713\">https://blog.csdn.net/weixin_41168304/article/details/123384713</a></p>\n<p> GitHub - DanielJDufour&#x2F;date-extractor: Extract dates from text : <a href=\"https://github.com/DanielJDufour/date-extractor\">https://github.com/DanielJDufour/date-extractor</a><br> GitHub - akoumjian&#x2F;datefinder: Find dates inside text using Python and get back datetime objects : <a href=\"https://github.com/akoumjian/datefinder\">https://github.com/akoumjian/datefinder</a><br> python3 logging日志切割_kamactor的博客-CSDN博客 : <a href=\"https://blog.csdn.net/kamactor/article/details/106787476\">https://blog.csdn.net/kamactor/article/details/106787476</a><br> Python多进程不要使用TimedRotatingFileHandler_yongche_shi的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yongche_shi/article/details/49890103\">https://blog.csdn.net/yongche_shi/article/details/49890103</a><br> GitHub - mpasternacki&#x2F;ConcurrentLogHandler: Fork of <a href=\"http://pypi.python.org/pypi/ConcurrentLogHandler/\">http://pypi.python.org/pypi/ConcurrentLogHandler/</a> : <a href=\"https://github.com/mpasternacki/ConcurrentLogHandler\">https://github.com/mpasternacki/ConcurrentLogHandler</a><br> python并发logging：ConcurrentTimedRotatingFileHandler - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/431789495?utm_id=0\">https://zhuanlan.zhihu.com/p/431789495?utm_id=0</a><br> python 多进程下按天分割日志handler。ConcurrentDayRotatingFileHandler - 北风之神0509 - 博客园 : <a href=\"https://www.cnblogs.com/ydf0509/p/15163551.html\">https://www.cnblogs.com/ydf0509/p/15163551.html</a><br> Python TimedRotatingFileHandler 多进程环境下的问题和解决方法（如flask logging按时间自动切割）_craftsman2020的博客-CSDN博客 : <a href=\"https://blog.csdn.net/craftsman2020/article/details/113745255\">https://blog.csdn.net/craftsman2020/article/details/113745255</a></p>\n<p>python黑魔法—上下文管理器（contextor） - 人世间 - 简书 : <a href=\"https://www.jianshu.com/p/d53449f9e7e0#1681237766079\">https://www.jianshu.com/p/d53449f9e7e0#1681237766079</a><br> Tornado源码分析（二）异步上下文管理（StackContext） - 人世间 - 简书 : <a href=\"https://www.jianshu.com/p/3e58f977b908#1681237738375\">https://www.jianshu.com/p/3e58f977b908#1681237738375</a><br> tornado stackcontext解析 - VxCoder - 简书 : <a href=\"https://www.jianshu.com/p/8fc511727b1c\">https://www.jianshu.com/p/8fc511727b1c</a><br> tornado.stack_context 模块解析 | 书影 : <a href=\"https://strawhatfy.github.io/2015/07/27/tornado.stack_context/\">https://strawhatfy.github.io/2015/07/27/tornado.stack_context/</a><br> tornado stackcontext解析 | 码农家园 : <a href=\"https://www.codenong.com/js8fc511727b1c/\">https://www.codenong.com/js8fc511727b1c/</a><br> Tornado 之StackContext - 邹雷 : <a href=\"http://ficapy.github.io/2018/03/16/Tornado_StackContext/\">http://ficapy.github.io/2018/03/16/Tornado_StackContext/</a><br> tornado 源码之 StackContext（二）_普通网友的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_33800593/article/details/91426983\">https://blog.csdn.net/weixin_33800593/article/details/91426983</a><br> Stack-context-local variable pattern · Issue #1063 · tornadoweb&#x2F;tornado · GitHub : <a href=\"https://github.com/tornadoweb/tornado/issues/1063\">https://github.com/tornadoweb/tornado/issues/1063</a><br> Python3.7 contextvars 上下文环境变量详解（代码演示）_hpulfc的博客-CSDN博客 : <a href=\"https://blog.csdn.net/hpulfc/article/details/113436108\">https://blog.csdn.net/hpulfc/article/details/113436108</a><br> Tornado 5.1的新功能 — Tornado 6.2.dev1 文档 : <a href=\"https://www.osgeo.cn/tornado/releases/v5.1.0.html\">https://www.osgeo.cn/tornado/releases/v5.1.0.html</a><br> 什么新的龙卷风6.0 — Tornado 6.2.dev1 文档 : <a href=\"https://www.osgeo.cn/tornado/releases/v6.1.0.html\">https://www.osgeo.cn/tornado/releases/v6.1.0.html</a><br> Python怎么利用contextvars实现管理上下文变量-Python教程-PHP中文网 : <a href=\"https://m.php.cn/article/494508.html\">https://m.php.cn/article/494508.html</a><br> Python使用contextvars模块传递上下文的底层原理_聆听–风雨的博客-CSDN博客 : <a href=\"https://blog.csdn.net/luchengtao11/article/details/126442670\">https://blog.csdn.net/luchengtao11/article/details/126442670</a></p>\n<p> Python <strong>future</strong> 模块_python的future模块_exuan00的博客-CSDN博客 : <a href=\"https://blog.csdn.net/m0_57845572/article/details/116596146\">https://blog.csdn.net/m0_57845572/article/details/116596146</a><br> python 中的__future__模块_python的future模块_Wanderer001的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_36670529/article/details/86238610?spm=1001.2101.3001.6650.6&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6-86238610-blog-116596146.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-6-86238610-blog-116596146.wap_relevant_t0_download\">https://blog.csdn.net/weixin_36670529/article/details/86238610?spm=1001.2101.3001.6650.6&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-6-86238610-blog-116596146.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-6-86238610-blog-116596146.wap_relevant_t0_download</a><br> Python – import 和 from …import… 的区别_import和from import有什么区别_樱花树上的alien的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_38630100/article/details/80808757\">https://blog.csdn.net/qq_38630100/article/details/80808757</a><br> python包导入方式import 和from import的区别和一些注意事项_from和import区别_caixxiong的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_24406903/article/details/98725931?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-98725931-blog-80808757.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-7-98725931-blog-80808757.wap_relevant_t0_download\">https://blog.csdn.net/qq_24406903/article/details/98725931?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-98725931-blog-80808757.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-7-98725931-blog-80808757.wap_relevant_t0_download</a><br> python中import和from import的区别_姜亚轲的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_41656968/article/details/80210045?spm=1001.2101.3001.6650.10&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-80210045-blog-80808757.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-10-80210045-blog-80808757.wap_relevant_t0_download\">https://blog.csdn.net/weixin_41656968/article/details/80210045?spm=1001.2101.3001.6650.10&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-80210045-blog-80808757.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-10-80210045-blog-80808757.wap_relevant_t0_download</a><br> 【笔记13】完美解决了！关于python的相对导入和绝对导入_occamo的博客-CSDN博客 : <a href=\"https://blog.csdn.net/occamo/article/details/90182934\">https://blog.csdn.net/occamo/article/details/90182934</a><br> python中的import涉及的绝对&#x2F;相对引用（python官方PEP328文档）_python import 绝对引用_heminhao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/heminhao/article/details/73188584?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-2-73188584-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-2-73188584-blog-90182934.wap_relevant_t0_download\">https://blog.csdn.net/heminhao/article/details/73188584?spm=1001.2101.3001.6650.2&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-73188584-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-2-73188584-blog-90182934.wap_relevant_t0_download</a><br> 详解Python中的相对导入和绝对导入_杨过悔的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u013571243/article/details/77734346?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-77734346-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-77734346-blog-90182934.wap_relevant_t0_download\">https://blog.csdn.net/u013571243/article/details/77734346?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-77734346-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-77734346-blog-90182934.wap_relevant_t0_download</a><br> Python的绝对引用 vs 相对引用全面讲解_python绝对引用_我是Roger的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ning13481193737/article/details/107165586?spm=1001.2101.3001.6650.9&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-9-107165586-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-9-107165586-blog-90182934.wap_relevant_t0_download\">https://blog.csdn.net/ning13481193737/article/details/107165586?spm=1001.2101.3001.6650.9&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-107165586-blog-90182934.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-9-107165586-blog-90182934.wap_relevant_t0_download</a><br> 30、python导入包和子包_python导入子包_zhaopeng01zp的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zhaopeng01zp/article/details/109303320\">https://blog.csdn.net/zhaopeng01zp/article/details/109303320</a><br> Python——模块(Module)和包（Package）_Eden朱的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qiqicos/article/details/79208039\">https://blog.csdn.net/qiqicos/article/details/79208039</a><br> Python的包(package)和模块(module)的区别，如何导入python包和模块，以及为什么可以把包名当作一个模块导入_python package 知乎_TylerDu的博客-CSDN博客 : <a href=\"https://blog.csdn.net/TylerDu/article/details/107359152\">https://blog.csdn.net/TylerDu/article/details/107359152</a><br> Python的模块(module)和包(package)<em>python包和模块_软件开发技术爱好者的博客-CSDN博客 : <a href=\"https://blog.csdn.net/cnds123/article/details/127222567\">https://blog.csdn.net/cnds123/article/details/127222567</a><br> python的模块(module)和包(package)<em>python的module怎么用_焱齿的博客-CSDN博客 : <a href=\"https://blog.csdn.net/mijichui2153/article/details/106456864\">https://blog.csdn.net/mijichui2153/article/details/106456864</a><br> python 常用的内置模块_阿紫_PP的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ruanxingzi123/article/details/82787852\">https://blog.csdn.net/ruanxingzi123/article/details/82787852</a><br> Python 标准库 — Python 3.7.13 文档 : <a href=\"https://docs.python.org/zh-cn/3.7/library/index.html\">https://docs.python.org/zh-cn/3.7/library/index.html</a><br> Python 包 <strong>init</strong>.py文件用法详解_COCO56（徐可可）的博客-CSDN博客 : <a href=\"https://blog.csdn.net/COCO56/article/details/103856675\">https://blog.csdn.net/COCO56/article/details/103856675</a><br> Python3中__init</em></em>.py文件介绍_fengbingchun的博客-CSDN博客 : <a href=\"https://blog.csdn.net/fengbingchun/article/details/120873371?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-120873371-blog-103856675.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-120873371-blog-103856675.wap_relevant_t0_download\">https://blog.csdn.net/fengbingchun/article/details/120873371?spm=1001.2101.3001.6650.7&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-120873371-blog-103856675.wap_relevant_t0_download&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-120873371-blog-103856675.wap_relevant_t0_download</a></p>\n<p> 2021年开发Python图形用户界面（GUI）的6种最佳Python GUI框架_xyzhan的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xyzhan/article/details/113856833\">https://blog.csdn.net/xyzhan/article/details/113856833</a></p>\n<p> Python 之 拦截器(拦截属性或者方法)_python 拦截函数_路人王_Zz的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42143003/article/details/91347039\">https://blog.csdn.net/weixin_42143003/article/details/91347039</a><br> python 类方法__call__拦截调用实例介绍_weixin_34284188的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_34284188/article/details/94480118\">https://blog.csdn.net/weixin_34284188/article/details/94480118</a><br> python __getattribute__、__getattr__、__setattr__详解 - 漫漫芜 - 博客园 : <a href=\"https://www.cnblogs.com/sheshouxin/p/10448056.html\">https://www.cnblogs.com/sheshouxin/p/10448056.html</a><br> python 类方法__call__拦截调用实例介绍 - huhuchen - 博客园 : <a href=\"https://www.cnblogs.com/huhuchen/archive/2012/05/07/2486951.html\">https://www.cnblogs.com/huhuchen/archive/2012/05/07/2486951.html</a><br> python总结(五)：__get__、__getattr__、__getitem__、__getattribute__之间的差异与联系_蚁方阵的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yiifaa/article/details/78068962\">https://blog.csdn.net/yiifaa/article/details/78068962</a><br> Python判断对象是否是function的三种方法_python 判断是否为function_蚁方阵的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yiifaa/article/details/78046331\">https://blog.csdn.net/yiifaa/article/details/78046331</a><br> Python 方法调用机制_python调用一个方法_Marionette的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yuxinleipp/article/details/7869290\">https://blog.csdn.net/yuxinleipp/article/details/7869290</a><br> 深入理解 GIL：如何写出高性能及线程安全的 Python 代码 - ryxiong728 - 博客园 : <a href=\"https://www.cnblogs.com/ryxiong-blog/p/10730085.html\">https://www.cnblogs.com/ryxiong-blog/p/10730085.html</a><br> 浅析Python的GIL和线程安全_python gil 不安全_qingyang1014的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qingyang1014/article/details/38083957\">https://blog.csdn.net/qingyang1014/article/details/38083957</a><br> Python | GIL锁 | 5分钟掌握【全局解释器锁】(GIL)_全能成的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_29654325/article/details/128850131\">https://blog.csdn.net/qq_29654325/article/details/128850131</a><br> 聊聊Python中的GIL - 青山牧云人 - 博客园 : <a href=\"https://www.cnblogs.com/ArsenalfanInECNU/p/9968621.html\">https://www.cnblogs.com/ArsenalfanInECNU/p/9968621.html</a><br> Python中的多线程编程，线程安全与锁(一) - 青山牧云人 - 博客园 : <a href=\"https://www.cnblogs.com/ArsenalfanInECNU/p/10022740.html#:~:text=Python%E7%9A%84G\">https://www.cnblogs.com/ArsenalfanInECNU/p/10022740.html#:~:text=Python%E7%9A%84G</a>, %E6%9D%A5%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E3%80%82<br> Python 的 GIL 能保证线程安全么？ - 知乎 : <a href=\"https://www.zhihu.com/question/521650365?utm_id=0\">https://www.zhihu.com/question/521650365?utm_id=0</a><br> [python笔记] Gil全局解释锁和线程互斥锁的关系_python gil锁和互斥锁关系_simuLeo的博客-CSDN博客 : <a href=\"https://blog.csdn.net/simuLeo/article/details/80066870\">https://blog.csdn.net/simuLeo/article/details/80066870</a><br> 操作系统OS，Python - 有了GIL为什么还要threading. Lock()?<em>anchenhe9360的博客-CSDN博客 : <a href=\"https://blog.csdn.net/anchenhe9360/article/details/102247640\">https://blog.csdn.net/anchenhe9360/article/details/102247640</a><br> 既然有GIL了那么为什么在python中多线程编码时候还需要加锁？_python有gil为什么还需要线程锁_bdss58的博客-CSDN博客 : <a href=\"https://blog.csdn.net/bdss58/article/details/104069418\">https://blog.csdn.net/bdss58/article/details/104069418</a><br> Python有GIL为什么还需要线程同步？ - 知乎 : <a href=\"https://www.zhihu.com/question/23030421?utm_id=0\">https://www.zhihu.com/question/23030421?utm_id=0</a><br> 15. python数据类型转换_python隐式转换</em>@十三阿哥的博客-CSDN博客 : <a href=\"https://blog.csdn.net/TianYanRen111/article/details/128747969\">https://blog.csdn.net/TianYanRen111/article/details/128747969</a><br> 【Python 2.7】str和unicode的互相转换，摘自《Effective Python》_python2 str转unicode_寒泉Hq的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sinat_42483341/article/details/103648807\">https://blog.csdn.net/sinat_42483341/article/details/103648807</a><br> Python常见字符编码间的转换教程_python str转unicode_Python热爱者的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qdPython/article/details/127731095?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-127731095-blog-103648807.237%5Ev3%5Ewap_relevant_t0_download&amp;spm=1001.2101.3001.4242.1\">https://blog.csdn.net/qdPython/article/details/127731095?utm_medium=distribute.wap_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-127731095-blog-103648807.237^v3^wap_relevant_t0_download&amp;spm=1001.2101.3001.4242.1</a><br> python中str字符串和unicode对象字符串的拼接_python utf-8格式读取字符串拼上其他字符串_学悟止境的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43838830/article/details/97109101\">https://blog.csdn.net/weixin_43838830/article/details/97109101</a><br> Python_关于python2的encode（编码）和decode（解码）的使用 - 不自在 - 博客园 : <a href=\"https://www.cnblogs.com/testlearn/p/15458893.html\">https://www.cnblogs.com/testlearn/p/15458893.html</a><br> Python—编码与解码（encode()和decode()） - 刘_love_田 - 博客园 : <a href=\"https://www.cnblogs.com/liuhaidon/p/11580829.html\">https://www.cnblogs.com/liuhaidon/p/11580829.html</a><br> python中编解码以及sys.setdefaultencoding(‘utf-8‘)的作用_python sys setencode_longlovefilm的博客-CSDN博客 : <a href=\"https://blog.csdn.net/longlovefilm/article/details/113866889\">https://blog.csdn.net/longlovefilm/article/details/113866889</a><br> python中文编码问题：print打印中文异常及显示乱码问题分析与解决_python打印exception异常返回的中文_董公子的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_26580757/article/details/79922043\">https://blog.csdn.net/qq_26580757/article/details/79922043</a><br> python3.x设置默认编码(sys.stdout.encoding和sys.defaultencoding) - vocus - 博客园 : <a href=\"https://www.cnblogs.com/vocus/p/11416022.html\">https://www.cnblogs.com/vocus/p/11416022.html</a></p>\n<h1 id=\"JavaScript\"><a href=\"#JavaScript\" class=\"headerlink\" title=\"JavaScript\"></a>JavaScript</h1><p>js 判空 <a href=\"https://blog.csdn.net/z591102/article/details/106162090\">https://blog.csdn.net/z591102/article/details/106162090</a><br>js undefined和null <a href=\"https://blog.csdn.net/weixin_42118462/article/details/109258072\">https://blog.csdn.net/weixin_42118462/article/details/109258072</a><br>js中的Truthy、Falsy、Boolean <a href=\"https://blog.csdn.net/qq_42449963/article/details/109118033\">https://blog.csdn.net/qq_42449963/article/details/109118033</a><br>js 类型转换 <a href=\"https://blog.csdn.net/imagine_tion/article/details/113961550\">https://blog.csdn.net/imagine_tion/article/details/113961550</a><br>js 隐式转换 <a href=\"https://blog.csdn.net/fesfsefgs/article/details/109101502\">https://blog.csdn.net/fesfsefgs/article/details/109101502</a><br>js 操作符和隐式转换 <a href=\"https://blog.csdn.net/Dreamy_LIN/article/details/111595760\">https://blog.csdn.net/Dreamy_LIN/article/details/111595760</a><br>js 相等比较原理 <a href=\"https://blog.csdn.net/luckydie/article/details/77948097\">https://blog.csdn.net/luckydie/article/details/77948097</a></p>\n<p>JS：Web Worker : <a href=\"https://blog.csdn.net/qq_28387069/article/details/112316133\">https://blog.csdn.net/qq_28387069/article/details/112316133</a><br>js异步机制、事件循环、Promise执行顺序 : <a href=\"https://blog.csdn.net/buppt/article/details/78717318\">https://blog.csdn.net/buppt/article/details/78717318</a><br>【JS】postMessage 用法 : <a href=\"https://blog.csdn.net/qq_45677671/article/details/128238860\">https://blog.csdn.net/qq_45677671/article/details/128238860</a><br>js跨域 : <a href=\"https://blog.csdn.net/lareinalove/article/details/84107476\">https://blog.csdn.net/lareinalove/article/details/84107476</a></p>\n<p>ES6中的箭头函数详细梳理 <a href=\"https://blog.csdn.net/weixin_45709829/article/details/123931582\">https://blog.csdn.net/weixin_45709829/article/details/123931582</a><br>ES6解构赋值及ES6的一些简写介绍 <a href=\"https://blog.csdn.net/a1598452168YY/article/details/127573065\">https://blog.csdn.net/a1598452168YY/article/details/127573065</a><br>1.5万字概括ES6全部特性 <a href=\"https://blog.csdn.net/qq_41581588/article/details/125931173\">https://blog.csdn.net/qq_41581588/article/details/125931173</a> </p>\n<p>require和import的区别 <a href=\"https://blog.csdn.net/wwf1225/article/details/124150794\">https://blog.csdn.net/wwf1225/article/details/124150794</a><br>vue中require与import之间的区别 <a href=\"https://blog.csdn.net/caseywei/article/details/90710749\">https://blog.csdn.net/caseywei/article/details/90710749</a><br>vue中require与import的区别 <a href=\"https://blog.csdn.net/weixin_38633659/article/details/124373875\">https://blog.csdn.net/weixin_38633659/article/details/124373875</a><br>module.exports、exports、export都是导出，有何区别？ <a href=\"https://blog.csdn.net/qq_15589375/article/details/123476690\">https://blog.csdn.net/qq_15589375/article/details/123476690</a><br>前端模块化CommonJS、AMD、CMD、ES6 <a href=\"https://blog.csdn.net/weixin_45709829/article/details/124310873\">https://blog.csdn.net/weixin_45709829/article/details/124310873</a><br>AMD、CMD、CommonJS、ES6 <a href=\"https://blog.csdn.net/LinBM123/article/details/121415060\">https://blog.csdn.net/LinBM123/article/details/121415060</a><br>js模块化，理解AMD, CommonJS和es6 <a href=\"https://blog.csdn.net/aiyang1214878408/article/details/124704443\">https://blog.csdn.net/aiyang1214878408/article/details/124704443</a><br>传统js, commonJs, AMD(requireJs), ES6对比 <a href=\"https://blog.csdn.net/qq_34345149/article/details/125742218\">https://blog.csdn.net/qq_34345149/article/details/125742218</a><br>JS类型提示 <a href=\"https://segmentfault.com/a/1190000018425043\">https://segmentfault.com/a/1190000018425043</a><br>JS类型提示 <a href=\"https://blog.csdn.net/Y_Z233/article/details/125450058\">https://blog.csdn.net/Y_Z233/article/details/125450058</a><br>如何在JavaScript中列出对象的所有方法 <a href=\"https://blog.csdn.net/cuk0051/article/details/108343332\">https://blog.csdn.net/cuk0051/article/details/108343332</a></p>\n<p>​ JavaScript选择 map而非对象(object)存储键值对的 5 个理由附示例-今日头条 : <a href=\"https://m.toutiao.com/article/7192917064695251489/?app=news_article&amp;timestamp=1677402671&amp;use_new_style=1&amp;req_id=20230226171111E21B574AD697C7B1FA3B&amp;group_id=7192917064695251489&amp;share_token=70e1f58e-1381-4043-a3c2-9aa5a3c06dcb&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7192917064695251489/?app=news_article&amp;timestamp=1677402671&amp;use_new_style=1&amp;req_id=20230226171111E21B574AD697C7B1FA3B&amp;group_id=7192917064695251489&amp;share_token=70e1f58e-1381-4043-a3c2-9aa5a3c06dcb&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a><br>​ JS基础篇1：数据类型（8种）_帅帅哥的兜兜的博客-CSDN博客_js数据类型 : <a href=\"https://blog.csdn.net/u013592575/article/details/95087953\">https://blog.csdn.net/u013592575/article/details/95087953</a></p>\n<p>JS精度丢失导致的问题及解决_赵乘风_i的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zr15829039341/article/details/102532033\">https://blog.csdn.net/zr15829039341/article/details/102532033</a><br>​ 前端如何解决long型在js中精度丢失的问题_老实人老王的博客-CSDN博客_js不识别long : <a href=\"https://blog.csdn.net/WANG_AFei/article/details/105026054\">https://blog.csdn.net/WANG_AFei/article/details/105026054</a><br>​ JS的Number限制 - 如何解决JSON序列化大数精度问题_json number范围_Zong_0915的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Zong_0915/article/details/122533755\">https://blog.csdn.net/Zong_0915/article/details/122533755</a></p>\n<p>JS的console中log和dir的区别_小鹰丶的博客-CSDN博客_dir和log区别 : <a href=\"https://blog.csdn.net/jeremyjone/article/details/93041139\">https://blog.csdn.net/jeremyjone/article/details/93041139</a><br>​ js中typeof与instanceof用法_书香水墨的博客-CSDN博客_js typeof instanceof : <a href=\"https://blog.csdn.net/qq_27870421/article/details/89462592\">https://blog.csdn.net/qq_27870421/article/details/89462592</a></p>\n<p>Day.js替代moment.js_GuaX的博客-CSDN博客 : <a href=\"https://blog.csdn.net/m0_37714008/article/details/109025988\">https://blog.csdn.net/m0_37714008/article/details/109025988</a><br>​ Moment.js &amp; Day.js 时间日期类库_超悠閒的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44691608/article/details/117139194\">https://blog.csdn.net/weixin_44691608/article/details/117139194</a></p>\n<p>Chrome DevTools 使用详解 <a href=\"https://blog.csdn.net/hello_sgw/article/details/79618080\">https://blog.csdn.net/hello_sgw/article/details/79618080</a><br>Chrome DevTools 使用技巧 <a href=\"https://blog.csdn.net/c2682736/article/details/118915050\">https://blog.csdn.net/c2682736/article/details/118915050</a><br>Chrome console技巧 <a href=\"https://blog.csdn.net/sshuai131400/article/details/121134005\">https://blog.csdn.net/sshuai131400/article/details/121134005</a></p>\n<p>前端构建工具进化历程-今日头条 : <a href=\"https://m.toutiao.com/article/7205749323945181708/?app=news_article&amp;timestamp=1678273594&amp;use_new_style=1&amp;req_id=202303081906338CBCBC29300E810725E9&amp;group_id=7205749323945181708&amp;share_token=0b00f0b6-b335-4fe9-b582-2d6a36b86e4b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7205749323945181708/?app=news_article&amp;timestamp=1678273594&amp;use_new_style=1&amp;req_id=202303081906338CBCBC29300E810725E9&amp;group_id=7205749323945181708&amp;share_token=0b00f0b6-b335-4fe9-b582-2d6a36b86e4b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a><br> 前端模块化：CommonJS, AMD, CMD, ES6 - 掘金 : <a href=\"https://juejin.cn/post/6844903576309858318\">https://juejin.cn/post/6844903576309858318</a><br> 前端模块化之CommonJS，ES6 Module，AMD和require.js，CMD和sea.js__Boboy的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43720095/article/details/106114267\">https://blog.csdn.net/weixin_43720095/article/details/106114267</a><br> Vue - 5 - 模块化 - commonJS、ES6-Modules、webpack、工程目录、（处理：css、less、图片、vue、搭建服务器）_骆言的博客-CSDN博客 : <a href=\"https://blog.csdn.net/LawssssCat/article/details/104576783\">https://blog.csdn.net/LawssssCat/article/details/104576783</a><br> 从vue引出的前端基础概念梳理–JavaScript、ES6、node、npm、webpack、CommonJS_会飞的鱼_fly的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u011244839/article/details/103654979\">https://blog.csdn.net/u011244839/article/details/103654979</a><br> webpack es6、commonjs模块混合打包分析 - 掘金 : <a href=\"https://juejin.cn/post/6844903550951096327\">https://juejin.cn/post/6844903550951096327</a><br> __esModule是神马东西？CommonJS与ES Module的混用_51CTO博客_commonjs和esmodule : <a href=\"https://blog.51cto.com/u_14180083/5105904\">https://blog.51cto.com/u_14180083/5105904</a><br> NodeJS 中 CommonJS 和 ESModule 混用时的各种坑解决方案 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/494658959?utm_id=0\">https://zhuanlan.zhihu.com/p/494658959?utm_id=0</a></p>\n<p> ES6中（?.、??）运算符的使用 - NemoExpress - 简书 : <a href=\"https://www.jianshu.com/p/358126918b4a#1678597959394\">https://www.jianshu.com/p/358126918b4a#1678597959394</a><br> ES6中js的运算符（?.、?:、? ?、? ?&#x3D;、）_js ?? 和?. 运算符 是es几_小靳小盆友i. 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ShIcily/article/details/121673976\">https://blog.csdn.net/ShIcily/article/details/121673976</a></p>\n<p> 大前端之SPA、SSR、CSR - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/299598903?utm_id=0\">https://zhuanlan.zhihu.com/p/299598903?utm_id=0</a><br> 大前端之SPA、SSR、CSR_csr spa_顺其自然~的博客-CSDN博客 : <a href=\"https://blog.csdn.net/fuhanghang/article/details/124114835\">https://blog.csdn.net/fuhanghang/article/details/124114835</a></p>\n<p>css盒模型（css的两种盒模型：标准盒模型、怪异盒模型）和 css3指定盒子模型种类的box-sizing属性_有蝉的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37899792/article/details/90019385\">https://blog.csdn.net/qq_37899792/article/details/90019385</a><br> Grid vs Flexbox：哪个更好？_flex和grid哪个好_杭州程序员张张的博客-CSDN博客 : <a href=\"https://blog.csdn.net/duninet/article/details/117340363\">https://blog.csdn.net/duninet/article/details/117340363</a></p>\n<p>ES6、ES7、ES8、ES9、ES10新特性一览 <a href=\"https://blog.csdn.net/qq_34586870/article/details/89515336\">https://blog.csdn.net/qq_34586870/article/details/89515336</a><br>高性能的js第三方库——lodash、 Underscore、async、md5及moment <a href=\"https://www.cnblogs.com/wheatCatcher/p/11345141.html\">https://www.cnblogs.com/wheatCatcher/p/11345141.html</a></p>\n<p>Sass 、Scss、LESS 和 Stylus区别总结 <a href=\"https://blog.csdn.net/qq_35430000/article/details/87097696\">https://blog.csdn.net/qq_35430000/article/details/87097696</a><br>EJS模板引擎 <a href=\"https://blog.csdn.net/lhrdlp/article/details/105856115\">https://blog.csdn.net/lhrdlp/article/details/105856115</a></p>\n<p>vue的axios使用post时必须使用qs.stringify而get不用 <a href=\"https://blog.csdn.net/weixin_44518466/article/details/107021503\">https://blog.csdn.net/weixin_44518466/article/details/107021503</a></p>\n<p>10个超级有用的Web开发Github仓库-今日头条 : <a href=\"https://m.toutiao.com/article/7201860612690395703/?app=news_article&amp;timestamp=1677330629&amp;use_new_style=1&amp;req_id=20230225211028F88F1BB855AB1C73B8AC&amp;group_id=7201860612690395703&amp;share_token=65c9b9e8-da0c-48dc-8b12-bcb97a1f1a6e&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7201860612690395703/?app=news_article&amp;timestamp=1677330629&amp;use_new_style=1&amp;req_id=20230225211028F88F1BB855AB1C73B8AC&amp;group_id=7201860612690395703&amp;share_token=65c9b9e8-da0c-48dc-8b12-bcb97a1f1a6e&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p>用过 Pinia 后 Vuex 都不香了-今日头条 : <a href=\"https://m.toutiao.com/article/7221749692462498336/?app=news_article&amp;timestamp=1681753427&amp;use_new_style=1&amp;req_id=202304180143478D6D1E5589C76920E816&amp;group_id=7221749692462498336&amp;share_token=d482d859-15d5-496e-9f41-948a3d4c5f50&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7221749692462498336/?app=news_article&amp;timestamp=1681753427&amp;use_new_style=1&amp;req_id=202304180143478D6D1E5589C76920E816&amp;group_id=7221749692462498336&amp;share_token=d482d859-15d5-496e-9f41-948a3d4c5f50&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p>h5页面 html, h5页面和普通页面的区别是什么_weixin_39860201的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_39860201/article/details/117781565\">https://blog.csdn.net/weixin_39860201/article/details/117781565</a><br> PC, H5, APP的概念和区别_h5端_生命不息战斗不止(王子晗)的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wwwwwww31311/article/details/119388800\">https://blog.csdn.net/wwwwwww31311/article/details/119388800</a><br> Web前端与HTML5有什么区别，百分之八十的人分不清_web端和h5端的区别_程序员的小傲娇的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xiaoxijinger/article/details/121487719\">https://blog.csdn.net/xiaoxijinger/article/details/121487719</a><br> 原生页面与H5页面区别_lucky_girl11的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lucky_girl11/article/details/72722507\">https://blog.csdn.net/lucky_girl11/article/details/72722507</a><br> H5页面与原生页面的区别_原生页面和h5页面区别_北岛凉音的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44318891/article/details/108341573\">https://blog.csdn.net/weixin_44318891/article/details/108341573</a><br> h5和web前端的区别_h5页面和web页面的区别_huayang183的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_18671415/article/details/114284241\">https://blog.csdn.net/qq_18671415/article/details/114284241</a><br> 【笔记】h5和web的区别_h5页面和web页面的区别_西伯利亚的飘雪的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43348322/article/details/126440910\">https://blog.csdn.net/weixin_43348322/article/details/126440910</a><br> H5 手机 App 开发入门：概念篇 - 阮一峰的网络日志 : <a href=\"https://ruanyifeng.com/blog/2019/12/hybrid-app-concepts.html\">https://ruanyifeng.com/blog/2019/12/hybrid-app-concepts.html</a><br> H5初体验~一个新手H5前端开发的笔记_h5开发_小白Rachel的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Sabrina_cc/article/details/119863037\">https://blog.csdn.net/Sabrina_cc/article/details/119863037</a><br> H5前端开发入门学习（基于vs+vue开发）<em>vs开发h5_GL_陈凯的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_30304193/article/details/82700842\">https://blog.csdn.net/qq_30304193/article/details/82700842</a><br> 最详细H5新特性</em>#15E4EB的博客-CSDN博客 : <a href=\"https://blog.csdn.net/m0_52622108/article/details/125094331\">https://blog.csdn.net/m0_52622108/article/details/125094331</a><br> HTML5—-响应式（自适应）网页设计（自动适应屏幕大小）_网页自适应_规则固态长方体物质空间移动工程师的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40164190/article/details/83089459\">https://blog.csdn.net/qq_40164190/article/details/83089459</a></p>\n<p> cookie、sessionStorage和localStorage的区别_殇陌离tk的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42614080/article/details/90706499\">https://blog.csdn.net/weixin_42614080/article/details/90706499</a><br> JS 详解 Cookie、 LocalStorage 与 SessionStorage - 狂奔的小马扎 - 博客园 : <a href=\"https://www.cnblogs.com/minigrasshopper/p/8064367.html\">https://www.cnblogs.com/minigrasshopper/p/8064367.html</a></p>\n<p> 如何理解 JavaScript 中的闭包？-今日头条 : <a href=\"https://m.toutiao.com/article/7220624569965888011/?app=news_article&amp;timestamp=1682007950&amp;use_new_style=1&amp;req_id=202304210025505EFA3B77A241BA679002&amp;group_id=7220624569965888011&amp;share_token=fe5944ad-962d-45f2-9756-d2a5eb1e6d27&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7220624569965888011/?app=news_article&amp;timestamp=1682007950&amp;use_new_style=1&amp;req_id=202304210025505EFA3B77A241BA679002&amp;group_id=7220624569965888011&amp;share_token=fe5944ad-962d-45f2-9756-d2a5eb1e6d27&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p> 「前端」万字详文：深入理解浏览器原理-今日头条 : <a href=\"https://m.toutiao.com/article/7223955496175174159/?app=news_article&amp;timestamp=1682051042&amp;use_new_style=1&amp;req_id=202304211224017DD6DBBA95B9CB86113C&amp;group_id=7223955496175174159&amp;share_token=452707e8-1e7d-4f80-a402-a06ff4ed9755&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7223955496175174159/?app=news_article&amp;timestamp=1682051042&amp;use_new_style=1&amp;req_id=202304211224017DD6DBBA95B9CB86113C&amp;group_id=7223955496175174159&amp;share_token=452707e8-1e7d-4f80-a402-a06ff4ed9755&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a><br> Vite 配置代理 Proxy，Vue配置代理，解决前端跨域_vite proxy_lethe_R的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_45787691/article/details/128074655\">https://blog.csdn.net/qq_45787691/article/details/128074655</a><br> IDEA安装spotbugs插件替代findbugs插件_luffy5459的博客-CSDN博客 : <a href=\"https://blog.csdn.net/feinifi/article/details/130179524\">https://blog.csdn.net/feinifi/article/details/130179524</a></p>\n<p> vue3与vue2的区别（你不知道细节全在这）_vue3和vue2最大的区别_BiKABi的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43932097/article/details/121512132\">https://blog.csdn.net/weixin_43932097/article/details/121512132</a></p>\n<p>forEach、for in 、 for of三者的区别 <a href=\"https://blog.csdn.net/one_girl/article/details/80192899\">https://blog.csdn.net/one_girl/article/details/80192899</a><br>遍历数组的方法 <a href=\"https://blog.csdn.net/s_y_w123/article/details/109615968\">https://blog.csdn.net/s_y_w123/article/details/109615968</a></p>\n<p>为什么文件URL以3斜杠开头 <a href=\"https://qastack.cn/superuser/352133/why-do-file-urls-start-with-3-slashes\">https://qastack.cn/superuser/352133/why-do-file-urls-start-with-3-slashes</a><br>href 路径 空, &#x2F;, .&#x2F;, ..&#x2F;, &#x2F;&#x2F; 开头的不同情况 <a href=\"https://blog.csdn.net/weixin_42508745/article/details/82628353\">https://blog.csdn.net/weixin_42508745/article/details/82628353</a></p>\n<p> Angular之父为什么怼React？-今日头条 : <a href=\"https://m.toutiao.com/article/7230993760589464075/?app=news_article&amp;timestamp=1683651478&amp;use_new_style=1&amp;req_id=20230510005757F19F70571DD2A5720370&amp;group_id=7230993760589464075&amp;share_token=fc15f4b0-6802-4b3d-9767-d912f31ebff7&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7230993760589464075/?app=news_article&amp;timestamp=1683651478&amp;use_new_style=1&amp;req_id=20230510005757F19F70571DD2A5720370&amp;group_id=7230993760589464075&amp;share_token=fc15f4b0-6802-4b3d-9767-d912f31ebff7&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a><br> vue前端权限控制设计-今日头条 : <a href=\"https://m.toutiao.com/article/7229237741568360992/?app=news_article&amp;timestamp=1683652169&amp;use_new_style=1&amp;req_id=202305100109281D91D5ECED3967701A14&amp;group_id=7229237741568360992&amp;share_token=9d014bf9-d1ed-4e0a-a36e-f7af7ac0c4fd&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7229237741568360992/?app=news_article&amp;timestamp=1683652169&amp;use_new_style=1&amp;req_id=202305100109281D91D5ECED3967701A14&amp;group_id=7229237741568360992&amp;share_token=9d014bf9-d1ed-4e0a-a36e-f7af7ac0c4fd&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a></p>\n<p> vue和layUi对比_layui框架和vue哪个好_DBMK14的博客-CSDN博客 : <a href=\"https://blog.csdn.net/DBMK14/article/details/108644715\">https://blog.csdn.net/DBMK14/article/details/108644715</a><br> 关于Ant design、ElementUI、IVIEW 技术选型_ant和elementui_我只是一个coder的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lhf214111967/article/details/102648360\">https://blog.csdn.net/lhf214111967/article/details/102648360</a></p>\n<h1 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h1><p>uniapp与flutter，跨平台解决方案你该如何选择 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/55466963?utm_id=0\">https://zhuanlan.zhihu.com/p/55466963?utm_id=0</a><br> 2022年，想玩一下安卓app，选择原生还是flutter或uniapp？ - 知乎 : <a href=\"https://www.zhihu.com/question/516053212?utm_id=0\">https://www.zhihu.com/question/516053212?utm_id=0</a><br> uni-app、taro、flutter、kbone 跨端、小程序选型对比、区别_taro uniapp_飞歌Fly的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_35430000/article/details/119346964\">https://blog.csdn.net/qq_35430000/article/details/119346964</a></p>\n<p> Android中Activity的四种LaunchMode和Intent 的flag的使用_android flag_activity_reorder_to_front 是在新的栈吗_ailinghao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/haoxuhong/article/details/81297259\">https://blog.csdn.net/haoxuhong/article/details/81297259</a><br> android深入解析Activity的launchMode启动模式，Intent Flag，taskAffinity_Shawn_Dut的博客-CSDN博客 : <a href=\"https://blog.csdn.net/self_study/article/details/48055011\">https://blog.csdn.net/self_study/article/details/48055011</a><br> Activity启动模式：launchMode 和 Intent中设置标志setFlags_shan_zwq的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shanshan_1117/article/details/80439421\">https://blog.csdn.net/shanshan_1117/article/details/80439421</a><br> Android的LaunchMode，Intent flags和taskAffinity_scnuxisan225的博客-CSDN博客 : <a href=\"https://blog.csdn.net/scnuxisan225/article/details/44930321\">https://blog.csdn.net/scnuxisan225/article/details/44930321</a><br> [android]android Task 任务 简介_soul93457djdfh的博客-CSDN博客 : <a href=\"https://blog.csdn.net/guomeijuan916/article/details/8121468\">https://blog.csdn.net/guomeijuan916/article/details/8121468</a><br> Android Task详解_安卓兼职framework应用工程师的博客-CSDN博客 : <a href=\"https://blog.csdn.net/baidu_41666295/article/details/103880101\">https://blog.csdn.net/baidu_41666295/article/details/103880101</a><br> android：taskAffinity属性的用法_android:taskaffinity_院主的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_41716624/article/details/96008835\">https://blog.csdn.net/qq_41716624/article/details/96008835</a><br> Android Application Task Activities的关系 - 蝈蝈俊 - 博客园 : <a href=\"https://www.cnblogs.com/ghj1976/archive/2011/04/29/2032412.html\">https://www.cnblogs.com/ghj1976/archive/2011/04/29/2032412.html</a><br> Android 任务共用性Affinity_蝈蝈俊的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ghj1976/article/details/6371549\">https://blog.csdn.net/ghj1976/article/details/6371549</a><br> Android Studio快捷键生成TAG、Log.x日志输出介绍 - 腾讯云开发者社区-腾讯云 : <a href=\"https://cloud.tencent.com/developer/article/1723789\">https://cloud.tencent.com/developer/article/1723789</a><br> Android Studio快捷键生成TAG、Log.x日志输出_ 颜 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_28193019/article/details/91050915\">https://blog.csdn.net/qq_28193019/article/details/91050915</a><br> Android studio的日志工具Log的使用及一些快捷输入方式_android studio log.i_Old萬的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_46013401/article/details/105311992\">https://blog.csdn.net/weixin_46013401/article/details/105311992</a><br> Android Studio2022年10月更新Logcat配置过滤-CSDN博客 : <a href=\"https://blog.csdn.net/baoolong/article/details/127572422\">https://blog.csdn.net/baoolong/article/details/127572422</a><br> Android Studio 新版Logcat 从惊艳到放弃_androidstudio logcat_逆向涉猎的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_26914291/article/details/127205238?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-127205238-blog-127572422.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-127205238-blog-127572422.wap_relevant_featuresortv7\">https://blog.csdn.net/qq_26914291/article/details/127205238?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-127205238-blog-127572422.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-127205238-blog-127572422.wap_relevant_featuresortv7</a><br> Android Studio 使用 Logcat 写入和查看日志_allway2的博客-CSDN博客 : <a href=\"https://blog.csdn.net/allway2/article/details/122395737\">https://blog.csdn.net/allway2/article/details/122395737</a></p>\n<p>android多线程的几种方式 <a href=\"https://blog.csdn.net/qq_41648631/article/details/103045252\">https://blog.csdn.net/qq_41648631/article/details/103045252</a></p>\n<p>Android之四大组件、六大布局、五大存储_冰糖葫芦三剑客的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shenggaofei/article/details/52450668\">https://blog.csdn.net/shenggaofei/article/details/52450668</a><br> Android Fragment详解_FamilyYan的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37982823/article/details/86539172\">https://blog.csdn.net/qq_37982823/article/details/86539172</a><br> Android中Intent概述及使用_安卓intent_孙群的博客-CSDN博客 : <a href=\"https://blog.csdn.net/iispring/article/details/48417779\">https://blog.csdn.net/iispring/article/details/48417779</a><br> Android-Service里面如何启动Activity？为什么要这么做?_android service启动activity_吴唐人的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wu996489865/article/details/107354559\">https://blog.csdn.net/wu996489865/article/details/107354559</a><br> Android 在Service中启动Activity的大坑_android service启动activity_姚佳伟的博客-CSDN博客 : <a href=\"https://blog.csdn.net/fang323619/article/details/74388804#:~:text=1%20%E9%80%9A%E8%BF%87pms%E6%89%BE%E5%88%B0%E8%A6%81%E5%90%AF%E5%8A%A8%E7%9A%84Service%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E7%94%9F%E6%88%90Service%E5%AF%B9%E8%B1%A1%202%20%E5%88%9B%E5%BB%BAContextImpl%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%84%B6%E5%90%8E%E8%B0%83%E7%94%A8service.attach%E6%96%B9%E6%B3%95%E8%AE%BE%E7%BD%AE%E5%88%B0ContextWrapper.java%E7%9A%84mBaseContext%E5%8F%98%E9%87%8F%E9%87%8C%E9%9D%A2%E3%80%82\">https://blog.csdn.net/fang323619/article/details/74388804#:~:text=1%20%E9%80%9A%E8%BF%87pms%E6%89%BE%E5%88%B0%E8%A6%81%E5%90%AF%E5%8A%A8%E7%9A%84Service%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%9A%E8%BF%87%E5%8F%8D%E5%B0%84%E7%94%9F%E6%88%90Service%E5%AF%B9%E8%B1%A1%202%20%E5%88%9B%E5%BB%BAContextImpl%E5%AF%B9%E8%B1%A1%EF%BC%8C%E7%84%B6%E5%90%8E%E8%B0%83%E7%94%A8service.attach%E6%96%B9%E6%B3%95%E8%AE%BE%E7%BD%AE%E5%88%B0ContextWrapper.java%E7%9A%84mBaseContext%E5%8F%98%E9%87%8F%E9%87%8C%E9%9D%A2%E3%80%82</a>, %E9%82%A3%E7%8E%B0%E5%9C%A8%E5%B0%B1%E6%98%8E%E7%99%BD%E4%BA%86%EF%BC%8Cservice.startActivity%20%28%29-%3EContextWrapper.startActivity%20%28%29-%3EContextImpl.startActivity%20%28%29<br> android 通过子线程跳转activity并传递内容_空心菜的爱的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u010399316/article/details/46677045\">https://blog.csdn.net/u010399316/article/details/46677045</a><br> 子线程是否可以启动Activity_子线程启动activity_qijingwang的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qijingwang/article/details/100579288\">https://blog.csdn.net/qijingwang/article/details/100579288</a><br> android 开发 实现一个activity变成dialog对话框_activity dialog_少问，多查，靠自己的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37217804/article/details/80507758\">https://blog.csdn.net/qq_37217804/article/details/80507758</a><br> Android中Activity设置dialog显示_activity dialog_沅霖的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42504805/article/details/118707190\">https://blog.csdn.net/weixin_42504805/article/details/118707190</a><br> Dialog模式的Activity_dialogactivity_小Tian◕的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq873044564/article/details/107673616\">https://blog.csdn.net/qq873044564/article/details/107673616</a><br> Android 官方推荐 : DialogFragment 创建对话框_鸿洋_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lmj623565791/article/details/37815413\">https://blog.csdn.net/lmj623565791/article/details/37815413</a><br> Android 多线程之IntentService 完全详解_zejian_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/javazejian/article/details/52426425\">https://blog.csdn.net/javazejian/article/details/52426425</a><br> Android 多线程之HandlerThread 完全详解_zejian_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/javazejian/article/details/52426353\">https://blog.csdn.net/javazejian/article/details/52426353</a><br> Android——Handler详解_android handler_Yawn__的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ly0724ok/article/details/117324053\">https://blog.csdn.net/ly0724ok/article/details/117324053</a><br> Android——HandlerThread浅析_Yawn__的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ly0724ok/article/details/117413233/\">https://blog.csdn.net/ly0724ok/article/details/117413233/</a><br> Android——IntentService浅析_android intentsevice等待_Yawn__的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ly0724ok/article/details/117417938/\">https://blog.csdn.net/ly0724ok/article/details/117417938/</a><br> Java并发（三）：Timer和TimerTask、线程池_vanpersie_9987的博客-CSDN博客 : <a href=\"https://blog.csdn.net/vanpersie_9987/article/details/67637434\">https://blog.csdn.net/vanpersie_9987/article/details/67637434</a><br> 整理：多线程+计时器(TimerTask、Timer、Handler、Message、Thread、Runnable、HandlerThread)_多线程统计聊天 计时_芒果蜜桃π的博客-CSDN博客 : <a href=\"https://blog.csdn.net/An_nAl/article/details/81314557\">https://blog.csdn.net/An_nAl/article/details/81314557</a><br> 定时任务 Handler vs Timer_timer和handler的区别_深秋风瘦的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zgkxzx/article/details/72143106\">https://blog.csdn.net/zgkxzx/article/details/72143106</a><br> 详解Android中AsyncTask的使用_android asynctask_liuhe688的博客-CSDN博客 : <a href=\"https://blog.csdn.net/liuhe688/article/details/6532519\">https://blog.csdn.net/liuhe688/article/details/6532519</a><br> Android AsyncTask已被弃用_asynctask替代方案_wengeoo的博客-CSDN博客 : <a href=\"https://blog.csdn.net/leven98/article/details/123346594\">https://blog.csdn.net/leven98/article/details/123346594</a><br> android AsyncTask 被废弃替代方案_asynctask替代方案_杨宗卫的爸爸的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yangzm/article/details/115656482\">https://blog.csdn.net/yangzm/article/details/115656482</a><br> 震惊！AsyncTask将被弃用？_asynctask被弃用_Axurq的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_32916805/article/details/103996274\">https://blog.csdn.net/qq_32916805/article/details/103996274</a><br> 【android】结合Google开发文档讲解已废弃的-IntentService_intentservice弃用_ChrisEighteen18的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44002043/article/details/122149781\">https://blog.csdn.net/weixin_44002043/article/details/122149781</a><br> Android IntentService deprecated|笔记_安卓service deprecated_aikongmeng的博客-CSDN博客 : <a href=\"https://blog.csdn.net/aikongmeng/article/details/121273632\">https://blog.csdn.net/aikongmeng/article/details/121273632</a><br> Android Handler被弃用，那么以后怎么使用Handler，或者类似的功能_handler弃用_bugtraq2021的博客-CSDN博客 : <a href=\"https://blog.csdn.net/John_Lenon/article/details/124529515\">https://blog.csdn.net/John_Lenon/article/details/124529515</a><br> android关于使用Handler崩溃和解决说明_android handler出错_wx_q127400的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_28979487/article/details/129421817\">https://blog.csdn.net/qq_28979487/article/details/129421817</a><br> Timer与ExecutorService的比较_漫步夕阳下的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_37113604/article/details/89429986\">https://blog.csdn.net/qq_37113604/article/details/89429986</a><br> 【定时任务】Alarm，Timer与Handler_风聆Mia的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_38304672/article/details/113058613\">https://blog.csdn.net/qq_38304672/article/details/113058613</a></p>\n<p> Android MVP模式详解_谈情不如逗狗. 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/hdhhd/article/details/123204173\">https://blog.csdn.net/hdhhd/article/details/123204173</a><br> Android：安卓学习笔记之MVP模式的简单理解和使用-CSDN博客 : <a href=\"https://blog.csdn.net/JMW1407/article/details/123383885\">https://blog.csdn.net/JMW1407/article/details/123383885</a><br> 一篇文章彻底弄懂Android-MVVM_android mvvm_废文鉴定师的博客-CSDN博客 : <a href=\"https://blog.csdn.net/jayoss152/article/details/109177121\">https://blog.csdn.net/jayoss152/article/details/109177121</a><br> 一文搞懂Android中的MVC、MVP、MVVM架构 （附实现代码）_android mvp架构图_别说我真不会Android的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Maniu_666/article/details/129555365\">https://blog.csdn.net/Maniu_666/article/details/129555365</a><br> Android MVVM架构 这一篇就够_南宫子墨的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_25890433/article/details/116310790?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-116310790-blog-109177121.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2~default~CTRLIST~Rate-3-116310790-blog-109177121.wap_relevant_featuresortv7\">https://blog.csdn.net/qq_25890433/article/details/116310790?spm=1001.2101.3001.6650.3&amp;utm_medium=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-116310790-blog-109177121.wap_relevant_featuresortv7&amp;depth_1-utm_source=distribute.wap_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7ERate-3-116310790-blog-109177121.wap_relevant_featuresortv7</a></p>\n<p> 【Android】Service几个重要的方法运行在哪个线程_handlecreateservice_Jason_Lee155的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Jason_Lee155/article/details/119305346\">https://blog.csdn.net/Jason_Lee155/article/details/119305346</a><br> Service 运行在主线程_service主线程_Frank_de_Boer的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Frakie_Kwok/article/details/78623982\">https://blog.csdn.net/Frakie_Kwok/article/details/78623982</a><br> 详解Service以及Service进程间通信_HelloWorld_dongjie的博客-CSDN博客 : <a href=\"https://blog.csdn.net/helloworld19870427/article/details/110875321\">https://blog.csdn.net/helloworld19870427/article/details/110875321</a><br> Android Service、IntentService，Service和组件间通信_SmallMartin的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_34115898/article/details/83347882\">https://blog.csdn.net/qq_34115898/article/details/83347882</a><br> Android Service与Activity之间通信的几种方式_android service与activity通信_xiaanming的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xiaanming/article/details/9750689\">https://blog.csdn.net/xiaanming/article/details/9750689</a><br> Android Service–通信方式（IBinder回调、Messenger）<em>android ibinder service_彼天的博客-CSDN博客 : <a href=\"https://blog.csdn.net/android_hl/article/details/93072888\">https://blog.csdn.net/android_hl/article/details/93072888</a><br> Android 进阶——轻量级跨进程传递Message利器Messenger详解-CSDN博客 : <a href=\"https://blog.csdn.net/CrazyMo\">https://blog.csdn.net/CrazyMo</a></em>&#x2F;article&#x2F;details&#x2F;123019809<br> [Android]Service和Activity双向通信的两种方式_activity和startstartservice通信_#Ekko的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Gods_magic/article/details/84558169\">https://blog.csdn.net/Gods_magic/article/details/84558169</a><br> Android 中 Service 通信_android service 通信_Insist_L的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Inisit_L/article/details/106622377\">https://blog.csdn.net/Inisit_L/article/details/106622377</a><br> Android学习之Activity与Service进行通信的三种方式_陈坚润的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_28468727/article/details/52144155\">https://blog.csdn.net/qq_28468727/article/details/52144155</a><br> Android Messenger和Handler的关系_android handler messenger_guangdeshishe的博客-CSDN博客 : <a href=\"https://blog.csdn.net/guangdeshishe/article/details/118990016\">https://blog.csdn.net/guangdeshishe/article/details/118990016</a><br> Android中通过Messenger与Service实现进程间双向通信_孙群的博客-CSDN博客 : <a href=\"https://blog.csdn.net/iispring/article/details/48329925\">https://blog.csdn.net/iispring/article/details/48329925</a><br> Android 进程间通信——Service、Messenger_VNanyesheshou的博客-CSDN博客 : <a href=\"https://blog.csdn.net/VNanyesheshou/article/details/74198534\">https://blog.csdn.net/VNanyesheshou/article/details/74198534</a><br> Android 基于Message的进程间通信 Messenger完全解析_message.android.category_鸿洋_的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lmj623565791/article/details/47017485\">https://blog.csdn.net/lmj623565791/article/details/47017485</a><br> android布局控件flex-layout_flexlayout android_安卓小飞的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_33847549/article/details/73897094\">https://blog.csdn.net/qq_33847549/article/details/73897094</a><br> 【Android】做移动端的你竟然不知道Flex布局？快来看看！_Coder . 的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43927892/article/details/106882000\">https://blog.csdn.net/weixin_43927892/article/details/106882000</a><br> FlexboxLayout全攻略(Google官方灵活实现流式布局控件)_丶白泽的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_39397471/article/details/90257522\">https://blog.csdn.net/weixin_39397471/article/details/90257522</a><br> 详解Android布局中gravity与layout_gravity属性_黄元帅的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Xiao_Spring/article/details/76785450\">https://blog.csdn.net/Xiao_Spring/article/details/76785450</a><br> android:layout_gravity和android:gravity的区别_山代王的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shakespeare001/article/details/7843460\">https://blog.csdn.net/shakespeare001/article/details/7843460</a><br> Android gravity和layout_gravity的区别 - 茄子鱼 - 博客园 : <a href=\"https://www.cnblogs.com/xqz0618/p/gravity.html\">https://www.cnblogs.com/xqz0618/p/gravity.html</a><br> Android布局中margin, padding, align的用法和区别_android:paddinghorizontal_李努力workhard的博客-CSDN博客 : <a href=\"https://blog.csdn.net/scarecrow_fly/article/details/75682073\">https://blog.csdn.net/scarecrow_fly/article/details/75682073</a><br> layout_gravity不能居中以及失效、无法使用问题的解决办法_qvboxlayout 居中_飞鸭传书的博客-CSDN博客 : <a href=\"https://blog.csdn.net/jppipai/article/details/119993382\">https://blog.csdn.net/jppipai/article/details/119993382</a><br> android:layout_alignParent 布局相对于父布局的位置_chailongger的博客-CSDN博客 : <a href=\"https://blog.csdn.net/chailongger/article/details/82217547\">https://blog.csdn.net/chailongger/article/details/82217547</a><br> 关于layout_alignParentLeft、layout_alignLeft、layout_toLeftOf、layout_marginLeft的区别_kokunka的博客-CSDN博客 : <a href=\"https://blog.csdn.net/kokunka/article/details/119324951\">https://blog.csdn.net/kokunka/article/details/119324951</a><br> 关于Android相对布局中的四个属性:layout_alignTop, layout_alignBottom, layout_above, layout_below的分析_lsyForAndroid的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u010665691/article/details/40504209\">https://blog.csdn.net/u010665691/article/details/40504209</a><br> Android——六大基本布局总结_andorid布局_小马 同学的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40205116/article/details/88418781\">https://blog.csdn.net/qq_40205116/article/details/88418781</a></p>\n<p>  Android基础——–Android常用控件介绍及使用_android 控件_啊啊啊啊柴的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_38423829/article/details/80566203\">https://blog.csdn.net/weixin_38423829/article/details/80566203</a><br> Android 常用的控件总结_andriod控件_故屿γ的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_49770443/article/details/117327634\">https://blog.csdn.net/weixin_49770443/article/details/117327634</a><br> Android最全UI库合集_android ui组件库_紫色的路的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sinat_33585352/article/details/88825720\">https://blog.csdn.net/sinat_33585352/article/details/88825720</a><br> android studio之常用基本控件的使用_android studio 控件栏_PPYY3344的博客-CSDN博客 : <a href=\"https://blog.csdn.net/PPYY3344/article/details/115706244\">https://blog.csdn.net/PPYY3344/article/details/115706244</a><br> Android桌面小组件—Widget组件开发（什么是Widget）_Awesome_lay的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_33235287/article/details/104113294\">https://blog.csdn.net/qq_33235287/article/details/104113294</a><br> Android桌面控件Widget解析_android 桌面widget_John_xx的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u013620306/article/details/126784433\">https://blog.csdn.net/u013620306/article/details/126784433</a><br> Android studio之布局管理器之间的相互嵌套_PPYY3344的博客-CSDN博客 : <a href=\"https://blog.csdn.net/PPYY3344/article/details/115548751\">https://blog.csdn.net/PPYY3344/article/details/115548751</a><br> 基础篇——View和ViewGroup的区别_一个灵活的胖子_Mr. Wang的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq941263013/article/details/82500145\">https://blog.csdn.net/qq941263013/article/details/82500145</a><br> Android 基础知识4-2.5View与VIewGroup的概念、关系与区别_yyxhzdm的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yyxhzdm/article/details/129108937\">https://blog.csdn.net/yyxhzdm/article/details/129108937</a><br> Android之ScrollView详解_菜鸟码农阿庆的博客-CSDN博客 : <a href=\"https://blog.csdn.net/i_nclude/article/details/105169150\">https://blog.csdn.net/i_nclude/article/details/105169150</a><br> Android RecyclerView最全使用详解_Teacher. Hu的博客-CSDN博客 : <a href=\"https://blog.csdn.net/huweiliyi/article/details/105779329\">https://blog.csdn.net/huweiliyi/article/details/105779329</a><br> Android最常用的控件ListView(详解)_android listview_撩得Android一次心动的博客-CSDN博客 : <a href=\"https://blog.csdn.net/indeedes/article/details/119530068\">https://blog.csdn.net/indeedes/article/details/119530068</a><br> android linearlayout代替listview实现_未来尚未知的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_30603701/article/details/47663735\">https://blog.csdn.net/qq_30603701/article/details/47663735</a><br> android整合–FrameLayout和scrollview_nameyuxiang的博客-CSDN博客 : <a href=\"https://blog.csdn.net/nameyuxiang/article/details/11771649\">https://blog.csdn.net/nameyuxiang/article/details/11771649</a></p>\n<p>  Android Support v4\\v7\\v13和AndroidX的区别及应用场景_艾阳Blog的博客-CSDN博客 : <a href=\"https://blog.csdn.net/csdn_aiyang/article/details/80859771\">https://blog.csdn.net/csdn_aiyang/article/details/80859771</a><br> Android Support 包：Android Support v4、v7、v13等_android-support-v4_林新发的博客-CSDN博客 : <a href=\"https://blog.csdn.net/linxinfa/article/details/87945883\">https://blog.csdn.net/linxinfa/article/details/87945883</a><br> SDK 平台版本说明  |  Android 开发者  |  Android Developers : <a href=\"https://developer.android.google.cn/studio/releases/platforms?hl=zh-cn\">https://developer.android.google.cn/studio/releases/platforms?hl=zh-cn</a><br> 使用 Java 8 语言功能和 API  |  Android 开发者  |  Android Developers : <a href=\"https://developer.android.google.cn/studio/write/java8-support?hl=zh-cn#groovy\">https://developer.android.google.cn/studio/write/java8-support?hl=zh-cn#groovy</a><br> 通过脱糖获得 Java 8 及更高版本 API  |  Android 开发者  |  Android Developers : <a href=\"https://developer.android.google.cn/studio/write/java8-support-table?hl=zh-cn\">https://developer.android.google.cn/studio/write/java8-support-table?hl=zh-cn</a></p>\n<p>  android用Popup弹出窗(PopupWindow的使用方式)<em>android popup_Alex_designer的博客-CSDN博客 : <a href=\"https://blog.csdn.net/m0_37622302/article/details/107567958\">https://blog.csdn.net/m0_37622302/article/details/107567958</a><br> Android 弹框菜单系列之PopupMenu_android popupmenu_冰糖葫芦三剑客的博客-CSDN博客 : <a href=\"https://blog.csdn.net/shenggaofei/article/details/106597551\">https://blog.csdn.net/shenggaofei/article/details/106597551</a><br> Android NotificationManager详解_一条老狗ˉ的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zhaohuiyang_949/article/details/85334639\">https://blog.csdn.net/zhaohuiyang_949/article/details/85334639</a><br> Android解析WindowManager（一）WindowManager体系_Loong.xu的博客-CSDN博客 : <a href=\"https://blog.csdn.net/heng615975867/article/details/108726623\">https://blog.csdn.net/heng615975867/article/details/108726623</a><br> 【Android】ActivityManager的介绍_cvKnight的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_23049111/article/details/123637884\">https://blog.csdn.net/qq_23049111/article/details/123637884</a><br> Android基础篇 Manager全解_android manager_其子昱舟的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_44720673/article/details/115749151\">https://blog.csdn.net/weixin_44720673/article/details/115749151</a><br> 《系统架构系列》常用的系统Manager及对应的ManagerService_manager service</em>-ff-的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_28147169/article/details/78668279\">https://blog.csdn.net/qq_28147169/article/details/78668279</a><br> Android中的各种Manager_梦的羽翼的博客-CSDN博客 : <a href=\"https://blog.csdn.net/u013193363/article/details/41891803\">https://blog.csdn.net/u013193363/article/details/41891803</a></p>\n<p> Android Support Library兼容包：从v4、v7、v13、v17到androidX_com.android.support:appcompat_mahui_1980的博客-CSDN博客 : <a href=\"https://blog.csdn.net/mahui_1980/article/details/118439378\">https://blog.csdn.net/mahui_1980/article/details/118439378</a></p>\n<p> ActionBar、TitleBar、ToolBar、StatusBar之间的关系_toolbar和titlebar_K. I. O的博客-CSDN博客 : <a href=\"https://blog.csdn.net/sinat_29675423/article/details/86254222\">https://blog.csdn.net/sinat_29675423/article/details/86254222</a><br> Android SystemUI之StatusBar，状态栏（二）_phonestatusbarview_Bill_xiao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Bill_xiao/article/details/108244267\">https://blog.csdn.net/Bill_xiao/article/details/108244267</a><br> Android控件——“沉浸式“状态栏实现（StatusBar）（上）_浸入式让内容在statusbar下面展示_者文的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43499030/article/details/90415592\">https://blog.csdn.net/weixin_43499030/article/details/90415592</a><br> 【Android】隐藏状态栏StatusBar和导航栏NavigationBar_android 隐藏statusbar_宇翔苦涩的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40110781/article/details/105240548\">https://blog.csdn.net/qq_40110781/article/details/105240548</a><br> Android 自定义标题栏（title栏）_android title_Jamin_正宗红罐辣酱的博客-CSDN博客 : <a href=\"https://blog.csdn.net/jamin0107/article/details/6715678#:~:text=Android%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E9%A2%98%E6%A0%8F%EF%BC%88title%E6%A0%8F%EF%BC%89%201%20requestWindowFeature%20%28Window\">https://blog.csdn.net/jamin0107/article/details/6715678#:~:text=Android%20%E8%87%AA%E5%AE%9A%E4%B9%89%E6%A0%87%E9%A2%98%E6%A0%8F%EF%BC%88title%E6%A0%8F%EF%BC%89%201%20requestWindowFeature%20%28Window</a>. FEATURE_CUSTOM_TITLE%29%3B%202, setContentView%20%28R.layout.main%29%3B%203%20getWindow%20%28%29.setFeatureInt%20%28Window. FEATURE_CUSTOM_TITLE%2C%20R.layout.title_bar%29%3B<br> Android自定义TitleBar_android titlebar_十橙的博客-CSDN博客 : <a href=\"https://blog.csdn.net/aaa111/article/details/42104829\">https://blog.csdn.net/aaa111/article/details/42104829</a><br> Android修改TitleBar标题栏详解_offbye的博客-CSDN博客 : <a href=\"https://blog.csdn.net/offbye/article/details/49420087\">https://blog.csdn.net/offbye/article/details/49420087</a><br> Android ActionBar完全解析，使用官方推荐的最佳导航栏(上)<em>guolin的博客-CSDN博客 : <a href=\"https://blog.csdn.net/guolin_blog/article/details/18234477\">https://blog.csdn.net/guolin_blog/article/details/18234477</a><br> Android Action Bar 详解篇_安卓actionbar_思考的芦苇的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yuxlong2010/article/details/9299507\">https://blog.csdn.net/yuxlong2010/article/details/9299507</a><br> 什么是ActionBar，详细讲解_小狼狗｀的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40638618/article/details/113308895\">https://blog.csdn.net/qq_40638618/article/details/113308895</a><br> Android Toolbar的使用详解_暗恋花香的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42324086/article/details/117390236\">https://blog.csdn.net/qq_42324086/article/details/117390236</a><br> Android的ToolBar简单使用_android toolbar_Mr_Tony的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Mr_Tony/article/details/121877502\">https://blog.csdn.net/Mr_Tony/article/details/121877502</a><br> Android——ToolBar(工具栏)详解（含源码下载）_toolbar源码_shphuang的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43567345/article/details/104477038\">https://blog.csdn.net/qq_43567345/article/details/104477038</a><br> Android总结之style(样式)和Theme(主题)</em>“android:theme&#x3D;&quot;@style&#x2F;theme.&quot;&gt;”<em>oudetu的博客-CSDN博客 : <a href=\"https://blog.csdn.net/oudetu/article/details/78568436\">https://blog.csdn.net/oudetu/article/details/78568436</a><br> Android中Theme主题和Style样式使用介绍总结_apptheme style 颜色_Ang_qq_252390816的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ezconn/article/details/105346982\">https://blog.csdn.net/ezconn/article/details/105346982</a><br> Android——Theme和Style-由浅入深，全面讲解_android theme_青苔猿猿的博客-CSDN博客 : <a href=\"https://blog.csdn.net/yilvqingtai/article/details/128065726\">https://blog.csdn.net/yilvqingtai/article/details/128065726</a><br> Android中Theme主题和Style样式使用介绍总结</em>“andriod studio android:theme&#x3D;&quot;@android:style&#x2F;the_mayundoyouknow的博客-CSDN博客 : <a href=\"https://blog.csdn.net/ahou2468/article/details/121923308\">https://blog.csdn.net/ahou2468/article/details/121923308</a><br> Android Theme 常见主题风格详解_门心叼龙的博客-CSDN博客 : <a href=\"https://blog.csdn.net/geduo_83/article/details/86561559\">https://blog.csdn.net/geduo_83/article/details/86561559</a><br> Android—–res资源文件夹介绍及使用_向上爬的小蜗牛的博客-CSDN博客 : <a href=\"https://blog.csdn.net/LyySwx/article/details/85301133\">https://blog.csdn.net/LyySwx/article/details/85301133</a></p>\n<p>  Android 日志获取总结_data&#x2F;logcat log 目录_峥嵘life的博客-CSDN博客 : <a href=\"https://blog.csdn.net/wenzhi20102321/article/details/105861354\">https://blog.csdn.net/wenzhi20102321/article/details/105861354</a><br> Logan：美团开源移动端基础日志库 - 美团技术团队 : <a href=\"https://tech.meituan.com/2018/10/11/logan-open-source.html\">https://tech.meituan.com/2018/10/11/logan-open-source.html</a><br> Android 应用崩溃日志的收集和上传_android 数据收集上传_爱唱跳rap的彭于晏的博客-CSDN博客 : <a href=\"https://blog.csdn.net/w13576267399/article/details/80853841\">https://blog.csdn.net/w13576267399/article/details/80853841</a><br> Android日志收集上报功能设计与实现（总）_android log 上报_卤蛋Rex的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zhgxhuaa/article/details/24819993\">https://blog.csdn.net/zhgxhuaa/article/details/24819993</a><br> 日志采集之移动端日志采集_xu704928452的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xu704928452/article/details/102831295\">https://blog.csdn.net/xu704928452/article/details/102831295</a><br> 美团开源 Logan Web：前端日志在 Web 端的实现 - 美团技术团队 : <a href=\"https://tech.meituan.com/2020/01/09/meituan-logan.html\">https://tech.meituan.com/2020/01/09/meituan-logan.html</a></p>\n<p>Android全局弹窗dialog_android 全局弹窗_♞无名小白白的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_25097107/article/details/104555913\">https://blog.csdn.net/qq_25097107/article/details/104555913</a><br> Android 工具抽取：（可能的）全局 Loading 弹窗【仿照】_zeqiao的博客-CSDN博客 : <a href=\"https://blog.csdn.net/zeqiao/article/details/130416255\">https://blog.csdn.net/zeqiao/article/details/130416255</a><br> Android开发之更优雅的使用Loading_android loading_请叫我甘先森的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_25506203/article/details/82460442\">https://blog.csdn.net/qq_25506203/article/details/82460442</a><br> 【Android】全局加载框的使用_android 加载框_我又来搬代码了的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43358469/article/details/129261622\">https://blog.csdn.net/qq_43358469/article/details/129261622</a></p>\n<p> DCIM文件夹：删除还是保留? 与Pictures的异同 -快快网络 : <a href=\"https://www.kkidc.com/about/detail/hcid/196/id/2124/\">https://www.kkidc.com/about/detail/hcid/196/id/2124/</a><br> Android系统目录结构 - XRacoon - 博客园 : <a href=\"https://www.cnblogs.com/pixy/p/4744501.html\">https://www.cnblogs.com/pixy/p/4744501.html</a><br> Android系统目录介绍_安卓目录_AFinalStone的博客-CSDN博客 : <a href=\"https://blog.csdn.net/abc6368765/article/details/125403212\">https://blog.csdn.net/abc6368765/article/details/125403212</a><br> Android系统根目录下的各个文件夹的作用与区别介绍 - 爱写Bug的程序猿 - 博客园 : <a href=\"https://www.cnblogs.com/xww0826/p/10359520.html\">https://www.cnblogs.com/xww0826/p/10359520.html</a></p>\n<p>  官方老爹之痛：为什么苹果能收到推送，而安卓不行？_「已注销」的博客-CSDN博客 : <a href=\"https://blog.csdn.net/csywwx2008/article/details/100563147\">https://blog.csdn.net/csywwx2008/article/details/100563147</a></p>\n<h1 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h1><p>选择 podman 的理由, 以及它和 Kubernetes , Docker 的区别 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/506265757?utm_id=0\">https://zhuanlan.zhihu.com/p/506265757?utm_id=0</a><br>​ 编排管理成容器云关键 Kubernetes（K8s）和Swarm对比分析 - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/462768656?utm_id=0\">https://zhuanlan.zhihu.com/p/462768656?utm_id=0</a><br>​ Docker 大势已去，Podman 即将崛起！ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/449364769?utm_id=0\">https://zhuanlan.zhihu.com/p/449364769?utm_id=0</a><br>​ Docker、Podman、Containerd 谁才是真正王者？_意海还念か的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_43273856/article/details/124747667\">https://blog.csdn.net/weixin_43273856/article/details/124747667</a><br>​ k8s+crio+podman搭建集群_k8s podman_qq_43479892的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_43479892/article/details/125775824\">https://blog.csdn.net/qq_43479892/article/details/125775824</a><br>​ 安装Kubernetes(k8s)保姆级教程—无坑版 - Sunzz - 博客园 : <a href=\"https://www.cnblogs.com/Sunzz/p/15184167.html\">https://www.cnblogs.com/Sunzz/p/15184167.html</a><br>​ 在国内优雅地使用Rancher部署k8s集群_WaiSaa的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42761569/article/details/128930151\">https://blog.csdn.net/qq_42761569/article/details/128930151</a><br>​ kubernetes部署(kubeadm和rancher)_liminggangRs的博客-CSDN博客_rancher和kubeadm : <a href=\"https://blog.csdn.net/liminggangRs/article/details/118767187\">https://blog.csdn.net/liminggangRs/article/details/118767187</a><br>​ Service Mesh 和 Spring Cloud_菠萝-琪琪的博客-CSDN博客_servicemesh与springcloud区别 : <a href=\"https://blog.csdn.net/wmq880204/article/details/111624017\">https://blog.csdn.net/wmq880204/article/details/111624017</a><br>​ 拥抱Kubernetes, 再见了Spring Cloud - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/339736610?utm_id=0\">https://zhuanlan.zhihu.com/p/339736610?utm_id=0</a><br>​ CentOS 7 安装后的 repo 源管理_fdcp123的博客-CSDN博客_centos repo源 : <a href=\"https://blog.csdn.net/fdcp123/article/details/115180957\">https://blog.csdn.net/fdcp123/article/details/115180957</a></p>\n<p>在国内优雅地使用Rancher部署k8s集群_WaiSaa的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_42761569/article/details/128930151\">https://blog.csdn.net/qq_42761569/article/details/128930151</a><br> k8s搭建部署（超详细）_Anime777的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40954652/article/details/123208590\">https://blog.csdn.net/qq_40954652/article/details/123208590</a><br> Kubernetes kubeadm kubectl kubelet 区别_kubectl和kubelet_安安csdn的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_42072280/article/details/112348857\">https://blog.csdn.net/weixin_42072280/article/details/112348857</a><br> K8s kubelet &amp; kubeadm &amp; kubectl 介绍_kubelet kubeadm kubectl 有什么区别_dididiia的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_29812743/article/details/80550888\">https://blog.csdn.net/qq_29812743/article/details/80550888</a><br> K8S使用笔记_kubelet和kubectl区别_戏入人生。的博客-CSDN博客 : <a href=\"https://blog.csdn.net/xi_rurensheng/article/details/111089051\">https://blog.csdn.net/xi_rurensheng/article/details/111089051</a><br> k8s-集群搭建的三种方式和区别，kubeadm、minikube，二进制包_新林。的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_21187515/article/details/101460039\">https://blog.csdn.net/qq_21187515/article/details/101460039</a><br> Kubernetes的2种部署方式：Minikube开发环境+Kubeadm单节点集群环境_minikube 生产环境_图特摩斯科技的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lovebyz/article/details/84542632\">https://blog.csdn.net/lovebyz/article/details/84542632</a><br> kubernetes部署(kubeadm和rancher)_rancher和kubeadm_liminggangRs的博客-CSDN博客 : <a href=\"https://blog.csdn.net/liminggangRs/article/details/118767187\">https://blog.csdn.net/liminggangRs/article/details/118767187</a><br> K8S多种安装方式简介_k8s安装方式对比_海鸥81的博客-CSDN博客 : <a href=\"https://blog.csdn.net/erhaiou2008/article/details/95613076\">https://blog.csdn.net/erhaiou2008/article/details/95613076</a><br> 使用Kubeadm搭建Kubernetes集群_CodeDevMaster的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_38628046/article/details/123639403\">https://blog.csdn.net/qq_38628046/article/details/123639403</a><br> minikube start命令的国内使用方法_Honins的博客-CSDN博客 : <a href=\"https://blog.csdn.net/Honnyee/article/details/114059004\">https://blog.csdn.net/Honnyee/article/details/114059004</a></p>\n<p> 「运维」Docker真的被Kubernetes放弃了吗？-今日头条 : <a href=\"https://m.toutiao.com/article/7222270023703036416/?app=news_article&amp;timestamp=1682516019&amp;use_new_style=1&amp;req_id=202304262133380BEE479DFB40581D5B0A&amp;group_id=7222270023703036416&amp;share_token=fde3b777-45a2-460d-bc6d-e9e91864786b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share\">https://m.toutiao.com/article/7222270023703036416/?app=news_article&amp;timestamp=1682516019&amp;use_new_style=1&amp;req_id=202304262133380BEE479DFB40581D5B0A&amp;group_id=7222270023703036416&amp;share_token=fde3b777-45a2-460d-bc6d-e9e91864786b&amp;tt_from=copy_link&amp;utm_source=copy_link&amp;utm_medium=toutiao_android&amp;utm_campaign=client_share</a><br> 什么是shim？_shim 编程_铁锤妹妹-的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40181987/article/details/121992431\">https://blog.csdn.net/qq_40181987/article/details/121992431</a><br> 容器中的 Shim 到底是个什么鬼？_米开朗基杨的博客-CSDN博客 : <a href=\"https://blog.csdn.net/alex_yangchuansheng/article/details/122974656\">https://blog.csdn.net/alex_yangchuansheng/article/details/122974656</a><br> shim和polyfill傻傻分不清_黑の夜行的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_33586179/article/details/87889895\">https://blog.csdn.net/qq_33586179/article/details/87889895</a><br> 什么是polyfill?_卖菜的小白的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_47450807/article/details/123080204\">https://blog.csdn.net/weixin_47450807/article/details/123080204</a></p>\n<p> Docker Compose和Docker Swarm简析与区别_docker swarm和compose_一只黑猩猩的博客-CSDN博客 : <a href=\"https://blog.csdn.net/qq_40585800/article/details/109120484\">https://blog.csdn.net/qq_40585800/article/details/109120484</a><br> docker swarm和 k8s对比 - 江湖一浪子 - 博客园 : <a href=\"https://www.cnblogs.com/geekmao/p/8280611.html\">https://www.cnblogs.com/geekmao/p/8280611.html</a><br> 容器云技术选择之kubernetes和swarm对比_swarm和k8s区别_和代码去流浪的博客-CSDN博客 : <a href=\"https://blog.csdn.net/lgxzzz/article/details/124454585\">https://blog.csdn.net/lgxzzz/article/details/124454585</a></p>\n<p> Hadoop大数据平台实战(05)：深入Spark Cluster集群模式YARN vs Mesos vs Standalone vs K8s_weixin_33834137的博客-CSDN博客 : <a href=\"https://blog.csdn.net/weixin_33834137/article/details/89569055\">https://blog.csdn.net/weixin_33834137/article/details/89569055</a></p>\n<h1 id=\"DSA\"><a href=\"#DSA\" class=\"headerlink\" title=\"DSA\"></a>DSA</h1><p> 八大算法基础思想_计算机常见算法思想_煮酒论键的博客-CSDN博客 : <a href=\"https://blog.csdn.net/h21396577548/article/details/109481334\">https://blog.csdn.net/h21396577548/article/details/109481334</a></p>\n<h1 id=\"Datum\"><a href=\"#Datum\" class=\"headerlink\" title=\"Datum\"></a>Datum</h1><h2 id=\"整理资料\"><a href=\"#整理资料\" class=\"headerlink\" title=\"整理资料\"></a>整理资料</h2><p>新建一个 不公开 的博客 来记录 小说（novel）和畅想（thought） </p>\n<h3 id=\"邮箱整理\"><a href=\"#邮箱整理\" class=\"headerlink\" title=\"邮箱整理\"></a>邮箱整理</h3><p>邮箱里的附件整理到资料里</p>\n<h2 id=\"同步资料\"><a href=\"#同步资料\" class=\"headerlink\" title=\"同步资料\"></a>同步资料</h2><p>更新 g盘 U盘时间<br>更新 博客全部文件时间</p>\n<h2 id=\"检查资料\"><a href=\"#检查资料\" class=\"headerlink\" title=\"检查资料\"></a>检查资料</h2><p>win10分屏检查资料</p>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><p>免费字体突然收费？我们可以放心使用哪些字体？！ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/53441997?utm_id=0\">https://zhuanlan.zhihu.com/p/53441997?utm_id=0</a><br>害怕字体侵权? 来看这份超详细的字体版权避坑指南! - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/110679383?utm_id=0\">https://zhuanlan.zhihu.com/p/110679383?utm_id=0</a></p>\n<p>免费可商用的字体有哪些？ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/107941853?utm_id=0\">https://zhuanlan.zhihu.com/p/107941853?utm_id=0</a><br>Windows自带的宋体、黑体、楷体、仿宋体等能免费商用吗？ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/162838215?utm_id=0\">https://zhuanlan.zhihu.com/p/162838215?utm_id=0</a><br>方正集团破产了！方正字体能免费商用吗？！ - 知乎 : <a href=\"https://zhuanlan.zhihu.com/p/110801162?utm_id=0\">https://zhuanlan.zhihu.com/p/110801162?utm_id=0</a></p>\n","categories":["+ todo"],"tags":["+ todo"]},{"title":"dev-summary","url":"/2017/01/01/dev/dev-summary/","content":"<h1 id=\"Dev\"><a href=\"#Dev\" class=\"headerlink\" title=\"Dev\"></a>Dev</h1><h2 id=\"concept\"><a href=\"#concept\" class=\"headerlink\" title=\"concept\"></a>concept</h2><hr>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">^#&#123;1&#125; Theory</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">^#&#123;1,&#125; Theory</span><br></pre></td></tr></table></figure>\n\n<hr>\n<ul>\n<li>Minor（初级）、Middle（中级）、Senior（高级）</li>\n<li>Basic（基础）、Advanced（进阶）、Professional（专业）<ul>\n<li>Basic &#x3D;》 Concept（概念）、Config（配置）</li>\n<li>Basic &#x3D;》 More（更多）、Other（其他）</li>\n</ul>\n</li>\n<li>Usage（使用）、Skill（技巧）</li>\n<li>Question（疑问）、Problem（问题）</li>\n<li>Theory（原理）</li>\n</ul>\n<blockquote>\n<p>ps：minor次要的 major主要的<br>ps：junior较年幼的 senior较年长的<br>ps：superior较优的 inferior较差的</p>\n</blockquote>\n<hr>\n<ul>\n<li>Grammar（文法）、Syntax（语法）、Language（语言）</li>\n<li>Standard（标准）、Specification（规范）、Principle（原则）</li>\n<li>Design（设计）、Paradigm（范式）</li>\n<li>Pattern（模式）、Model（模型）</li>\n<li>Normal（常规）、Common（普通）</li>\n</ul>\n<hr>\n<ul>\n<li>Module（模块）、Function（功能）、Feature（特性）</li>\n<li>Type（类型）、Class（类型）、Category（分类）</li>\n<li>Variable（变量）、Field（字段）、Property（属性）</li>\n<li>Codec（编解码器）、Encode（编码）、Decode（解码）</li>\n<li>Crypto（密码学）、Encrypt（加密）、Decrypt（解密）</li>\n<li>Transaction（事务）、Durability（持久化）</li>\n</ul>\n<hr>\n<ul>\n<li>Status、State</li>\n<li>Parameter、Argument</li>\n<li>Util、Tool</li>\n<li>Service、Manager、Helper</li>\n<li>Inheritance、Composition、Aggregation、Mixed</li>\n<li>Framework、Library、Component、Middleware</li>\n<li>Plugin、Extend</li>\n<li>Find、Query、Search</li>\n<li>Availability、Reliability</li>\n<li>Program、Process、Software、Service、Application</li>\n</ul>\n<h3 id=\"Status\"><a href=\"#Status\" class=\"headerlink\" title=\"Status\"></a>Status</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liyi1009365545/article/details/83242720\">Status和State的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Status：状态，状态之间有依赖关系</li>\n<li>State：状态，状态之无依赖关系</li>\n</ul>\n<h3 id=\"Parameter\"><a href=\"#Parameter\" class=\"headerlink\" title=\"Parameter\"></a>Parameter</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/it1988888/article/details/8871895\">Parameter和Argument的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Parameter：定义声明的参数</li>\n<li>Argument：实际传入的参数</li>\n</ul>\n<h3 id=\"Util\"><a href=\"#Util\" class=\"headerlink\" title=\"Util\"></a>Util</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jpgzhu/article/details/105628712\">Util和Tool的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Util：功用</li>\n<li>Tool：工具</li>\n</ul>\n<h3 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cchchunhe/article/details/89452279\">Service、Manager和Helper</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Service：服务类</li>\n<li>Manager：管理类</li>\n<li>Helper：辅助类</li>\n</ul>\n<h3 id=\"Inheritance\"><a href=\"#Inheritance\" class=\"headerlink\" title=\"Inheritance\"></a>Inheritance</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wuqinfei_cs/article/details/9249579\">继承（Inheritance）、组合（Composition）、聚合（Aggregation）技术详解</a></li>\n<li><a href=\"https://blog.csdn.net/qdPython/article/details/108126265\">混入（Mixin）技术详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37702639/article/details/119983884\">继承（Inheritance）和混入（Mixin）对比</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Inheritance：继承</li>\n<li>Composition：组合（强依赖）</li>\n<li>Aggregation：聚合（弱依赖）</li>\n<li>Mixin：混入</li>\n</ul>\n<h3 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/touzani/article/details/1619472\">组件（component）技术详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_58281305/article/details/120817107\">中间件（Middleware）技术详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Framework：框架，被开发者继承</li>\n<li>Library：库，被开发者组合（强依赖）</li>\n<li>Component：组件，被开发者聚合（弱依赖）</li>\n<li>Middleware：中间件，被开发者使用</li>\n</ul>\n<h3 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gg_ios/article/details/125729356\">Plugin和Extend的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Plugin：插件，新增没有的功能</li>\n<li>Extend：扩展，增强已有的功能</li>\n</ul>\n<h3 id=\"Find\"><a href=\"#Find\" class=\"headerlink\" title=\"Find\"></a>Find</h3><ul>\n<li>Find：查找，查找文本</li>\n<li>Query：查询，查询结果</li>\n<li>Search：搜索，搜索一切</li>\n</ul>\n<h3 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chdhust/article/details/77916270\">Availability和Reliability的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Availability：可用性</li>\n<li>Reliability：可靠性</li>\n</ul>\n<h3 id=\"Program\"><a href=\"#Program\" class=\"headerlink\" title=\"Program\"></a>Program</h3><ul>\n<li>Program：程序，指令和数据的合集，支持打包和部署，可以启动和停止</li>\n<li>Process：进程，程序（program）的运行态（runtime）</li>\n<li>Software：软件，程序（program）的封装（package），支持安装和卸载，可以启动和停止，还可以开机自启</li>\n<li>Service：服务，软件（software）的运行态（runtime）</li>\n<li>Application：应用，功能（function）的合集</li>\n</ul>\n<blockquote>\n<p>Program是操作系统的视角，Application是开发者和使用者的视角</p>\n</blockquote>\n<h2 id=\"playground\"><a href=\"#playground\" class=\"headerlink\" title=\"playground\"></a>playground</h2><blockquote>\n<ul>\n<li><a href=\"https://www.w3cschool.cn/tryrun/runcode?lang=java-openjdk\">java</a></li>\n<li><a href=\"https://www.w3cschool.cn/tryrun/runcode?lang=python3\">python</a></li>\n<li><a href=\"https://www.w3cschool.cn/tryrun/runcode?lang=javascript\">javascript</a></li>\n</ul>\n</blockquote>\n<h2 id=\"specification\"><a href=\"#specification\" class=\"headerlink\" title=\"specification\"></a>specification</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zpfzly/article/details/108001034\">阿里巴巴Java开发手册入门</a></li>\n<li><a href=\"https://www.cnblogs.com/bzcxy/p/15807056.html\">阿里巴巴Java开发手册详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"platform\"><a href=\"#platform\" class=\"headerlink\" title=\"platform\"></a>platform</h2><blockquote>\n<ul>\n<li><a href=\"http://www.ruoyi.vip/\">ruoyi（若依快速开发平台）</a></li>\n<li><a href=\"https://adminlte.io/\">AdminLTE（前端模板主题工具）</a></li>\n</ul>\n</blockquote>\n<h2 id=\"business\"><a href=\"#business\" class=\"headerlink\" title=\"business\"></a>business</h2><h3 id=\"automation\"><a href=\"#automation\" class=\"headerlink\" title=\"automation\"></a>automation</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SysRain2020/article/details/110551578\">自动化驾驶分级说明</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/500654922\">一文了解智能AGV自动化系统</a></li>\n</ul>\n</blockquote>\n<h3 id=\"detection\"><a href=\"#detection\" class=\"headerlink\" title=\"detection\"></a>detection</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010916331/article/details/122976854\">活体检测技术入门</a></li>\n<li><a href=\"https://blog.csdn.net/acceptedday/article/details/125166992\">活体检测技术进阶</a></li>\n<li><a href=\"https://blog.csdn.net/aizhushou/article/details/103769834\">活体检测技术详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Doc\"><a href=\"#Doc\" class=\"headerlink\" title=\"Doc\"></a>Doc</h1><h2 id=\"site\"><a href=\"#site\" class=\"headerlink\" title=\"site\"></a>site</h2><blockquote>\n<ul>\n<li><a href=\"https://devdocs.io/\">devdocs</a></li>\n</ul>\n</blockquote>\n<h2 id=\"apps\"><a href=\"#apps\" class=\"headerlink\" title=\"apps\"></a>apps</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xlgen157387/article/details/52970940\">API文档查询利器Dash和Zeal</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_24899403/article/details/103080604\">Linux和windows上关于Dash的替代品</a></li>\n</ul>\n</blockquote>\n<h2 id=\"tutorial\"><a href=\"#tutorial\" class=\"headerlink\" title=\"tutorial\"></a>tutorial</h2><h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><blockquote>\n<ul>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/\">Java8</a></li>\n<li><a href=\"https://commons.apache.org/\">Apache Commons</a></li>\n<li><a href=\"https://guava.dev/\">Google Guava</a></li>\n<li><a href=\"https://springdoc.cn/spring/\">Spring</a></li>\n<li><a href=\"https://springdoc.cn/spring-boot/\">SpringBoot</a></li>\n<li><a href=\"https://docs.spring.io/spring-cloud/docs/current/reference/html/\">SpringCloud</a></li>\n<li><a href=\"https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/zh-cn/index.html\">SpringCloudAlibaba</a></li>\n</ul>\n</blockquote>\n<h3 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h3><blockquote>\n<ul>\n<li><a href=\"https://docs.python.org/zh-cn/2.7/\">Python2</a></li>\n<li><a href=\"https://docs.python.org/zh-cn/3/\">Python3</a></li>\n<li><a href=\"https://flask-zh.readthedocs.io/\">Flask</a></li>\n<li><a href=\"https://docs.djangoproject.com/zh-hans\">Django</a></li>\n<li><a href=\"https://tornado-zh.readthedocs.io/\">Tornado</a></li>\n<li><a href=\"https://cn.python-requests.org/zh_CN/latest/\">Requests</a></li>\n<li><a href=\"https://docs.celeryq.dev/en/stable/userguide/index.html\">Celery</a></li>\n<li><a href=\"https://gunicorn.org/\">Gunicorn</a></li>\n<li><a href=\"http://supervisord.org/\">Supervisord</a></li>\n</ul>\n</blockquote>\n<h3 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><blockquote>\n<ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML\">Html</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Learn/CSS\">Css</a></li>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript\">JavaScript</a></li>\n<li><a href=\"https://www.aicesu.cn/doc/es6/\">ECMAScript6</a></li>\n<li><a href=\"https://cn.vuejs.org/guide/introduction.html\">Vue</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh/guide/index.html\">VueX</a></li>\n<li><a href=\"http://www.axios-js.com/zh-cn/docs/index.html\">Axios</a></li>\n<li><a href=\"https://www.npmjs.com/package/qs\">QS</a></li>\n<li><a href=\"https://blog.csdn.net/sufubo/article/details/117527953\">Ramda和Lodash、Underscore对比</a></li>\n<li><a href=\"https://www.underscorejs.cn/\">Underscore</a></li>\n<li><a href=\"https://www.lodashjs.com/\">Lodash</a></li>\n<li><a href=\"https://ramda.cn/\">Ramda</a></li>\n<li><a href=\"https://blog.csdn.net/Ed7zgeE9X/article/details/128810549\">分享9个前端开发人员必备的在线工具手册</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Code\"><a href=\"#Code\" class=\"headerlink\" title=\"Code\"></a>Code</h1><h2 id=\"repository\"><a href=\"#repository\" class=\"headerlink\" title=\"repository\"></a>repository</h2><h3 id=\"java-1\"><a href=\"#java-1\" class=\"headerlink\" title=\"java\"></a>java</h3><blockquote>\n<ul>\n<li><a href=\"https://mvnrepository.com/\">maven官方仓库</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30231473/article/details/128762552\">maven查找工具</a></li>\n</ul>\n</blockquote>\n<h3 id=\"python-1\"><a href=\"#python-1\" class=\"headerlink\" title=\"python\"></a>python</h3><blockquote>\n<ul>\n<li><a href=\"https://pypi.org/\">pip官方仓库</a></li>\n<li><a href=\"https://blog.csdn.net/u010953692/article/details/100062261\">pip查找工具</a></li>\n</ul>\n</blockquote>\n<h3 id=\"javascript-1\"><a href=\"#javascript-1\" class=\"headerlink\" title=\"javascript\"></a>javascript</h3><blockquote>\n<ul>\n<li><a href=\"https://www.npmjs.com/\">npm官方仓库</a></li>\n<li><a href=\"https://blog.csdn.net/justlpf/article/details/118803522\">npm查找工具</a></li>\n</ul>\n</blockquote>\n<h2 id=\"source\"><a href=\"#source\" class=\"headerlink\" title=\"source\"></a>source</h2><h3 id=\"jdk\"><a href=\"#jdk\" class=\"headerlink\" title=\"jdk\"></a>jdk</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cyan20115/article/details/106551183\">jdk源码下载入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37552984/article/details/124222390\">jdk源码下载详解</a></li>\n<li><a href=\"http://hg.openjdk.java.net/\">jdk源码下载地址</a></li>\n<li><a href=\"https://blog.csdn.net/hty1053240123/article/details/52858123\">国内在线查看Java源码方法</a></li>\n<li><a href=\"https://gitee.com/huangtianyu/jdk-source\">国内在线查看Java源码地址</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Creation\"><a href=\"#Creation\" class=\"headerlink\" title=\"Creation\"></a>Creation</h1><h2 id=\"write\"><a href=\"#write\" class=\"headerlink\" title=\"write\"></a>write</h2><h3 id=\"markdown\"><a href=\"#markdown\" class=\"headerlink\" title=\"markdown\"></a>markdown</h3><blockquote>\n<ul>\n<li><a href=\"https://markdown.com.cn/basic-syntax/\">markdown</a></li>\n<li><a href=\"https://coding.net/help/docs/ci/lint/markdown-code-lang.html\">markdown代码块编程语言清单</a></li>\n</ul>\n</blockquote>\n<h2 id=\"draw\"><a href=\"#draw\" class=\"headerlink\" title=\"draw\"></a>draw</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lvoelife/article/details/127369736\">DrawIO入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37541097/article/details/116024091\">DrawIO详解</a></li>\n<li><a href=\"https://www.drawzh.com/\">Draw.io中文学习交流网</a></li>\n</ul>\n</blockquote>\n<h3 id=\"plantUML\"><a href=\"#plantUML\" class=\"headerlink\" title=\"plantUML\"></a>plantUML</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/vitaviva/article/details/120639074\">PlantUML入门</a></li>\n<li><a href=\"https://blog.csdn.net/geduo_83/article/details/86422485\">PlantUML进阶</a></li>\n<li><a href=\"https://blog.csdn.net/chengbinbbs/article/details/105998740\">PlantUML详解</a></li>\n<li><a href=\"https://www.drawzh.com/1451.html\">PlantUML之draw.io</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44866828/article/details/127537807\">PlantUML之idea</a></li>\n<li><a href=\"https://blog.csdn.net/hhaowang/article/details/117525847\">PlantUML之vscode</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h1><h2 id=\"排查文章中的时间顺序\"><a href=\"#排查文章中的时间顺序\" class=\"headerlink\" title=\"排查文章中的时间顺序\"></a>排查文章中的时间顺序</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">find <span class=\"built_in\">source</span>/_posts/ -name <span class=\"string\">&#x27;*.md&#x27;</span> | xargs awk <span class=\"string\">&#x27;/^date:/&#123;print $2&quot;T&quot;$3&quot;: &quot;FILENAME&#125;&#x27;</span> | <span class=\"built_in\">sort</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"排查文章中的正文前部\"><a href=\"#排查文章中的正文前部\" class=\"headerlink\" title=\"排查文章中的正文前部\"></a>排查文章中的正文前部</h2><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">find <span class=\"built_in\">source</span>/_posts/ -name <span class=\"string\">&#x27;*.md&#x27;</span> | xargs awk <span class=\"string\">&#x27;&#123;if($0~/---/)print FILENAME&quot;@&quot;FNR&quot;: &quot;$0&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<p>Front-matter：正文前部</p>\n<h2 id=\"查找文件并执行操作\"><a href=\"#查找文件并执行操作\" class=\"headerlink\" title=\"查找文件并执行操作\"></a>查找文件并执行操作</h2><h3 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">find .</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">find . -newermt <span class=\"string\">&#x27;2023-05-01&#x27;</span> -a ! -<span class=\"built_in\">type</span> d | grep -E -v <span class=\"string\">&#x27;*.java|*.class&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"windows\"><a href=\"#windows\" class=\"headerlink\" title=\"windows\"></a>windows</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd g:</span><br><span class=\"line\"></span><br><span class=\"line\">ls data* | foreach-object &#123; $_.CreationTime = &#x27;2021/01/01 19:00:00&#x27; ; $_.LastWriteTime = &#x27;2021/01/01 19:00:00&#x27; ; $_.LastAccessTime = &#x27;2021/01/01 19:00:00&#x27; &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">cd g:/data</span><br><span class=\"line\"></span><br><span class=\"line\">Get-ChildItem -Recurse -Attributes !System+!ReadOnly+!Hidden | foreach-object &#123; $_.CreationTime = &#x27;2021/01/01 19:00:00&#x27; ; $_.LastWriteTime = &#x27;2021/01/01 19:00:00&#x27; ; $_.LastAccessTime = &#x27;2021/01/01 19:00:00&#x27; &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Get-ChildItem</span> <span class=\"literal\">-Recurse</span> <span class=\"literal\">-Attributes</span> !System+!ReadOnly+!<span class=\"keyword\">Hidden</span> | <span class=\"built_in\">foreach-object</span> &#123; <span class=\"variable\">$OutStr</span> = <span class=\"variable\">$_</span>.Name + <span class=\"string\">&#x27; CreationTime: &#x27;</span> + <span class=\"variable\">$_</span>.CreationTime + <span class=\"string\">&#x27; LastWriteTime: &#x27;</span> + <span class=\"variable\">$_</span>.LastWriteTime + <span class=\"string\">&#x27; LastAccessTime: &#x27;</span> + <span class=\"variable\">$_</span>.LastAccessTime ; <span class=\"built_in\">echo</span> <span class=\"variable\">$OutStr</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Get-ChildItem</span> <span class=\"literal\">-Recurse</span> <span class=\"literal\">-Attributes</span> !System+!ReadOnly+!<span class=\"keyword\">Hidden</span> | <span class=\"built_in\">foreach-object</span> &#123; <span class=\"variable\">$_</span>.CreationTime = <span class=\"string\">&#x27;2021/01/01 19:00:00&#x27;</span> ; <span class=\"variable\">$_</span>.LastWriteTime = <span class=\"built_in\">Get-Date</span> ; <span class=\"variable\">$_</span>.LastAccessTime = <span class=\"built_in\">Get-Date</span> &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight powershell\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">Get-ChildItem</span> <span class=\"literal\">-Recurse</span> <span class=\"literal\">-Attributes</span> !System+!ReadOnly+!<span class=\"keyword\">Hidden</span> | <span class=\"built_in\">foreach-object</span> &#123; <span class=\"variable\">$_</span>.CreationTime = <span class=\"string\">&#x27;2021/01/01 19:00:00&#x27;</span> ; <span class=\"variable\">$_</span>.LastWriteTime = <span class=\"string\">&#x27;2021/01/01 19:00:00&#x27;</span> ; <span class=\"variable\">$_</span>.LastAccessTime = <span class=\"string\">&#x27;2021/01/01 19:00:00&#x27;</span> &#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Snippet\"><a href=\"#Snippet\" class=\"headerlink\" title=\"Snippet\"></a>Snippet</h1><h2 id=\"glob\"><a href=\"#glob\" class=\"headerlink\" title=\"glob\"></a>glob</h2><h3 id=\"搜索文章包含和排除\"><a href=\"#搜索文章包含和排除\" class=\"headerlink\" title=\"搜索文章包含和排除\"></a>搜索文章包含和排除</h3><p>include</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">source/_posts/**/*.md</span><br></pre></td></tr></table></figure>\n\n<p>exclude</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hello-world.md,todo.md</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"regex\"><a href=\"#regex\" class=\"headerlink\" title=\"regex\"></a>regex</h2><h3 id=\"排查文章中的英文冒号\"><a href=\"#排查文章中的英文冒号\" class=\"headerlink\" title=\"排查文章中的英文冒号\"></a>排查文章中的英文冒号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(?&lt;!title|description|date|categories|tags|lang|site|mvc|context):[^/0-9]</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查文章中的英文括号\"><a href=\"#排查文章中的英文括号\" class=\"headerlink\" title=\"排查文章中的英文括号\"></a>排查文章中的英文括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(?&lt;!\\d|[a-z]|[&quot;&gt;\\]&#125;\\)（）]|=\\s|if\\s|else\\s|for\\s|try\\s|Traceback\\s)\\((?!\\)|new)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查文章中的英文逗号\"><a href=\"#排查文章中的英文逗号\" class=\"headerlink\" title=\"排查文章中的英文逗号\"></a>排查文章中的英文逗号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(?&lt;!\\d|[a-z]|&quot;),</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Topic\"><a href=\"#Topic\" class=\"headerlink\" title=\"Topic\"></a>Topic</h1><h2 id=\"site-1\"><a href=\"#site-1\" class=\"headerlink\" title=\"site\"></a>site</h2><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/54882698\">开发相关的网站</a></li>\n</ul>\n</blockquote>\n<p>论坛网站、问答网站、博客网站、社区网站、教程网站、教育网站、资源网站</p>\n<h3 id=\"论坛网站\"><a href=\"#论坛网站\" class=\"headerlink\" title=\"论坛网站\"></a>论坛网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chanpinyunying/article/details/8475714\">论坛网站概述</a></li>\n</ul>\n</blockquote>\n<p>国外：reddit<br>国内：知乎、贴吧、豆瓣</p>\n<h3 id=\"问答网站\"><a href=\"#问答网站\" class=\"headerlink\" title=\"问答网站\"></a>问答网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ananhao/article/details/78203051\">问答网站概述</a></li>\n<li><a href=\"https://www.zhihu.com/question/19575898\">Stack Overflow和Quora 的区别</a></li>\n<li><a href=\"https://www.zhihu.com/question/19962705\">Stack Exchange和Stack Overflow的区别</a></li>\n</ul>\n</blockquote>\n<p>国外：quora、stackoverflow、stackexchange<br>国内：知乎（zhihu）、思否（segmentfault）</p>\n<h3 id=\"博客网站\"><a href=\"#博客网站\" class=\"headerlink\" title=\"博客网站\"></a>博客网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/loongshawn/article/details/106031780\">博客网站概述</a></li>\n</ul>\n</blockquote>\n<p>国外：wrodpress<br>国内：csdn、博客园（cnblog）、简书（jianshu）、iteye、51cto</p>\n<h3 id=\"社区网站\"><a href=\"#社区网站\" class=\"headerlink\" title=\"社区网站\"></a>社区网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/GTX780t/article/details/103066271\">社区网站概述</a></li>\n</ul>\n</blockquote>\n<p>国外：infoq<br>国内：知乎（zhihu）、掘金（juejin）、开源中国（oschina）</p>\n<h3 id=\"教程网站\"><a href=\"#教程网站\" class=\"headerlink\" title=\"教程网站\"></a>教程网站</h3><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/50816355\">如何评价编程狮</a></li>\n<li><a href=\"https://www.zhihu.com/question/59803381\">如何评价菜鸟教程</a></li>\n<li><a href=\"https://www.zhihu.com/question/30113934\">如何评价慕课网</a></li>\n</ul>\n</blockquote>\n<p>编程狮（w3cschool）、菜鸟教程（runoob）、慕课网（imooc）</p>\n<h3 id=\"教育网站\"><a href=\"#教育网站\" class=\"headerlink\" title=\"教育网站\"></a>教育网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fly1north/article/details/116565353\">教育网站概述</a></li>\n</ul>\n</blockquote>\n<p>国外：<br>国内：</p>\n<h3 id=\"资源网站\"><a href=\"#资源网站\" class=\"headerlink\" title=\"资源网站\"></a>资源网站</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Fantasc/article/details/118632005\">资源网站概述</a></li>\n</ul>\n</blockquote>\n<p>国外：<br>国内：</p>\n<h2 id=\"blog\"><a href=\"#blog\" class=\"headerlink\" title=\"blog\"></a>blog</h2><h3 id=\"java-2\"><a href=\"#java-2\" class=\"headerlink\" title=\"java\"></a>java</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/114766878\">一角钱技术—2021系列整理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34827674?type=blog\">小林coding的博客</a></li>\n<li><a href=\"https://moonce.blog.csdn.net/?type=blog\">猫巳的博客</a></li>\n</ul>\n</blockquote>\n<h2 id=\"github\"><a href=\"#github\" class=\"headerlink\" title=\"github\"></a>github</h2><blockquote>\n<ul>\n<li><a href=\"https://github.com/EbookFoundation/free-programming-books\">free-programming-books</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h1><h2 id=\"效率工具\"><a href=\"#效率工具\" class=\"headerlink\" title=\"效率工具\"></a>效率工具</h2><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/33199992\">Mac效率神器Alfred</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/158346286\">Windows效率神器PowerToys</a></li>\n<li><a href=\"https://u.tools/\">Windows效率神器uTools</a></li>\n</ul>\n</blockquote>\n<h2 id=\"开发工具\"><a href=\"#开发工具\" class=\"headerlink\" title=\"开发工具\"></a>开发工具</h2><blockquote>\n<ul>\n<li><a href=\"https://juejin.cn/post/7184246387939704891\">开发者工具软件He3</a></li>\n<li><a href=\"https://www.smart-tools.cn/\">开发者工具网站smart-tools</a></li>\n<li><a href=\"https://stackoverflow.org.cn/tools\">开发者工具网站stackoverflow-tools</a></li>\n<li><a href=\"https://tooltt.com/\">开发者工具网站tooltt</a></li>\n<li><a href=\"https://blog.csdn.net/Cappuccino_jay/article/details/125867122\">开发者工具之json转table schema</a></li>\n</ul>\n</blockquote>\n<h2 id=\"文档工具\"><a href=\"#文档工具\" class=\"headerlink\" title=\"文档工具\"></a>文档工具</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34065636/article/details/112648032\">接口文档工具</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46521785/article/details/119812280\">使用文档工具</a></li>\n<li><a href=\"https://blog.csdn.net/horses/article/details/108536784\">文档格式转换工具Pandoc</a></li>\n</ul>\n</blockquote>\n<h2 id=\"产品工具\"><a href=\"#产品工具\" class=\"headerlink\" title=\"产品工具\"></a>产品工具</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_51767858/article/details/125519685\">思维导图工具</a></li>\n<li><a href=\"https://blog.csdn.net/FourxiYuanzi/article/details/130253440\">原型设计工具</a></li>\n<li><a href=\"https://blog.csdn.net/QKK612501/article/details/122087770\">流程绘图工具</a></li>\n</ul>\n</blockquote>\n<h2 id=\"博客工具\"><a href=\"#博客工具\" class=\"headerlink\" title=\"博客工具\"></a>博客工具</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45784655/article/details/104780438\">个人博客搭建框架</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/coderising/article/details/128979282\">为什么我们不再发明编程语言了</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42363090/article/details/112861120\">程序员摸鱼神器入门</a></li>\n<li><a href=\"https://blog.csdn.net/csdnnews/article/details/107218571\">程序员摸鱼神器进阶</a></li>\n<li><a href=\"https://m.toutiao.com/article/7198521625183126073\">程序员摸鱼神器详解</a></li>\n<li><a href=\"https://blog.csdn.net/Crazymryan/article/details/107650554\">程序员独立开发接活网站</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34311210/article/details/114684662\">程序员独立开发开源系统</a></li>\n</ul>\n</blockquote>\n<p>能力模型</p>\n<ul>\n<li>初级：了解某个东西是什么并怎么使用</li>\n<li>中级：精通某个东西的原理</li>\n<li>高级：能够完整的造出某个东西</li>\n</ul>\n<h2 id=\"proxy\"><a href=\"#proxy\" class=\"headerlink\" title=\"proxy\"></a>proxy</h2><blockquote>\n<ul>\n<li><a href=\"https://www.hopezz.com/notice/24207.html\">ss分享站</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1602613507287751730\">ss和ssr的区别</a></li>\n<li><a href=\"https://github.com/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7\">ss免费账号1</a></li>\n<li><a href=\"https://tr1.freeku9.xyz/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7/\">ss免费账号2</a></li>\n<li><a href=\"https://a1.freegithub.site/Alvin9999/new-pac/wiki/ss%E5%85%8D%E8%B4%B9%E8%B4%A6%E5%8F%B7\">ss免费账号3</a></li>\n</ul>\n</blockquote>\n<p>关键字 freessr</p>\n<h2 id=\"desktop\"><a href=\"#desktop\" class=\"headerlink\" title=\"desktop\"></a>desktop</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44008788/article/details/130407712\">桌面应用跨平台开发</a></li>\n<li><a href=\"https://blog.csdn.net/LaoYuanPython/article/details/116277230\">一文带你读懂PyQt</a></li>\n<li><a href=\"https://www.electronjs.org/zh/\">Electron文档</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + summary"],"tags":["+ summary"]},{"title":"dsa","url":"/2017/03/01/dsa/dsa/","content":"<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/115044709\">数据结构和算法详解</a></li>\n<li><a href=\"https://blog.csdn.net/demon_lmman/category_10804260.html\">数据结构和算法图解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"数据结构（structure）\"><a href=\"#数据结构（structure）\" class=\"headerlink\" title=\"数据结构（structure）\"></a>数据结构（structure）</h1><h2 id=\"存储结构与逻辑结构\"><a href=\"#存储结构与逻辑结构\" class=\"headerlink\" title=\"存储结构与逻辑结构\"></a>存储结构与逻辑结构</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Deardanuomi/article/details/114777175\">存储结构和逻辑结构</a></li>\n</ul>\n</blockquote>\n<h2 id=\"存储结构\"><a href=\"#存储结构\" class=\"headerlink\" title=\"存储结构\"></a>存储结构</h2><h3 id=\"顺序存储结构\"><a href=\"#顺序存储结构\" class=\"headerlink\" title=\"顺序存储结构\"></a>顺序存储结构</h3><p>俗称为 <code>数组</code> （array）</p>\n<h3 id=\"链式存储结构\"><a href=\"#链式存储结构\" class=\"headerlink\" title=\"链式存储结构\"></a>链式存储结构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42270373/article/details/83758928\">节点和结点的区别</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>链表实现可以参考这里（原创）<a href=\"/2017/03/01/dsa/link/\" title=\"链表\">链表</a></p>\n</blockquote>\n<p>俗称为 <code>链表</code> （link）</p>\n<ul>\n<li>元素（element）：包含各种数据的对象</li>\n<li>结点（node）：包含元素（element）和指向下一个结点（node）的指针（java中为引用）</li>\n<li>头结点：链表中的第一个结点（包含的元素一般为空而不是第一个元素）</li>\n<li>尾结点：链表中的最后一个结点</li>\n<li>元结点：链表中包含第一个元素的结点（当头结点包含第一个元素时头结点等于元结点）</li>\n<li>头指针：指向链表的头部（head），即指向头结点</li>\n<li>尾指针：指向链表的尾部（tail），即指向尾结点</li>\n</ul>\n<blockquote>\n<p>头结点的作用</p>\n<ul>\n<li>简化操作：无头结点时添加和删除元结点需要特殊处理（更新head指针），有头结点时不需要</li>\n</ul>\n</blockquote>\n<h2 id=\"逻辑结构\"><a href=\"#逻辑结构\" class=\"headerlink\" title=\"逻辑结构\"></a>逻辑结构</h2><ul>\n<li>可选（optional）：包含一个元素的容器（container）结构</li>\n<li>合集（collection）：包含多个元素的容器（container）结构</li>\n<li>集合（set）：无序的合集（collection）</li>\n<li>列表（list）：有序的合集（collection）<ul>\n<li>队列（queue）：只支持尾部插入和头部删除的列表（list）</li>\n<li>栈列（stack）：只支持头部插入和头部删除的列表（list）</li>\n</ul>\n</li>\n<li>字典（dict）：支持键和值快速关联的映射（mapping）结构</li>\n<li>堆（heap）：父结点比子结点大或小（兄弟结点无大小关系）的树形（tree）结构</li>\n<li>跳表（skiplist）：多层链表组合的形成的表格（table）结构</li>\n</ul>\n<blockquote>\n<p>优先级队列实现：堆<br>可排序字典实现：红黑树或者跳表</p>\n</blockquote>\n<h3 id=\"集合结构\"><a href=\"#集合结构\" class=\"headerlink\" title=\"集合结构\"></a>集合结构</h3><p>零个或多个数据元素的无序合集（collection），俗称为 <code>集合</code> （set）</p>\n<h3 id=\"线性结构\"><a href=\"#线性结构\" class=\"headerlink\" title=\"线性结构\"></a>线性结构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/113463997\">数据结构和算法之线性表详解</a></li>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/113852222\">数据结构和算法之队列和栈列详解</a></li>\n</ul>\n</blockquote>\n<p>零个或多个数据元素的有序合集（collection），俗称为 <code>线性表</code> （sequence table）</p>\n<p>包含如下几种分类</p>\n<ul>\n<li><code>列表</code>（list）：可以在任意位置插入（add）和删除（remove）</li>\n<li><code>队列</code>（queue）：只能在尾部（rear）插入（enqueue）和头部（front）删除（dequeue）</li>\n<li><code>栈列</code>（stack）：只能在顶部（top）插入（push）和删除（pop）</li>\n</ul>\n<h4 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h4><blockquote>\n<p>列表实现可以参考这里（原创） <a href=\"/2017/03/01/dsa/dsa-1-structure/list/\" title=\"list\">list</a></p>\n</blockquote>\n<h4 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a>队列</h4><blockquote>\n<p>队列实现可以参考这里（原创） <a href=\"/2017/03/01/dsa/dsa-1-structure/queue/\" title=\"queue\">queue</a></p>\n</blockquote>\n<h4 id=\"栈列\"><a href=\"#栈列\" class=\"headerlink\" title=\"栈列\"></a>栈列</h4><blockquote>\n<p>栈列实现可以参考这里（原创） <a href=\"/2017/03/01/dsa/dsa-1-structure/stack/\" title=\"stack\">stack</a></p>\n</blockquote>\n<h3 id=\"树形结构\"><a href=\"#树形结构\" class=\"headerlink\" title=\"树形结构\"></a>树形结构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/113930623\">数据结构和算法之树详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a>二叉树</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_51601105/article/details/121069707\">二叉树入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41404557/article/details/115447169\">二叉树进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_51367845/article/details/121084043\">二叉树详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51126511/article/details/124335239\">二叉树的性质详解</a></li>\n<li><a href=\"https://blog.csdn.net/why_still_confused/article/details/51532222\">二叉树的性质证明</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45302622/article/details/103973286\">二叉树的深度和高度的区别</a></li>\n<li><a href=\"https://blog.csdn.net/My_Jobs/article/details/43451187\">二叉树遍历详解</a></li>\n</ul>\n</blockquote>\n<p>二叉树遍历：前序、中序、后序、层次遍历、深度优先、广度优先</p>\n<h5 id=\"满二叉树\"><a href=\"#满二叉树\" class=\"headerlink\" title=\"满二叉树\"></a>满二叉树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jalja365/article/details/110947051\">满二叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"完全二叉树\"><a href=\"#完全二叉树\" class=\"headerlink\" title=\"完全二叉树\"></a>完全二叉树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45984250/article/details/114932638\">完全二叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"线索二叉树\"><a href=\"#线索二叉树\" class=\"headerlink\" title=\"线索二叉树\"></a>线索二叉树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_54186646/article/details/124435916\">线索二叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"查找二叉树\"><a href=\"#查找二叉树\" class=\"headerlink\" title=\"查找二叉树\"></a>查找二叉树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_57180439/article/details/123035613\">查找二叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"平衡二叉树\"><a href=\"#平衡二叉树\" class=\"headerlink\" title=\"平衡二叉树\"></a>平衡二叉树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_38036210/article/details/100517125\">平衡二叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"红黑树\"><a href=\"#红黑树\" class=\"headerlink\" title=\"红黑树\"></a>红黑树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014454538/article/details/120120216\">红黑树详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"多叉树\"><a href=\"#多叉树\" class=\"headerlink\" title=\"多叉树\"></a>多叉树</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46573836/article/details/115672919\">多叉树详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"B树\"><a href=\"#B树\" class=\"headerlink\" title=\"B树\"></a>B树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Fawn_1996/article/details/117661824\">B树家族入门</a></li>\n<li><a href=\"https://blog.csdn.net/A_zhangq/article/details/99662693\">B树家族进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ls5718/article/details/51745131\">B树家族详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"B-树\"><a href=\"#B-树\" class=\"headerlink\" title=\"B-树\"></a>B-树</h6><h6 id=\"B-树-1\"><a href=\"#B-树-1\" class=\"headerlink\" title=\"B+树\"></a>B+树</h6><h6 id=\"B-树-2\"><a href=\"#B-树-2\" class=\"headerlink\" title=\"B*树\"></a>B*树</h6><h4 id=\"二叉堆\"><a href=\"#二叉堆\" class=\"headerlink\" title=\"二叉堆\"></a>二叉堆</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiaomucgwlmx/article/details/103522410\">二叉堆详解</a></li>\n<li><a href=\"https://blog.csdn.net/YUBANGSHUANGYUER/article/details/106008341\">二叉堆（Heap）与二叉查找树（Binary Search Tree）的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"多叉堆\"><a href=\"#多叉堆\" class=\"headerlink\" title=\"多叉堆\"></a>多叉堆</h4><h4 id=\"跳表\"><a href=\"#跳表\" class=\"headerlink\" title=\"跳表\"></a>跳表</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_49834705/article/details/112465244\">跳表详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"图形结构\"><a href=\"#图形结构\" class=\"headerlink\" title=\"图形结构\"></a>图形结构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/114141377\">数据结构和算法之图详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/122468043\">图遍历详解</a></li>\n</ul>\n</blockquote>\n<p>图遍历：深度优先遍历、广度优先遍历</p>\n<h1 id=\"数据算法（algorithm）\"><a href=\"#数据算法（algorithm）\" class=\"headerlink\" title=\"数据算法（algorithm）\"></a>数据算法（algorithm）</h1><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/Christbao/p/13296732.html\">常见的算法思想</a></li>\n</ul>\n</blockquote>\n<h2 id=\"查找算法\"><a href=\"#查找算法\" class=\"headerlink\" title=\"查找算法\"></a>查找算法</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/114359564\">数据结构和算法之查找算法详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37741420/article/details/107705009\">java版查找算法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45608306/article/details/113525178\">二分查找之数组有序不是必要条件</a></li>\n</ul>\n</blockquote>\n<h2 id=\"排序算法\"><a href=\"#排序算法\" class=\"headerlink\" title=\"排序算法\"></a>排序算法</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Real_Fool_/article/details/114692744\">数据结构和算法之排序算法详解</a></li>\n<li><a href=\"https://blog.csdn.net/xiaomucgwlmx/article/details/82589626\">java版排序算法</a></li>\n</ul>\n</blockquote>\n","categories":["+ das"],"tags":["+ dsa"]},{"title":"链表","url":"/2017/03/01/dsa/link/","content":"<h1 id=\"单链表\"><a href=\"#单链表\" class=\"headerlink\" title=\"单链表\"></a>单链表</h1><h2 id=\"单链表-1\"><a href=\"#单链表-1\" class=\"headerlink\" title=\"单链表\"></a>单链表</h2><h3 id=\"单链表（无头结点）\"><a href=\"#单链表（无头结点）\" class=\"headerlink\" title=\"单链表（无头结点）\"></a>单链表（无头结点）</h3><figure class=\"highlight java\"><figcaption><span>MySingleLinkWithoutHeadNode.java</span><a href=\"/downloads/code/java/dsa/link/MySingleLinkWithoutHeadNode.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 插入操作不需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 删除操作需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 无头结点时操作第一个元素需要更新head指针</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySingleLinkWithoutHeadNode</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyNode</span> {</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String value;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyNode</span><span class=\"params\">(String value)</span> {</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MyNode head;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MySingleLinkWithoutHeadNode</span><span class=\"params\">()</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addFirst</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p is updated but head not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node.next = p;</span></span><br><span class=\"line\">        <span class=\"comment\">// p = node;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeFirst</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p is updated but head not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node = p;</span></span><br><span class=\"line\">        <span class=\"comment\">// p = node.next;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addLast</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// no one node, handle as add first node</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"comment\">// return addFirst(s);</span></span><br><span class=\"line\"></span><br><span class=\"line\">            node.next = head;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">            head = node;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeLast</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// only one node, handle as remove first node</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"comment\">// return removeFirst();</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">            head = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next.next to find the penult node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            size++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] toArray() {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> size();</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] array = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[size];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            array[i] = p.value;</span><br><span class=\"line\"></span><br><span class=\"line\">            i++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MySingleLinkWithoutHeadNode</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MySingleLinkWithoutHeadNode</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">(MySingleLinkWithoutHeadNode link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addLast and removeFirst</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addLast and removeFirst---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addLast(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">(MySingleLinkWithoutHeadNode link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addFirst and removeLast</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addFirst and removeLast---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addFirst(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"单链表（有头结点）\"><a href=\"#单链表（有头结点）\" class=\"headerlink\" title=\"单链表（有头结点）\"></a>单链表（有头结点）</h3><figure class=\"highlight java\"><figcaption><span>MySingleLink.java</span><a href=\"/downloads/code/java/dsa/link/MySingleLink.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 插入操作不需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 删除操作需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySingleLink</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyNode</span> {</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String value;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyNode</span><span class=\"params\">(String value)</span> {</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">MyNode</span> <span class=\"variable\">head</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MySingleLink</span><span class=\"params\">()</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addFirst</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p.next is updated but head.next not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node.next = p.next;</span></span><br><span class=\"line\">        <span class=\"comment\">// p.next = node;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeFirst</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p.next is updated but head.next not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node = p.next;</span></span><br><span class=\"line\">        <span class=\"comment\">// p.next = node.next;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addLast</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeLast</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next.next to find the penult node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            size++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] toArray() {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> size();</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] array = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[size];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            array[i] = p.value;</span><br><span class=\"line\"></span><br><span class=\"line\">            i++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MySingleLink</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MySingleLink</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">(MySingleLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addLast and removeFirst</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addLast and removeFirst---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addLast(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">(MySingleLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addFirst and removeLast</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addFirst and removeLast---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addFirst(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"循环单链表\"><a href=\"#循环单链表\" class=\"headerlink\" title=\"循环单链表\"></a>循环单链表</h2><h3 id=\"循环单链表（头指针）\"><a href=\"#循环单链表（头指针）\" class=\"headerlink\" title=\"循环单链表（头指针）\"></a>循环单链表（头指针）</h3><figure class=\"highlight java\"><figcaption><span>MySingleCirculaLink.java</span><a href=\"/downloads/code/java/dsa/link/MySingleCirculaLink.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 插入操作不需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 删除操作需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySingleCirculaLink</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyNode</span> {</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String value;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyNode</span><span class=\"params\">(String value)</span> {</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">MyNode</span> <span class=\"variable\">head</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MySingleCirculaLink</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        head.next = head;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addFirst</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p.next is updated but head.next not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node.next = p.next;</span></span><br><span class=\"line\">        <span class=\"comment\">// p.next = node;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeFirst</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == head) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// update head pointer</span></span><br><span class=\"line\">        head.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// error code: p.next is updated but head.next not</span></span><br><span class=\"line\">        <span class=\"comment\">// MyNode p = head;</span></span><br><span class=\"line\">        <span class=\"comment\">// node = p.next;</span></span><br><span class=\"line\">        <span class=\"comment\">// p.next = node.next;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addLast</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != head) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeLast</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == head) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next.next to find the penult node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next.next != head) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> p.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        p.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != head) {</span><br><span class=\"line\">            size++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] toArray() {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> size();</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] array = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[size];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != head) {</span><br><span class=\"line\">            array[i] = p.value;</span><br><span class=\"line\"></span><br><span class=\"line\">            i++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MySingleCirculaLink</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MySingleCirculaLink</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">(MySingleCirculaLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addLast and removeFirst</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addLast and removeFirst---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addLast(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">(MySingleCirculaLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addFirst and removeLast</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addFirst and removeLast---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addFirst(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环单链表（尾指针）\"><a href=\"#循环单链表（尾指针）\" class=\"headerlink\" title=\"循环单链表（尾指针）\"></a>循环单链表（尾指针）</h3><figure class=\"highlight java\"><figcaption><span>MySingleCircularLinkWithTailPointer.java</span><a href=\"/downloads/code/java/dsa/link/MySingleCircularLinkWithTailPointer.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySingleCircularLinkWithTailPointer</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"双链表\"><a href=\"#双链表\" class=\"headerlink\" title=\"双链表\"></a>双链表</h1><h2 id=\"双链表-1\"><a href=\"#双链表-1\" class=\"headerlink\" title=\"双链表\"></a>双链表</h2><figure class=\"highlight java\"><figcaption><span>MyDoubleLink.java</span><a href=\"/downloads/code/java/dsa/link/MyDoubleLink.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 插入操作不需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 删除操作需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyDoubleLink</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyNode</span> {</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String value;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode next;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode prev;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyNode</span><span class=\"params\">(String value)</span> {</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">MyNode</span> <span class=\"variable\">head</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyDoubleLink</span><span class=\"params\">()</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addFirst</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = head.next;</span><br><span class=\"line\">        node.prev = head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            node.next.prev = node;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.prev.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeFirst</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            node.next.prev = node.prev;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.prev.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addLast</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = p.next;</span><br><span class=\"line\">        node.prev = p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            node.next.prev = node;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.prev.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeLast</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> p;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (node.next != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            node.next.prev = node.prev;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.prev.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            size++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] toArray() {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> size();</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] array = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[size];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">            array[i] = p.value;</span><br><span class=\"line\"></span><br><span class=\"line\">            i++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyDoubleLink</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyDoubleLink</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">(MyDoubleLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addLast and removeFirst</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addLast and removeFirst---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addLast(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">(MyDoubleLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addFirst and removeLast</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addFirst and removeLast---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addFirst(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"循环双链表\"><a href=\"#循环双链表\" class=\"headerlink\" title=\"循环双链表\"></a>循环双链表</h2><figure class=\"highlight java\"><figcaption><span>MyDoubleCirculaLink.java</span><a href=\"/downloads/code/java/dsa/link/MyDoubleCirculaLink.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.link;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 插入操作不需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 删除操作需要考虑空链表</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyDoubleCirculaLink</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyNode</span> {</span><br><span class=\"line\">        <span class=\"keyword\">public</span> String value;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode next;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> MyNode prev;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">MyNode</span><span class=\"params\">(String value)</span> {</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.value = value;</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">MyNode</span> <span class=\"variable\">head</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(<span class=\"literal\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyDoubleCirculaLink</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        head.next = head;</span><br><span class=\"line\">        head.prev = head;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addFirst</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = head.next;</span><br><span class=\"line\">        node.prev = head;</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next.prev = node;</span><br><span class=\"line\">        node.prev.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeFirst</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == head) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next.prev = node.prev;</span><br><span class=\"line\">        node.prev.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">addLast</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyNode</span>(s);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != head) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next = p.next;</span><br><span class=\"line\">        node.prev = p;</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next.prev = node;</span><br><span class=\"line\">        node.prev.next = node;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">removeLast</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"comment\">// empty link</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (head.next == head) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// use p.next to find the last node</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p.next != head) {</span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">node</span> <span class=\"operator\">=</span> p;</span><br><span class=\"line\"></span><br><span class=\"line\">        node.next.prev = node.prev;</span><br><span class=\"line\">        node.prev.next = node.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> node.value;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">size</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != head) {</span><br><span class=\"line\">            size++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> size;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String[] toArray() {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> size();</span><br><span class=\"line\"></span><br><span class=\"line\">        String[] array = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[size];</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">MyNode</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> head.next;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (p != head) {</span><br><span class=\"line\">            array[i] = p.value;</span><br><span class=\"line\"></span><br><span class=\"line\">            i++;</span><br><span class=\"line\"></span><br><span class=\"line\">            p = p.next;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyDoubleCirculaLink</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyDoubleCirculaLink</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">        test1(link, capacity);</span><br><span class=\"line\">        test2(link, capacity);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">(MyDoubleCirculaLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addLast and removeFirst</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addLast and removeFirst---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addLast(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeFirst();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test2</span><span class=\"params\">(MyDoubleCirculaLink link, <span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"comment\">// test for addFirst and removeLast</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test for addFirst and removeLast---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            link.addFirst(s);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;add    value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\">        }</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> link.removeLast();</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(String.format(<span class=\"string\">&quot;remove value %2s , link is %s&quot;</span>, s, link.toString()));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n","categories":["+ das"],"tags":["+ dsa"]},{"title":"social","url":"/2017/05/01/essay/social/","content":"<h1 id=\"社会\"><a href=\"#社会\" class=\"headerlink\" title=\"社会\"></a>社会</h1><h2 id=\"社会人员组成\"><a href=\"#社会人员组成\" class=\"headerlink\" title=\"社会人员组成\"></a>社会人员组成</h2><p>三教 四民 九流</p>\n<p>三教 儒教 道教 佛教<br>四民 读书 务农 做工 经商<br>九流 儒家 道家 法家 墨家 纵横家 阴阳家 名家 杂家 农家</p>\n<p>皇贵门世 皇族 贵族 门阀 世家<br>官绅地宗 官员 乡绅 地主 宗主<br>士农工商 学者 农民 工人 商贾</p>\n<h1 id=\"国家\"><a href=\"#国家\" class=\"headerlink\" title=\"国家\"></a>国家</h1><h2 id=\"行政机构组成\"><a href=\"#行政机构组成\" class=\"headerlink\" title=\"行政机构组成\"></a>行政机构组成</h2><h3 id=\"古代的主要行政机构组成\"><a href=\"#古代的主要行政机构组成\" class=\"headerlink\" title=\"古代的主要行政机构组成\"></a>古代的主要行政机构组成</h3><p>内阁 内阁首辅 丞相</p>\n<p>六部<br>吏部 户部 礼部<br>兵部 刑部 工部</p>\n<p>翰林院 国子监 御史台</p>\n<h3 id=\"现代的主要行政机构组成\"><a href=\"#现代的主要行政机构组成\" class=\"headerlink\" title=\"现代的主要行政机构组成\"></a>现代的主要行政机构组成</h3><p>国务院</p>\n<p>组织部 财务部 外交部<br>国防部 公检法 发改委</p>\n<p>教育部</p>\n<blockquote>\n<p>ps：领导职务从大到小是: 市委书记、市长、政法委书记</p>\n</blockquote>\n<h2 id=\"行政区域划分\"><a href=\"#行政区域划分\" class=\"headerlink\" title=\"行政区域划分\"></a>行政区域划分</h2><blockquote>\n<ul>\n<li><a href=\"https://www.youbianku.com/%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E6%9F%90%E4%B8%AA%E5%9C%B0%E5%9D%80%E6%89%80%E5%B1%9E%E8%A1%97%E9%81%93%E5%8A%9E%E4%BA%8B%E5%A4%84%EF%BC%9F\">如何快速查询某个地址所属街道办事处</a></li>\n</ul>\n</blockquote>\n<p>行政<br>省 直辖市<br>市 地级市 县级市<br>县 区<br>镇<br>街道 村</p>\n<blockquote>\n<p>ps：小区不是行政单位，属于街道（？？? 怎么知道小区所在的街道？？？）</p>\n</blockquote>\n<h2 id=\"统一服务平台\"><a href=\"#统一服务平台\" class=\"headerlink\" title=\"统一服务平台\"></a>统一服务平台</h2><p>统一政务平台<br>统一查询平台 小区所在街道 邮政编码 政务地址<br>统一证明平台 证明证件，尤其是执法人员的<br>统一授权平台 授权授信，自办授权，代办授信<br>统一通知平台 公告（地方和全国） 预警<br>  公告 停水电气 交通调整 道路维修 建设进展<br>  预警 大雨 强风 高温 洪水 台风 地震<br>统一舆情平台 舆情监控，处理，辟谣<br>统一社保平台 社保（养老 医疗 工伤 失业 生育）<br>  统一养老平台 养老<br>  统一医疗平台 医疗（挂号）<br>  统一生育平台 生育<br>统一住房平台 公积金<br>统一生活平台 生活<br>统一工作平台 工作<br>统一健康平台 健康（科普 预防 保健 卫生 防疫）<br>统一保险平台 保险<br>统一交管平台 交通<br>统一运管平台 运输</p>\n<p>平台最好要有搜索功能</p>\n<p>授权 授权码 包含自办人 需要检验自办人的真假<br>授信 授信码 包含代办人 需要检验代办人的真假<br>授权码自己用，授信码交给他人代办用</p>\n<h1 id=\"生活\"><a href=\"#生活\" class=\"headerlink\" title=\"生活\"></a>生活</h1><h2 id=\"生活主题概述\"><a href=\"#生活主题概述\" class=\"headerlink\" title=\"生活主题概述\"></a>生活主题概述</h2><p>美食 风景 美术 音乐 舞蹈<br>科教 人文 历史 地理 宇宙<br>汽车 萌宠 搞笑 整活 解说</p>\n<h2 id=\"生活能源概述\"><a href=\"#生活能源概述\" class=\"headerlink\" title=\"生活能源概述\"></a>生活能源概述</h2><p>能源 干草 竹子 木材 煤炭 石油 天然气<br>新能源 电力 氢气</p>\n<p>电力 煤电 水电 风电 光电 核电</p>\n<p>林业大学 矿业大学 石油大学 海洋大学<br>电力大学 水利大学 光能大学 核能大学</p>\n<h1 id=\"学习\"><a href=\"#学习\" class=\"headerlink\" title=\"学习\"></a>学习</h1><h2 id=\"学习阶段概述\"><a href=\"#学习阶段概述\" class=\"headerlink\" title=\"学习阶段概述\"></a>学习阶段概述</h2><p>教育<br>幼儿园 学前班 小学 中学 大学<br>中学 初中 高中 职高<br>大学 专科 本科<br>专科 教授应用知识<br>本科 教授理论知识<br>本科 一本 二本 三本<br>学历 学士 硕士 博士 博士后（专科没有学历）<br>学士 负责学习和应用 宽进宽出<br>硕士 负责研究和创新 严进严出 科研支持 进研究机构<br>博士 负责发明和创造 严进严出 成果奖励 开科技公司<br>称号 研究生评教授 博士生评专家 博士后评院士<br>教学 本科生教小学 研究生教中学 博士生教大学</p>\n<p>学士生毕业应废除论文，本身学士生就是学习别人的知识，没有研究和发明，硬要写论文的话，就会出现以下几种情况</p>\n<ol>\n<li>总结别人的知识，为了过查重乱组词</li>\n<li>抄袭别人的论文，违背写论文的初衷</li>\n<li>找别人代写论文，违背办教学的初衷</li>\n</ol>\n<h1 id=\"工作\"><a href=\"#工作\" class=\"headerlink\" title=\"工作\"></a>工作</h1><h2 id=\"主要行业概述\"><a href=\"#主要行业概述\" class=\"headerlink\" title=\"主要行业概述\"></a>主要行业概述</h2><h3 id=\"第一产业（生活）\"><a href=\"#第一产业（生活）\" class=\"headerlink\" title=\"第一产业（生活）\"></a>第一产业（生活）</h3><p>饮食 农林畜牧渔<br>  农业 粮食和蔬菜 主粮 小米 小麦 大豆 土豆 红薯<br>  林业 水果 花草(绿化) 树木（家具）<br>  畜业 对动物进行圈养 猪鸡鸭鹅兔 肉和蛋<br>  牧业 对动物进行放养 牛羊 肉和奶<br>  渔业 对动物进行水养 鱼虾 河鲜和海鲜<br>基础 能源 燃气 电力 水务 通信<br>住房 地产 房产<br>出行 公路 铁路 航空<br>学习 教育<br>办公 工具</p>\n<h3 id=\"第二产业（制造）\"><a href=\"#第二产业（制造）\" class=\"headerlink\" title=\"第二产业（制造）\"></a>第二产业（制造）</h3><p>食品 鞋服 家电 电子 汽车 机械</p>\n<h3 id=\"第三产业（服务）\"><a href=\"#第三产业（服务）\" class=\"headerlink\" title=\"第三产业（服务）\"></a>第三产业（服务）</h3><p>餐饮 娱乐 影视 文化 体育 旅游</p>\n<h1 id=\"玩乐\"><a href=\"#玩乐\" class=\"headerlink\" title=\"玩乐\"></a>玩乐</h1><h1 id=\"政务\"><a href=\"#政务\" class=\"headerlink\" title=\"政务\"></a>政务</h1><h2 id=\"身份证的作用\"><a href=\"#身份证的作用\" class=\"headerlink\" title=\"身份证的作用\"></a>身份证的作用</h2><p>身份证明</p>\n<h2 id=\"户口本的作用\"><a href=\"#户口本的作用\" class=\"headerlink\" title=\"户口本的作用\"></a>户口本的作用</h2><p>资源分配</p>\n<h3 id=\"哪些地方会用到户口本\"><a href=\"#哪些地方会用到户口本\" class=\"headerlink\" title=\"哪些地方会用到户口本\"></a>哪些地方会用到户口本</h3><ul>\n<li>办理证件：身份证 结婚证 离婚证 出生证 护照</li>\n<li>关系证明：结婚 离婚 出生 过世 遗产继承</li>\n<li>资源分配：买房 卖房 上学 出国留学 出国公干</li>\n</ul>\n","categories":["+ essay"],"tags":["+ essay"]},{"title":"device","url":"/2017/05/01/essay/device/","content":"<h1 id=\"Computer\"><a href=\"#Computer\" class=\"headerlink\" title=\"Computer\"></a>Computer</h1><h2 id=\"Purchase\"><a href=\"#Purchase\" class=\"headerlink\" title=\"Purchase\"></a>Purchase</h2><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/237813411\">买电脑配置参数有哪些入门</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/363024923\">买电脑配置参数有哪些进阶</a></li>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/373647046\">买电脑配置参数有哪些详解</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/344117780\">买电脑时CPU怎么选</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/63604430\">买电脑时内存怎么选</a></li>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/425916768\">买电脑时硬盘怎么选</a></li>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/341969058\">买电脑时显卡怎么选</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/444407762\">买电脑时声卡怎么选</a></li>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/138202947\">买电脑时网卡怎么选</a></li>\n<li><a href=\"https://www.zhihu.com/tardis/zm/art/83516346\">买电脑时主板怎么选</a></li>\n</ul>\n</blockquote>\n<p>CPU、内存、硬盘、显卡、声卡、网卡、主板、接口（USB和HDMI）、摄像头</p>\n<p>分辨率（1080P）、色域</p>\n<p>散热</p>\n<h2 id=\"Interface\"><a href=\"#Interface\" class=\"headerlink\" title=\"Interface\"></a>Interface</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lidashent/article/details/113833670\">如何判断电脑哪个usb口是3.0的</a></li>\n<li><a href=\"https://zhidao.baidu.com/question/758123073118644564.html\">电脑USB接口的颜色区别详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Indicator\"><a href=\"#Indicator\" class=\"headerlink\" title=\"Indicator\"></a>Indicator</h2><blockquote>\n<ul>\n<li><a href=\"https://zhidao.baidu.com/question/565996237399026124.html\">电脑指示灯详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Phone\"><a href=\"#Phone\" class=\"headerlink\" title=\"Phone\"></a>Phone</h1><h2 id=\"小米手机布局\"><a href=\"#小米手机布局\" class=\"headerlink\" title=\"小米手机布局\"></a>小米手机布局</h2><p>顶部 时间和天气<br>底部 电话、短信、浏览器、相机</p>\n<h3 id=\"第一屏\"><a href=\"#第一屏\" class=\"headerlink\" title=\"第一屏\"></a>第一屏</h3><p>设置、手机管家、应用商店、游戏中心<br>收音机（蜻蜓FM）、录音机、屏幕录制、小米之家<br>天气、日历、时钟、钱包<br>计算器、指南针、系统工具、系统应用</p>\n<ul>\n<li>小米之家：多看（小米阅读）、音乐（小米音乐）、小米视频、小米商城、小米运动健康</li>\n<li>系统工具：下载管理、主题壁纸、小米换机、小爱视觉、小爱语音、万能遥控</li>\n<li>系统应用：联系人、电子邮件、全球上网、USIM卡应用、服务与反馈</li>\n</ul>\n<h3 id=\"第二屏\"><a href=\"#第二屏\" class=\"headerlink\" title=\"第二屏\"></a>第二屏</h3><p>笔记、相册、文件管理、文档管理<br>金融理财、政务社保、导航出行、汽车驾考<br>通信社交、娱乐影音、美食外卖、生活购物<br>支付宝、微信、QQ音乐、中国电信<br>Edge、哔哩哔哩、今日头条、脉脉</p>\n<ul>\n<li>文档管理：WPS Office</li>\n<li>金融理财：六大行app、城市行app</li>\n<li>政务社保：个人所得税、国家政务服务平台、国家医保服务平台、交管12123、掌上12333</li>\n<li>导航出行：百度地图、高德地图、腾讯地图、铁路12306、携程旅行、滴滴出行、航旅纵横</li>\n<li>汽车驾考：懂车帝、汽车之家、车质网、途虎养车、驾考宝典</li>\n<li>通信社交：QQ邮箱、QQ</li>\n<li>娱乐影音：爱奇艺、优酷、腾讯、西瓜视频、芒果TV、铁锈战争</li>\n<li>美食外卖：大众点评、美团、饿了么</li>\n<li>生活购物：自如、淘宝、京东</li>\n</ul>\n<h3 id=\"第三屏\"><a href=\"#第三屏\" class=\"headerlink\" title=\"第三屏\"></a>第三屏</h3><p>求职招聘</p>\n<ul>\n<li>求职招聘：猎聘、拉钩、BOSS直聘、智联招聘、前程无忧、国聘</li>\n</ul>\n<h1 id=\"App\"><a href=\"#App\" class=\"headerlink\" title=\"App\"></a>App</h1><h2 id=\"Computer-1\"><a href=\"#Computer-1\" class=\"headerlink\" title=\"Computer\"></a>Computer</h2><h3 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h3><h3 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h3><ol>\n<li>印象笔记</li>\n<li>欧路词典</li>\n<li>item2</li>\n<li>Postman</li>\n<li>MacDown</li>\n<li>Sublime Text</li>\n<li>Sequel Pro</li>\n<li>The Unarchiver</li>\n<li>Beyond Compare</li>\n</ol>\n<h2 id=\"Phone-1\"><a href=\"#Phone-1\" class=\"headerlink\" title=\"Phone\"></a>Phone</h2>","categories":["+ essay"],"tags":["+ essay"]},{"title":"windows","url":"/2017/01/01/dev/dev-1-system/system-3-windows/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39847278/article/details/127947645\">Win10快捷键入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43543789/article/details/104687525\">Win10快捷键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/SAW1234567/article/details/80817958\">Win10快捷键详解</a></li>\n<li><a href=\"https://blog.csdn.net/tianyuan1232/article/details/122442022\">Win11快捷键入门</a></li>\n<li><a href=\"https://blog.csdn.net/xitongzhijia_abc/article/details/126448701\">Win11快捷键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/dinofish/article/details/121432903\">Win11快捷键详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_29672983/article/details/119051100\">windows菜单里面的字母是什么意思</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43688734/article/details/107469660\">windows右键菜单里面的字母是什么意思</a></li>\n<li><a href=\"https://blog.csdn.net/billycoder/article/details/122604541\">Win10快捷键冲突检测工具</a></li>\n<li><a href=\"https://blog.csdn.net/crazy_kismet/article/details/88070634\">Win10快捷键冲突之Ctrl+Shift</a></li>\n<li><a href=\"https://blog.csdn.net/a704397849/article/details/105959149\">Win10快捷键冲突之Alt+Shift</a></li>\n<li><a href=\"https://blog.csdn.net/xiaokedou_hust/article/details/109680147\">Win10快捷键冲突之Ctrl+Shift+F</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_41124685/article/details/112105216\">Win10快捷键冲突之Ctrl+Space</a></li>\n<li><a href=\"https://blog.csdn.net/iteye_18979/article/details/82476395\">Win10快捷键冲突之Shift+Space</a></li>\n<li><a href=\"https://blog.csdn.net/sigmarising/article/details/88204513\">Win10快捷键冲突之Alt+Space</a></li>\n<li><a href=\"https://www.cnblogs.com/Higurashi-kagome/p/15259889.html\">Win10禁用Ctrl+Shift切换输入法</a></li>\n</ul>\n</blockquote>\n<h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/20121876\">键盘布局详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>切换输入法：ctrl + shift、win + space</li>\n<li>切换键盘布局：alt + shift</li>\n<li>切换应用窗口：alt + tab</li>\n<li>显示所选项目属性：alt + enter</li>\n<li>打开应用窗口菜单：alt + space</li>\n<li>打开系统开始菜单：win</li>\n<li>打开开始右键菜单：win + x</li>\n<li>打开文件管理器：win + e</li>\n<li>打开系统设置：win + i</li>\n<li>打开搜索栏：win + s</li>\n<li>打开运行框：win + r</li>\n<li>进入到桌面：win + d</li>\n<li>锁定屏幕：win + l</li>\n</ul>\n<blockquote>\n<p><code>切换输入法</code> 在windows里面叫做 <code>切换输入语言</code></p>\n</blockquote>\n<h3 id=\"输入法\"><a href=\"#输入法\" class=\"headerlink\" title=\"输入法\"></a>输入法</h3><ul>\n<li>中英文语言切换：shift、ctrl + space</li>\n<li>中英文标点切换：ctrl + .</li>\n<li>全半角切换：shift + space</li>\n<li>简繁体切换：ctrl + shift + f</li>\n</ul>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/number1killer/article/details/79166660\">Win10之睡眠和锁屏的区别</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/47006051\">Win10之睡眠和休眠的区别</a></li>\n<li><a href=\"https://www.zhihu.com/question/473243338\">Win10之睡眠模式如何不中断下载任务</a></li>\n</ul>\n</blockquote>\n<p>睡眠模式时下载会不会中断（网络和硬盘）</p>\n<h2 id=\"Screen\"><a href=\"#Screen\" class=\"headerlink\" title=\"Screen\"></a>Screen</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56612551/article/details/121064372\">Win10连接多个屏幕</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Desktop\"><a href=\"#Desktop\" class=\"headerlink\" title=\"Desktop\"></a>Desktop</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43535992/article/details/104087542\">Win10管理多个桌面</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/web17886480312/article/details/123304735\">Win10切换应用窗口</a></li>\n<li><a href=\"https://blog.csdn.net/android_cai_niao/article/details/127442223\">Win10分屏显示应用</a></li>\n</ul>\n</blockquote>\n<h1 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h1><h2 id=\"Cmd\"><a href=\"#Cmd\" class=\"headerlink\" title=\"Cmd\"></a>Cmd</h2><h2 id=\"Shell\"><a href=\"#Shell\" class=\"headerlink\" title=\"Shell\"></a>Shell</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42402854/article/details/93162387\">CMD入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46092061/article/details/119849648\">CMD进阶</a></li>\n<li><a href=\"https://blog.csdn.net/bigbear00007/article/details/105611932\">CMD详解</a></li>\n<li><a href=\"https://blog.csdn.net/Captain_RB/article/details/111604033\">PowerShell入门</a></li>\n<li><a href=\"https://blog.csdn.net/mr_pang/article/details/50571866\">PowerShell进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_50566107/article/details/129480636\">PowerShell详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36404808/article/details/119274110\">Powershell之启动Git Bash</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Alezan/article/details/123779374\">Win10终端集成WSL</a></li>\n<li><a href=\"https://blog.csdn.net/Magic_Ninja/article/details/122671663\">Win10终端集成Git Bash</a></li>\n</ul>\n</blockquote>\n<h1 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h1><h2 id=\"Permission\"><a href=\"#Permission\" class=\"headerlink\" title=\"Permission\"></a>Permission</h2><h2 id=\"Sorting\"><a href=\"#Sorting\" class=\"headerlink\" title=\"Sorting\"></a>Sorting</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_30600197/article/details/95660458\">windows文件名排序问题</a></li>\n<li><a href=\"https://blog.csdn.net/ganxinjiang/article/details/126637723\">windows文件名排序算法</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Text\"><a href=\"#Text\" class=\"headerlink\" title=\"Text\"></a>Text</h1><h1 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h1><h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><h1 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h1><h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><h3 id=\"Package\"><a href=\"#Package\" class=\"headerlink\" title=\"Package\"></a>Package</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Datapad/article/details/122962324\">windows包管理工具详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + system"],"tags":["+ dev"]},{"title":"linux","url":"/2017/01/01/dev/dev-1-system/system-1-linux/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whatday/article/details/106072167\">shell快捷键入门</a></li>\n<li><a href=\"https://www.howtogeek.com/181/keyboard-shortcuts-for-bash-command-shell-for-ubuntu-debian-suse-redhat-linux-etc/\">shell快捷键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/nings666/article/details/129376693\">shell快捷键详解</a></li>\n<li><a href=\"https://askubuntu.com/questions/444708/is-there-any-manual-to-get-the-list-of-bash-shortcut-keys\">shell快捷键大全获取方法</a></li>\n<li><a href=\"https://www.cnblogs.com/imcati/p/11553185.html\">shell快捷键之ctrl系列</a></li>\n<li><a href=\"https://www.howtogeek.com/440558/how-to-copy-and-paste-text-at-linuxs-bash-shell/\">shell快捷键之ctrl + c和ctrl + v</a></li>\n<li><a href=\"https://qastack.cn/ubuntu/19558/what-are-the-meta-super-and-hyper-keys\">linux之什么是meta键</a></li>\n<li><a href=\"https://www.skywind.me/blog/archives/2021\">terminal之meta键</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><ul>\n<li>ctrl + a：移动到行首</li>\n<li>ctrl + b：左移一个字</li>\n<li>ctrl + c：杀死进程</li>\n<li>ctrl + d：删除光标处的字符 或者 退出（exit）或者登出（logout）</li>\n<li>ctrl + e：移动到行尾</li>\n<li>ctrl + f：右移一个字</li>\n<li>ctrl + g：退出历史搜索</li>\n<li>ctrl + h：删除光标前的字符</li>\n<li>ctrl + i：输入制表符（<code>Tab</code>）</li>\n<li>ctrl + j：输入新行符（<code>\\n</code>）</li>\n<li>ctrl + k：从光标处剪切到行尾</li>\n<li>ctrl + l：清除屏幕</li>\n<li>ctrl + m：输入确认符（<code>Enter</code>）</li>\n<li>ctrl + n：后一个历史命令（推荐用箭头）</li>\n<li>ctrl + o：执行历史命令</li>\n<li>ctrl + p：前一个历史命令（推荐用箭头）</li>\n<li>ctrl + q：解冻屏幕</li>\n<li>ctrl + r：搜索历史命令</li>\n<li>ctrl + s：冻结屏幕</li>\n<li>ctrl + t：交换光标处和光标前的字（alt + t：交换光标处和光标前的词）</li>\n<li>ctrl + u：从光标前剪切到行首</li>\n<li>ctrl + v：粘贴（剪切板）到光标前 或者 进入原始字符输入模式</li>\n<li>ctrl + w：从光标前剪切到词首</li>\n<li>ctrl + x：在当前位置和行首之间切换</li>\n<li>ctrl + y：粘贴（寄存器）到光标前</li>\n<li>ctrl + z：切入后台（可用fg命令切回前台）</li>\n</ul>\n<h2 id=\"Edit\"><a href=\"#Edit\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>全选（Select All）：</li>\n<li>删除（Delete）：backspace、delete</li>\n<li>剪切（Cut）：</li>\n<li>复制（Copy）：ctrl + shift + c</li>\n<li>粘贴（Paste）：ctrl + shift + v、ctrl + v</li>\n<li>保存（Save）：</li>\n</ul>\n<blockquote>\n<p>ps：ctrl + a：移动到行首<br>ps：ctrl + e：移动到行尾<br>ps：ctrl + x：在当前位置和行首之间切换<br>ps：ctrl + c：杀死进程<br>ps：ctrl + z：切入后台（可用fg命令切回前台）<br>ps：ctrl + s：冻结屏幕<br>ps：ctrl + q：解冻屏幕</p>\n</blockquote>\n<h3 id=\"Skill\"><a href=\"#Skill\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><h4 id=\"Delete\"><a href=\"#Delete\" class=\"headerlink\" title=\"Delete\"></a>Delete</h4><ul>\n<li>删除光标前的字符：ctrl + h（推荐用backspace）</li>\n<li>删除光标处的字符：ctrl + d（推荐用delete）</li>\n</ul>\n<blockquote>\n<p>ps：ctrl + d 还可以表示退出（exit）或者登出（logout）<br>ps：ctrl + l 表示清屏，而不是删除光标处的字符</p>\n</blockquote>\n<h4 id=\"Cut\"><a href=\"#Cut\" class=\"headerlink\" title=\"Cut\"></a>Cut</h4><ul>\n<li>从光标前剪切到行首：ctrl + u</li>\n<li>从光标处剪切到行尾：ctrl + k</li>\n<li>从光标前剪切到词首：ctrl + w</li>\n<li>从光标处剪切到词尾：alt + d</li>\n</ul>\n<blockquote>\n<p>ps：ctrl + u 在ubuntu中是删除整行</p>\n</blockquote>\n<h4 id=\"Paste\"><a href=\"#Paste\" class=\"headerlink\" title=\"Paste\"></a>Paste</h4><ul>\n<li>粘贴（剪切板）到光标前：ctrl + v</li>\n<li>粘贴（寄存器）到光标前：ctrl + y</li>\n</ul>\n<h3 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h3><ul>\n<li>转大写（UpperCase）：alt + u</li>\n<li>转小写（LowerCase）：alt + l</li>\n<li>转标题（Capitalize）：alt + c</li>\n</ul>\n<blockquote>\n<p><code>u</code> ：upper， <code>l</code> ：lower， <code>c</code> ：capital</p>\n</blockquote>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><p>撤销（Undo）：</p>\n<h3 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h3><p>重做（Redo）：</p>\n<h2 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h2><h3 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>常规性移动：arrow</li>\n</ul>\n<h3 id=\"Skill-1\"><a href=\"#Skill-1\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><ul>\n<li>左移一个字：ctrl + b（推荐用箭头）</li>\n<li>右移一个字：ctrl + f（推荐用箭头）</li>\n<li>移动到行首：home、ctrl + a</li>\n<li>移动到行尾：end、ctrl + e</li>\n<li>移动到（上一个）词首：ctrl + arrow left、alt + b</li>\n<li>移动到（下一个）词尾：ctrl + arrow right、alt + f</li>\n</ul>\n<blockquote>\n<p><code>b</code> ：backward， <code>f</code> ：forward， <code>a</code> ：字母表首字母， <code>e</code> ：end</p>\n</blockquote>\n<h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><h2 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h2><ul>\n<li>杀死进程：ctrl + c</li>\n<li>切入后台：ctrl + z</li>\n<li>切回前台：fg</li>\n</ul>\n<h2 id=\"Screen\"><a href=\"#Screen\" class=\"headerlink\" title=\"Screen\"></a>Screen</h2><ul>\n<li>清除屏幕：ctrl + l</li>\n<li>冻结屏幕：ctrl + s</li>\n<li>解冻屏幕：ctrl + q</li>\n</ul>\n<h2 id=\"History\"><a href=\"#History\" class=\"headerlink\" title=\"History\"></a>History</h2><ul>\n<li>搜索历史命令：ctrl + r</li>\n<li>退出历史搜索：ctrl + g</li>\n<li>执行历史命令：ctrl + o</li>\n<li>前一个历史命令（推荐用箭头）：ctrl + p</li>\n<li>后一个历史命令（推荐用箭头）：ctrl + n</li>\n</ul>\n<h1 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cuilanbo/article/details/7362317\">linux输入制表符</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Cmd\"><a href=\"#Cmd\" class=\"headerlink\" title=\"Cmd\"></a>Cmd</h2><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/chuqianyu/p/14473427.html\">linux命令查询网站</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/94669639\">linux命令教程汇总</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30755709/article/details/101181692\">linux命令帮助文档说明中方括号和尖括号的区别</a></li>\n</ul>\n</blockquote>\n<p>方括号：表示可选参数<br>尖括号：表示必填参数</p>\n<h3 id=\"Help\"><a href=\"#Help\" class=\"headerlink\" title=\"Help\"></a>Help</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/MultiSkill/article/details/104187778\">linux帮助命令之help</a></li>\n<li><a href=\"https://blog.csdn.net/Listen2You/article/details/107984968\">linux帮助命令之type</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yspg_217/article/details/121954145\">linux查询命令之which</a></li>\n<li><a href=\"https://blog.csdn.net/carefree2005/article/details/116781740\">linux查询命令之whereis</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/95239198\">linux查询命令之whatis</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Search\"><a href=\"#Search\" class=\"headerlink\" title=\"Search\"></a>Search</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/CapejasmineY/article/details/109208934\">linux搜索命令详解</a></li>\n</ul>\n</blockquote>\n<p>文件查找：find locate<br>文本搜索：grep sed awk</p>\n<h2 id=\"Shell\"><a href=\"#Shell\" class=\"headerlink\" title=\"Shell\"></a>Shell</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/neo949332116/article/details/100181500\">shell特殊符号汇总</a></li>\n</ul>\n</blockquote>\n<p>shell 切换</p>\n<p>ssh ssh-kengen ssh-copy-id<br>scp rsync inotify ftp sftp</p>\n<h3 id=\"Glob\"><a href=\"#Glob\" class=\"headerlink\" title=\"Glob\"></a>Glob</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/alxima/article/details/40211815\">shell通配入门</a></li>\n<li><a href=\"https://blog.csdn.net/longshaonihaoa/article/details/119571036\">shell通配进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wzj_110/article/details/128279144\">shell通配详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52923241/article/details/119614623\">shell通配精进</a></li>\n<li><a href=\"https://blog.csdn.net/astrotycoon/article/details/50814031\">shell通配原理</a></li>\n<li><a href=\"https://blog.csdn.net/ac_dao_di/article/details/54730761\">shell扩展详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33938733/article/details/92471038\">shell扩展总结</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43958105/article/details/118728964\">shell引号详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhang_referee/article/details/83511123\">shell字符串操作详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36417677/article/details/104395917\">shell判断操作详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41551450/article/details/92803686\">shell各种括号的用法</a></li>\n<li><a href=\"https://blog.csdn.net/u010921682/article/details/83308031\">shell输入之自定义结束符（EOF）</a></li>\n<li><a href=\"https://blog.csdn.net/yy_diego/article/details/122479600\">shell获取脚本的所在目录</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/unicorn_mitnick/article/details/89785893\">shell分类之交互、非交互、登录、非登录入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44648216/article/details/104056712\">shell分类之交互、非交互、登录、非登录详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100199008\">shell退出（exit）入门</a></li>\n<li><a href=\"https://blog.csdn.net/Jerry_1126/article/details/52651488\">shell退出（exit）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/chenxing109/article/details/84999782\">shell退出（exit）详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100212028\">shell登出（logout）入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_67268191/article/details/130734604\">shell登出（logout）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yexiangCSDN/article/details/80733107\">shell登出（logout）详解</a></li>\n<li><a href=\"https://blog.csdn.net/longerzone/article/details/12831389\">shell之退出（exit）和登出（logout）的区别</a></li>\n<li><a href=\"https://blog.csdn.net/CSSDCC/article/details/121231906\">session之Tmux详解</a></li>\n</ul>\n</blockquote>\n<p>terminal stty</p>\n<h3 id=\"terminal和shell的区别\"><a href=\"#terminal和shell的区别\" class=\"headerlink\" title=\"terminal和shell的区别\"></a>terminal和shell的区别</h3><ul>\n<li>shell：能够解析和执行命令的程序</li>\n<li>terminal：支持输入和输出的终端软件，关联了一个shell程序</li>\n</ul>\n<h1 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h1><h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h3 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yexiangCSDN/article/details/80843643\">linux文件类型查看之file</a></li>\n<li><a href=\"https://blog.csdn.net/carefree2005/article/details/123706744\">linux文件编码转换之iconv</a></li>\n<li><a href=\"https://blog.csdn.net/chaoweiqiang3372/article/details/100969327\">linux文件换行符转换之dos2unix和unix2dos</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41774732/article/details/120210159\">linux文件编码转换之vim</a></li>\n<li><a href=\"https://blog.csdn.net/small_a_black/article/details/103011085\">linux文件换行符转换之vim</a></li>\n<li><a href=\"https://blog.csdn.net/bbka_717/article/details/9926295\">linux文件显示不可见字符之cat</a></li>\n<li><a href=\"https://blog.csdn.net/fsdgrasdfg/article/details/112669344\">linux文件显示不可见字符之vim</a></li>\n<li><a href=\"https://blog.csdn.net/jichenchen1990/article/details/72652207\">linux文件显示之不可见字符详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>^I</code>：<code>\\t</code>（Tab 制表符）</li>\n<li><code>^M</code>：<code>\\r</code>（CR 回车符）</li>\n<li><code>$</code>：<code>\\n</code>（LF 换行符）</li>\n</ul>\n<h3 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/boazheng/article/details/113804590\">linux文件路径之basename详解</a></li>\n<li><a href=\"https://blog.csdn.net/K346K346/article/details/103125135\">linux文件路径之dirname详解</a></li>\n<li><a href=\"https://blog.csdn.net/Rong_Toa/article/details/104252766\">linux获取文件后缀</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39498080/article/details/80048247\">linux文件链接之ln详解</a></li>\n<li><a href=\"https://blog.csdn.net/whatday/article/details/105184908\">linux文件链接之readlink详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39506322/article/details/102842946\">linux文件链接</a></li>\n<li><a href=\"https://blog.csdn.net/Giyomwd/article/details/104143426\">linux文件链接</a></li>\n<li><a href=\"https://blog.csdn.net/dou3516/article/details/106289701\">windows文件链接</a></li>\n<li><a href=\"https://flushhip.blog.csdn.net/article/details/104685928\">windows文件链接</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Command\"><a href=\"#Command\" class=\"headerlink\" title=\"Command\"></a>Command</h2><h3 id=\"File-1\"><a href=\"#File-1\" class=\"headerlink\" title=\"File\"></a>File</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_28584889/article/details/88728164\">Linux输入输出之重定向</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Create\"><a href=\"#Create\" class=\"headerlink\" title=\"Create\"></a>Create</h4><p>touch</p>\n<h4 id=\"Remove\"><a href=\"#Remove\" class=\"headerlink\" title=\"Remove\"></a>Remove</h4><p>rm</p>\n<h4 id=\"Write\"><a href=\"#Write\" class=\"headerlink\" title=\"Write\"></a>Write</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whatday/article/details/106547727\">linux文件写入符</a></li>\n<li><a href=\"https://blog.csdn.net/redrose2100/article/details/128335436\">linux文件写入之tee详解</a></li>\n</ul>\n</blockquote>\n<p>cat with EOF</p>\n<h4 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37460963/article/details/114657399\">linux文件读取符</a></li>\n<li><a href=\"https://blog.csdn.net/qq_48135964/article/details/115450286\">linux文件读取之按行读取</a></li>\n<li><a href=\"https://blog.csdn.net/HDFQQ188816190/article/details/119022833\">linux文件读取之输出指定行</a></li>\n<li><a href=\"https://blog.csdn.net/fox372/article/details/111746317\">linux文件读取命令</a></li>\n<li><a href=\"https://blog.csdn.net/xyw_blog/article/details/16861681\">linux文件读取之less和more的区别</a></li>\n</ul>\n</blockquote>\n<p>cat、tac、head、tail、less、more、od</p>\n<h4 id=\"Change\"><a href=\"#Change\" class=\"headerlink\" title=\"Change\"></a>Change</h4><p>vim、sed with i</p>\n<h3 id=\"Dir\"><a href=\"#Dir\" class=\"headerlink\" title=\"Dir\"></a>Dir</h3><h4 id=\"Create-1\"><a href=\"#Create-1\" class=\"headerlink\" title=\"Create\"></a>Create</h4><p>mkdir</p>\n<h4 id=\"Remove-1\"><a href=\"#Remove-1\" class=\"headerlink\" title=\"Remove\"></a>Remove</h4><p>rmdir</p>\n<h4 id=\"Change-1\"><a href=\"#Change-1\" class=\"headerlink\" title=\"Change\"></a>Change</h4><p>cd</p>\n<h3 id=\"More\"><a href=\"#More\" class=\"headerlink\" title=\"More\"></a>More</h3><h4 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h4><p>ls</p>\n<h4 id=\"Tree\"><a href=\"#Tree\" class=\"headerlink\" title=\"Tree\"></a>Tree</h4><p>tree</p>\n<h4 id=\"Copy\"><a href=\"#Copy\" class=\"headerlink\" title=\"Copy\"></a>Copy</h4><p>cp</p>\n<h4 id=\"Move-1\"><a href=\"#Move-1\" class=\"headerlink\" title=\"Move\"></a>Move</h4><p>mv</p>\n<p>mv和rename</p>\n<h4 id=\"Stat\"><a href=\"#Stat\" class=\"headerlink\" title=\"Stat\"></a>Stat</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rhn_111/article/details/129235074\">linux文件属性之stat详解</a></li>\n</ul>\n</blockquote>\n<p>stat chmod chown chattr</p>\n<h4 id=\"Find\"><a href=\"#Find\" class=\"headerlink\" title=\"Find\"></a>Find</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cnds123321/article/details/122047043\">linux文件查找之locate详解</a></li>\n</ul>\n</blockquote>\n<p>find</p>\n<p>find -type</p>\n<p>find -newermt</p>\n<h4 id=\"Diff\"><a href=\"#Diff\" class=\"headerlink\" title=\"Diff\"></a>Diff</h4><p>diff -qr</p>\n<p>diff -r 目录<br>diff -q 输出文件名</p>\n<h4 id=\"Count\"><a href=\"#Count\" class=\"headerlink\" title=\"Count\"></a>Count</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/96467486\">linux命令之wc详解</a></li>\n</ul>\n</blockquote>\n<p>wc：统计文件的字节数、单词数、行数</p>\n<h4 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/96038662\">linux命令之nl详解</a></li>\n</ul>\n</blockquote>\n<p>nl：显示文件的行号</p>\n<h2 id=\"Permission\"><a href=\"#Permission\" class=\"headerlink\" title=\"Permission\"></a>Permission</h2><h1 id=\"Text\"><a href=\"#Text\" class=\"headerlink\" title=\"Text\"></a>Text</h1><h2 id=\"Concept-1\"><a href=\"#Concept-1\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h2 id=\"Command-1\"><a href=\"#Command-1\" class=\"headerlink\" title=\"Command\"></a>Command</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_63069714/article/details/129594195\">linux文本三剑客（grep、sed、awk）</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44983653/article/details/94393586\">linux文本排序之grep详解</a></li>\n<li><a href=\"https://blog.csdn.net/MyySophia/article/details/107858283\">linux文本排序之sort详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_47714288/article/details/121632884\">linux文本去重之uniq详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45842494/article/details/124679008\">linux文本截取之cut详解</a></li>\n<li><a href=\"https://blog.csdn.net/yspg_217/article/details/122925490\">linux文本替换之tr详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>文本查找：grep、sed with p、awk with print</li>\n<li>文本排序：sort</li>\n<li>文本去重：uniq</li>\n<li>文本截取：cut</li>\n<li>文本替换：tr、sed、awk</li>\n</ul>\n<h3 id=\"grep\"><a href=\"#grep\" class=\"headerlink\" title=\"grep\"></a>grep</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_50370837/article/details/125068528\">linux文本查找之grep详解</a></li>\n<li><a href=\"https://blog.csdn.net/fruitless/article/details/129410984\">linux文本查找之grep和egrep的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42558057/article/details/82758467\">linux文本查找之grep和fgrep的区别</a></li>\n<li><a href=\"https://blog.csdn.net/fly0512/article/details/89924258\">linux文本查找之grep显示文件名</a></li>\n<li><a href=\"https://blog.csdn.net/Olivia_Vang/article/details/104076272\">linux文本查找之grep显示行号</a></li>\n<li><a href=\"https://blog.csdn.net/cunjiu9486/article/details/109075913\">linux文本查找之grep递归查找</a></li>\n</ul>\n</blockquote>\n<h3 id=\"sed\"><a href=\"#sed\" class=\"headerlink\" title=\"sed\"></a>sed</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_59388634/article/details/122047377\">linux文本处理之sed详解</a></li>\n<li><a href=\"https://blog.csdn.net/yilovexing/article/details/79237243\">linux文本处理之sed输出指定行</a></li>\n<li><a href=\"https://blog.csdn.net/qq295109601/article/details/116377612\">linux文本处理之sed使用技巧</a></li>\n</ul>\n</blockquote>\n<h3 id=\"awk\"><a href=\"#awk\" class=\"headerlink\" title=\"awk\"></a>awk</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_52425873/article/details/124659690\">linux文本处理之awk详解</a></li>\n<li><a href=\"https://blog.csdn.net/gechangli7/article/details/51547641\">linux文本处理之awk和gawk的区别</a></li>\n<li><a href=\"https://blog.csdn.net/huangyimo/article/details/81670756\">linux文本处理之awk内置变量</a></li>\n<li><a href=\"https://blog.csdn.net/qingsong3333/article/details/78440366\">linux文本处理之awk内置变量之FILENAME</a></li>\n<li><a href=\"https://blog.csdn.net/HandsomeHong/article/details/125966996\">linux文本处理之awk内置变量之ARGC和ARGV</a></li>\n<li><a href=\"https://blog.csdn.net/tabactivity/article/details/111474085\">linux文本处理之awk内置变量之NR和FS</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_31201737/article/details/113045998\">linux文本处理之awk输出指定行</a></li>\n<li><a href=\"https://blog.csdn.net/qq_57283958/article/details/123910036\">linux文本处理之awk使用技巧</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Process-1\"><a href=\"#Process-1\" class=\"headerlink\" title=\"Process\"></a>Process</h1><h2 id=\"Concept-2\"><a href=\"#Concept-2\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h2 id=\"Command-2\"><a href=\"#Command-2\" class=\"headerlink\" title=\"Command\"></a>Command</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/menhigkong/article/details/127167622\">任务后台运行入门</a></li>\n<li><a href=\"https://blog.csdn.net/yzpbright/article/details/118546315\">任务后台运行进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40197728/article/details/121580097\">任务后台运行详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36502644/article/details/105618285\">任务调度命令入门</a></li>\n<li><a href=\"https://blog.csdn.net/sueong/article/details/119751377\">任务调度命令进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37555071/article/details/113781938\">任务调度命令详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>nohup</code>：忽略挂断（hup）信号，直接关闭终端或者长时间无交互，导致连接断开时会产生挂断（hup）信号</li>\n<li><code>&amp;</code>：忽略退出（exit）或者登出（logout）信号，使用<code>ctrl + d</code> 快捷键退出时，会产生退出（exit）或者登出（logout）信号</li>\n</ul>\n<p>主要信号的产生情况（可用 <code>kill -l</code> 命令查看所有的信号）</p>\n<ul>\n<li>关闭终端产生<code>SIGHUP</code>信号</li>\n<li><code>ctrl + c</code> 产生<code>SIGINT</code>信号</li>\n<li><code>ctrl + d</code> 产生<code>EOF</code>信号</li>\n<li><code>kill -9</code>产生<code>SIGKILL</code>信号（强杀信号）</li>\n<li><code>kill -15</code>产生<code>SIGTERM</code>信号（终止信号）</li>\n</ul>\n<p>process thread pipe</p>\n<p>process ps pstree pgrep<br>process pidstat pidof lsof<br>process kill killall pkill</p>\n<p>pipe xargs -I {} -0 -exec</p>\n<h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><h2 id=\"Concept-3\"><a href=\"#Concept-3\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h2 id=\"Command-3\"><a href=\"#Command-3\" class=\"headerlink\" title=\"Command\"></a>Command</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/103195128\">linux监控工具之sysstat包</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43072797/article/details/105552803\">linux监控工具之stat系列</a></li>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/95407670\">linux监控工具之top系列</a></li>\n<li><a href=\"https://blog.csdn.net/jake_tian/article/details/122817591\">linux监控工具之top替代品入门</a></li>\n<li><a href=\"https://blog.csdn.net/jake_tian/article/details/122781166\">linux监控工具之top替代品详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45465395/article/details/115728520\">linux命令之top入门</a></li>\n<li><a href=\"https://blog.csdn.net/WUFUSHANLI/article/details/124286077\">linux命令之top进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43991475/article/details/124401289\">linux命令之top详解</a></li>\n<li><a href=\"https://blog.csdn.net/inuyashaw/article/details/55095545\">linux命令之top和ps查看线程</a></li>\n<li><a href=\"https://blog.csdn.net/MyySophia/article/details/104736742\">linux问题故障定位详解</a></li>\n</ul>\n</blockquote>\n<p>top（cpu mem）<br>htop<br>nmon</p>\n<h3 id=\"Cpu\"><a href=\"#Cpu\" class=\"headerlink\" title=\"Cpu\"></a>Cpu</h3><p>cpu &#x2F;proc&#x2F;cpu（core）<br>cpu mpstat top</p>\n<h3 id=\"Memory\"><a href=\"#Memory\" class=\"headerlink\" title=\"Memory\"></a>Memory</h3><p>mem free<br>mem vmstat top</p>\n<h3 id=\"Disk\"><a href=\"#Disk\" class=\"headerlink\" title=\"Disk\"></a>Disk</h3><p>disk df du dd mount umount check<br>disk iostat iotop</p>\n<h3 id=\"Network\"><a href=\"#Network\" class=\"headerlink\" title=\"Network\"></a>Network</h3><p>net ping ifconfig ip route arp<br>net host hostid hostname nslookup dig etc&#x2F;host etc&#x2F;resolve<br>net netstat ifstat iftop tcpdump netcat nc</p>\n<h3 id=\"Kernel\"><a href=\"#Kernel\" class=\"headerlink\" title=\"Kernel\"></a>Kernel</h3><p>sysctl ulimit</p>\n<h1 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Hsk_03/article/details/125496258\">linux之脚本登录</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concept-4\"><a href=\"#Concept-4\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h2 id=\"Command-4\"><a href=\"#Command-4\" class=\"headerlink\" title=\"Command\"></a>Command</h2><p>user pwd who whoami useradd userdel usergroup passwd su</p>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><h3 id=\"Package\"><a href=\"#Package\" class=\"headerlink\" title=\"Package\"></a>Package</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/small_queen/article/details/115535046\">linux包管理工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42982742/article/details/103195291\">linux包管理工具之yum与rpm的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29864185/article/details/52943692\">linux包管理工具之apt和dpkg的区别</a></li>\n<li><a href=\"https://blog.csdn.net/RadiantJeral/article/details/109681825\">linux多版本切换命令之alternatives入门</a></li>\n<li><a href=\"https://blog.csdn.net/f80407515/article/details/107654729\">linux多版本切换命令之alternatives详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"yum\"><a href=\"#yum\" class=\"headerlink\" title=\"yum\"></a>yum</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Netfilter007/article/details/103873293\">linux之yum详解</a></li>\n<li><a href=\"https://blog.csdn.net/fdcp123/article/details/115180957\">linux之yum源详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34556414/article/details/105425688\">linux之yum-config-manager</a></li>\n<li><a href=\"https://blog.csdn.net/guozuofeng/article/details/99691196\">linux之yum whatprovides</a></li>\n<li><a href=\"https://blog.csdn.net/chenngua/article/details/84627913\">linux之yum fastermirror</a></li>\n</ul>\n</blockquote>\n<h4 id=\"apt\"><a href=\"#apt\" class=\"headerlink\" title=\"apt\"></a>apt</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Netfilter007/article/details/103879962\">linux之apt详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Browser\"><a href=\"#Browser\" class=\"headerlink\" title=\"Browser\"></a>Browser</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/angle_chen123/article/details/120675472\">linux工具之curl详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Download\"><a href=\"#Download\" class=\"headerlink\" title=\"Download\"></a>Download</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27870421/article/details/91951402\">linux工具之wget详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Compress\"><a href=\"#Compress\" class=\"headerlink\" title=\"Compress\"></a>Compress</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ningyanggege/article/details/107025147\">linux工具之压缩命令入门</a></li>\n<li><a href=\"https://blog.csdn.net/to_free/article/details/109789721\">linux工具之压缩命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/daqinzl/article/details/120152603\">linux工具之压缩时带密码</a></li>\n<li><a href=\"https://blog.csdn.net/xiaochong0302/article/details/127688249\">linux工具之zip和unzip详解</a></li>\n<li><a href=\"https://blog.csdn.net/leenhem/article/details/121289649\">linux工具之zip和unzip添加保护密码</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33468857/article/details/104494477\">linux工具之gzip和gunzip详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41980563/article/details/103085108\">linux工具之gzip和gunzip保留源文件</a></li>\n<li><a href=\"https://blog.csdn.net/Canflydonkey/article/details/89577083\">linux工具之zip和gzip的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41545647/article/details/108844924\">linux工具之zip和gzip的区别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45551608/article/details/117095874\">linux工具之date详解</a></li>\n<li><a href=\"https://blog.csdn.net/sunnygirltest/article/details/119984416\">linux工具之时间戳与日期相互转换</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">date</span> -d <span class=\"string\">&#x27;2007-01-01 00:00:00&#x27;</span> +%s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">date</span> -d @1167580800 +<span class=\"string\">&quot;%Y-%m-%d %H:%M:%S&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Time\"><a href=\"#Time\" class=\"headerlink\" title=\"Time\"></a>Time</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/z_ssyy/article/details/123069566\">linux工具之time详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Watch\"><a href=\"#Watch\" class=\"headerlink\" title=\"Watch\"></a>Watch</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yizhiniu_xuyw/article/details/113807625\">linux工具之watch详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Uname\"><a href=\"#Uname\" class=\"headerlink\" title=\"Uname\"></a>Uname</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/c_xiazai12345/article/details/115767826\">linux工具之uname详解</a></li>\n<li><a href=\"https://blog.csdn.net/peng2hui1314/article/details/108851837\">linux查看内核和发行版本信息</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h2><h3 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h3><p>crontab</p>\n<h3 id=\"Time-1\"><a href=\"#Time-1\" class=\"headerlink\" title=\"Time\"></a>Time</h3><p>ntp</p>\n<h2 id=\"System-1\"><a href=\"#System-1\" class=\"headerlink\" title=\"System\"></a>System</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/97759498\">linux命令之uptime详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100145859\">linux命令之shutdown详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100146244\">linux命令之poweroff详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100146487\">linux命令之halt详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengjin20104042056/article/details/100146644\">linux命令之reboot详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + system"],"tags":["+ dev"]},{"title":"mac","url":"/2017/01/01/dev/dev-1-system/system-5-mac/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/93017223\">mac之睡眠模式如何不中断下载任务</a></li>\n</ul>\n</blockquote>\n<p>睡眠模式时下载会不会中断（网络和硬盘）</p>\n<h1 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h1><h2 id=\"Cmd\"><a href=\"#Cmd\" class=\"headerlink\" title=\"Cmd\"></a>Cmd</h2><h2 id=\"Shell\"><a href=\"#Shell\" class=\"headerlink\" title=\"Shell\"></a>Shell</h2><h2 id=\"Terminal\"><a href=\"#Terminal\" class=\"headerlink\" title=\"Terminal\"></a>Terminal</h2><h1 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h1><h2 id=\"Permission\"><a href=\"#Permission\" class=\"headerlink\" title=\"Permission\"></a>Permission</h2><h1 id=\"Text\"><a href=\"#Text\" class=\"headerlink\" title=\"Text\"></a>Text</h1><h1 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h1><h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><h1 id=\"User\"><a href=\"#User\" class=\"headerlink\" title=\"User\"></a>User</h1><h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><h3 id=\"Package\"><a href=\"#Package\" class=\"headerlink\" title=\"Package\"></a>Package</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SmileLife123/article/details/129110329\">mac包管理工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/MacwinWin/article/details/112384643\">mac包管理之brew link</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + system"],"tags":["+ dev"]},{"title":"idea编辑器","url":"/2017/01/05/dev/dev-5-editor/editor-1-idea/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://www.jetbrains.com/help/idea/getting-started.html\">idea官方文档</a></li>\n<li><a href=\"https://blog.csdn.net/const_/article/details/89638117\">idea功能详解</a></li>\n<li><a href=\"https://blog.csdn.net/xfx_1994/article/details/103579870\">idea基础配置</a></li>\n<li><a href=\"https://blog.csdn.net/willwillfuture/article/details/106005476\">idea配置之代码补全时不区分大小写</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34208844/article/details/84070634\">idea配置之输入引号时包裹选中</a></li>\n</ul>\n</blockquote>\n<p>文件编码、换行、Tab转空格</p>\n<h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://www.jetbrains.com/help/idea/reference-keymap-win-default.html\">idea快捷键windows版</a></li>\n<li><a href=\"https://www.jetbrains.com/help/idea/reference-keymap-mac-default.html\">idea快捷键macOS版</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38963960/article/details/89552704\">idea快捷键入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46550964/article/details/123971840\">idea快捷键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44866272/article/details/123322204\">idea快捷键详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28804275/article/details/80892103\">idea快捷键拆解系列</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Key\"><a href=\"#Key\" class=\"headerlink\" title=\"Key\"></a>Key</h3><p>ctrl：控制（control）或移动（move）或导航（navigate）<br>shift：选择（select）或切换（switch）<br>alt：辅助（assist）或交换（exchange）</p>\n<blockquote>\n<p>shift表示切换，比如键盘输入时的大小写切换，键盘输入时的数字和符号切换<br>shift还可以表示轮换，比如shell编程时可以对参数进行shift操作</p>\n</blockquote>\n<h3 id=\"Func\"><a href=\"#Func\" class=\"headerlink\" title=\"Func\"></a>Func</h3><p>功能（Func）：alphanum、ctrl（功能控制）、shift（功能切换）、alt（功能辅助）<br>移动（Move）：arrow、ctrl（移动控制）、alt（移动辅助）<br>导航（Navigate）：[]、ctrl（导航控制）、alt（导航辅助）<br>选择（Select）：click、shift（选择）、alt（选择辅助）<br>切换（Switch）：shift（切换）、alt（切换辅助）<br>辅助（Assist）：alt（辅助）<br>交换（Exchange）alt（交换）</p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><h2 id=\"Edit\"><a href=\"#Edit\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>全选（Select All）：ctrl + a</li>\n<li>删除（Delete）：backspace、delete</li>\n<li>剪切（Cut）：ctrl + x</li>\n<li>复制（Copy）：ctrl + c</li>\n<li>粘贴（Paste）：ctrl + v</li>\n<li>保存（Save）：ctrl + s</li>\n</ul>\n<h3 id=\"Skill\"><a href=\"#Skill\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40007175/article/details/110708625\">idea快速复制一行</a></li>\n<li><a href=\"https://blog.csdn.net/Eiji_g/article/details/89676616\">idea快速移动一行</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>向后复制选中（Duplicate Selection&#x2F;Line）：ctrl + d</li>\n<li>向上复制一行（Copy Line Up）：</li>\n<li>向下复制一行（Copy Line Down）：</li>\n<li>向上移动一行（Move Line Up）：shift + alt + arrow up</li>\n<li>向下移动一行（Move Line Down）：shift + alt + arrow down</li>\n</ul>\n<h3 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fanrenxiang/article/details/80592642\">idea代码转换（Transform）之大小写详解</a></li>\n<li><a href=\"https://blog.csdn.net/ZYC88888/article/details/87876390\">idea代码转换（Transform）之变量名详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>转大写（UPPERCASE）：ctrl + shift + u</li>\n<li>转小写（lowercase）：ctrl + shift + u</li>\n<li>转标题（Capitalize）：</li>\n<li>转驼峰（camelCase）：</li>\n<li>转帕斯（PascalCase）：</li>\n<li>转蛇形（snake_case）：</li>\n<li>转连字（kebab-case）：</li>\n<li>转常量（CONST_CASE）：</li>\n</ul>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><p>撤销（Undo）：ctrl + z</p>\n<h3 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h3><p>重做（Redo）：ctrl + shift + z</p>\n<h2 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h2><h3 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>常规性移动：arrow</li>\n</ul>\n<h3 id=\"Skill-1\"><a href=\"#Skill-1\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_48504504/article/details/106670692\">idea快速移动到页顶底</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42351033/article/details/108064133\">idea快速移动到行首尾</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42351033/article/details/108088491\">idea在单词间快速移动</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>移动到页顶：ctrl + home</li>\n<li>移动到页底：ctrl + end</li>\n<li>移动到行首：home</li>\n<li>移动到行尾：end</li>\n<li>移动到（上一个）词首：ctrl + arrow left</li>\n<li>移动到（下一个）词尾：ctrl + arrow right</li>\n</ul>\n<h3 id=\"Cursor\"><a href=\"#Cursor\" class=\"headerlink\" title=\"Cursor\"></a>Cursor</h3><ul>\n<li>单行添加光标（Add Cursor Single）：</li>\n<li>多行添加光标（Add Cursor Multiple）：</li>\n<li>向上添加光标（Add Cursor Above）：</li>\n<li>向下添加光标（Add Cursor Below）：</li>\n</ul>\n<h3 id=\"Backward\"><a href=\"#Backward\" class=\"headerlink\" title=\"Backward\"></a>Backward</h3><ul>\n<li>后退（Backward）：ctrl + alt + arrow left</li>\n</ul>\n<h3 id=\"Forward\"><a href=\"#Forward\" class=\"headerlink\" title=\"Forward\"></a>Forward</h3><ul>\n<li>前进（Forward）：ctrl + alt + arrow right</li>\n</ul>\n<h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><h3 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wanghuiwei888/article/details/90489377\">idea快速选择首尾</a></li>\n<li><a href=\"https://allensu.blog.csdn.net/article/details/108064513\">idea快速选择字符</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43302785/article/details/83280023\">idea快速选择单词</a></li>\n<li><a href=\"https://blog.csdn.net/A_java_c/article/details/119393369\">idea单词选择设置</a></li>\n<li><a href=\"https://blog.csdn.net/VariatioZbw/article/details/111305225\">idea快速选择一行</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34626094/article/details/112913467\">idea快速选择环绕</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>选择到行首：shift + home</li>\n<li>选择到行尾：shift + end</li>\n<li>选择字符（Char）：shift + arrow</li>\n<li>选择单词（Word）：double click、ctrl + shift + arrow left&#x2F;right</li>\n<li>选择一行（Line）：triple click</li>\n<li>选择一片（Area）：shift + click</li>\n<li>选择环绕（Surround）：</li>\n</ul>\n<blockquote>\n<p>选择环绕：选择引号和括号里面的内容</p>\n</blockquote>\n<h3 id=\"Expand\"><a href=\"#Expand\" class=\"headerlink\" title=\"Expand\"></a>Expand</h3><ul>\n<li>扩展（Expand）选择：ctrl + w</li>\n</ul>\n<h3 id=\"Shrink\"><a href=\"#Shrink\" class=\"headerlink\" title=\"Shrink\"></a>Shrink</h3><ul>\n<li>收缩（Shrink）选择：ctrl + shift + w</li>\n</ul>\n<h3 id=\"Occurrence\"><a href=\"#Occurrence\" class=\"headerlink\" title=\"Occurrence\"></a>Occurrence</h3><ul>\n<li>向后添加选中（Add Next Occurrence）：</li>\n<li>向前添加选中（Add Previous Occurrence）：</li>\n<li>添加所有选中（Select All Occurrence）：</li>\n</ul>\n<h3 id=\"Column\"><a href=\"#Column\" class=\"headerlink\" title=\"Column\"></a>Column</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_29958413/article/details/105048651\">idea列选模式</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>列选模式（Column Selection Mode）：</li>\n</ul>\n<h2 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><h3 id=\"Generator\"><a href=\"#Generator\" class=\"headerlink\" title=\"Generator\"></a>Generator</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Yinyaowei/article/details/103831461\">idea代码生成（Generator）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Refactor\"><a href=\"#Refactor\" class=\"headerlink\" title=\"Refactor\"></a>Refactor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/libusi001/article/details/124310564\">idea代码重构（Refactor）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Format\"><a href=\"#Format\" class=\"headerlink\" title=\"Format\"></a>Format</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/AlbenXie/article/details/99727636\">idea代码格式化（Format）详解</a></li>\n</ul>\n</blockquote>\n<p>格式化快捷键：ctrl + alt + l</p>\n<h2 id=\"Navigation\"><a href=\"#Navigation\" class=\"headerlink\" title=\"Navigation\"></a>Navigation</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hanly_jiang/article/details/115899919\">idea快速导航</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Find\"><a href=\"#Find\" class=\"headerlink\" title=\"Find\"></a>Find</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/li1325169021/article/details/105644846\">idea文内查找</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46017976/article/details/109405746\">idea全局查找</a></li>\n<li><a href=\"https://blog.csdn.net/cgl125167016/article/details/78961160\">idea查找文件</a></li>\n<li><a href=\"https://blog.csdn.net/digua930126/article/details/108847892\">idea查找符号</a></li>\n<li><a href=\"https://blog.csdn.net/xuchaoxin1375/article/details/120977495\">idea查找命令</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/122986795\">idea查找引用</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>在文件中查找文本：ctrl + f</li>\n<li>在工作区查找文本：ctrl + shift + f</li>\n<li>查找文件（file）：ctrl + shift + n</li>\n<li>查找符号（symbol）：ctrl + n</li>\n<li>查找命令（command）：ctrl + shift + a</li>\n<li>查找引用（reference）：</li>\n</ul>\n<h3 id=\"Jump\"><a href=\"#Jump\" class=\"headerlink\" title=\"Jump\"></a>Jump</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/120469328\">idea跳转之跳转到实现类而不是接口定义</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42351033/article/details/108015062\">idea跳转之跳转到声明</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41490274/article/details/87898329\">跳转到某行列</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>跳转到声明（declare）：ctrl + click、ctrl + b</li>\n<li>跳转到定义（define）：ctrl + shift + click、ctrl + shift + b</li>\n<li>跳转到实现（implement）：ctrl + alt + b</li>\n<li>跳转到某行（line）：ctrl + g</li>\n<li>跳转到某列（column）：ctrl + g</li>\n</ul>\n<h1 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Logicr/article/details/80660733\">idea查看源代码</a></li>\n<li><a href=\"https://blog.csdn.net/21aspnet/article/details/88351875\">idea查看字节码</a></li>\n<li><a href=\"https://blog.csdn.net/l707268743/article/details/109021931\">idea打开class文件</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Palette\"><a href=\"#Palette\" class=\"headerlink\" title=\"Palette\"></a>Palette</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/z2431435/article/details/123659252\">idea面板（Palette）入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43976998/article/details/109209811\">idea面板（Palette）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Outline\"><a href=\"#Outline\" class=\"headerlink\" title=\"Outline\"></a>Outline</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39390545/article/details/102862290\">idea代码大纲（Outline）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Minimap\"><a href=\"#Minimap\" class=\"headerlink\" title=\"Minimap\"></a>Minimap</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ju_362204801/article/details/105504544\">idea代码地图（Minimap）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Hierarchy\"><a href=\"#Hierarchy\" class=\"headerlink\" title=\"Hierarchy\"></a>Hierarchy</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ljc1026774829/article/details/80493767\">idea代码层次（Hierarchy）详解</a></li>\n</ul>\n</blockquote>\n<p>类层次快捷键：ctrl + h<br>方法层次快捷键：ctrl + shift + h<br>调用层次快捷键：ctrl + alt + h</p>\n<h2 id=\"Diagram\"><a href=\"#Diagram\" class=\"headerlink\" title=\"Diagram\"></a>Diagram</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/stvel/article/details/118391125\">idea代码图示（Diagram）入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36555038/article/details/97266502\">idea代码图示（Diagram）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ttzommed/article/details/114905865\">idea代码图示（Diagram）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Sequence\"><a href=\"#Sequence\" class=\"headerlink\" title=\"Sequence\"></a>Sequence</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lovesunren/article/details/106010058\">idea代码时序（Sequence）详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Intellisense\"><a href=\"#Intellisense\" class=\"headerlink\" title=\"Intellisense\"></a>Intellisense</h1><blockquote>\n<ul>\n<li><a href=\"https://www.jetbrains.com/help/idea/auto-completing-code.html\">idea智能辅助详解</a></li>\n</ul>\n</blockquote>\n<p>lsp：language server plugin</p>\n<h2 id=\"Fixing\"><a href=\"#Fixing\" class=\"headerlink\" title=\"Fixing\"></a>Fixing</h2><p>快速修复快捷键：alt + enter</p>\n<h3 id=\"Intention-Action\"><a href=\"#Intention-Action\" class=\"headerlink\" title=\"Intention Action\"></a>Intention Action</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/DeleteWz/article/details/99715311\">idea意图动作入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013520666/article/details/52369824\">idea意图动作进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43314519/article/details/111088937\">idea意图动作详解</a></li>\n<li><a href=\"https://blog.csdn.net/Mei_yu_01/article/details/123970503\">idea意图动作设置恢复</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45952227/article/details/103727050\">idea意图动作禁用恢复</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Suggest\"><a href=\"#Suggest\" class=\"headerlink\" title=\"Suggest\"></a>Suggest</h2><p>输入建议快捷键：shift + space（非默认）</p>\n<h3 id=\"Code-Completion\"><a href=\"#Code-Completion\" class=\"headerlink\" title=\"Code Completion\"></a>Code Completion</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sdkghsrkghkrrg/article/details/108608495\">idea代码补全详解</a></li>\n<li><a href=\"https://blog.csdn.net/sawiii/article/details/100109158\">idea代码补全之自动添加末尾的分号</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Snippet\"><a href=\"#Snippet\" class=\"headerlink\" title=\"Snippet\"></a>Snippet</h2><h3 id=\"Live-Template\"><a href=\"#Live-Template\" class=\"headerlink\" title=\"Live Template\"></a>Live Template</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44499221/article/details/109467406\">idea代码模板（Template）详解</a></li>\n</ul>\n</blockquote>\n<p>代码模板快捷键：ctrl + j</p>\n<h3 id=\"Surround-With\"><a href=\"#Surround-With\" class=\"headerlink\" title=\"Surround With\"></a>Surround With</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41115379/article/details/113091113\">idea代码包裹（Surround）详解</a></li>\n</ul>\n</blockquote>\n<p>代码包裹快捷键：ctrl + alt + j</p>\n<h1 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h1><h2 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h2><h1 id=\"Debug\"><a href=\"#Debug\" class=\"headerlink\" title=\"Debug\"></a>Debug</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Kiss_forever/article/details/115310484\">idea调试简介</a></li>\n<li><a href=\"https://blog.csdn.net/TheSky0108/article/details/106050268\">idea调试入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_50180963/article/details/115206328\">idea调试进阶</a></li>\n<li><a href=\"https://blog.csdn.net/future_god_qr/article/details/121250865\">idea调试详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43102730/article/details/125252811\">idea调试精进</a></li>\n<li><a href=\"https://blog.csdn.net/g6U8W7p06dCO99fQ3/article/details/113622490\">idea调试总结</a></li>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/116493681\">idea远程调试</a></li>\n<li><a href=\"https://blog.csdn.net/doctor_who2004/article/details/82872175\">idea可视化调试</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Remote\"><a href=\"#Remote\" class=\"headerlink\" title=\"Remote\"></a>Remote</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq1413274264/article/details/121112413\">idea远程开发入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq1413274264/article/details/125600286\">idea远程开发详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h2><h1 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jack1liu/article/details/111505592\">idea插件推荐入门</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_27933301/article/details/105571549\">idea插件推荐进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44664231/article/details/128733503\">idea插件推荐详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Edit-1\"><a href=\"#Edit-1\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><h3 id=\"Transformer\"><a href=\"#Transformer\" class=\"headerlink\" title=\"Transformer\"></a>Transformer</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lianghecai52171314/article/details/105637582\">String Manipulation</a></li>\n<li><a href=\"https://blog.csdn.net/cnds123321/article/details/119841252\">CamelCase</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27276045/article/details/115922674\">json2bean</a></li>\n<li><a href=\"https://blog.csdn.net/u014089832/article/details/113843793\">bean2json</a></li>\n<li><a href=\"https://plugins.jetbrains.com/plugin/15980-javabean2ddl\">bean2ddl</a></li>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/127506855\">json和bean互转插件</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/CYK_byte/article/details/128359924\">idea编辑器插件之vim入门</a></li>\n<li><a href=\"https://blog.csdn.net/CoderBruis/article/details/94735816\">idea编辑器插件之vim进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42320934/article/details/126125717\">idea编辑器插件之vim详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Coding-1\"><a href=\"#Coding-1\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><h3 id=\"Generator-1\"><a href=\"#Generator-1\" class=\"headerlink\" title=\"Generator\"></a>Generator</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_52211469/article/details/119494934\">Lombok</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38366063/article/details/106076608\">Builder Generator</a></li>\n<li><a href=\"https://blog.csdn.net/liuming690452074/article/details/123785233\">Randomness</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Intellisense-1\"><a href=\"#Intellisense-1\" class=\"headerlink\" title=\"Intellisense\"></a>Intellisense</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56022510/article/details/130263621\">Copilot</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43314519/article/details/112604425\">Codota</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41852068/article/details/119806481\">Tabnine</a></li>\n<li><a href=\"https://blog.csdn.net/u011664808/article/details/124346421\">Tabnine和Codota对比</a></li>\n<li><a href=\"https://blog.csdn.net/RetroFlux/article/details/125773360\">Tabnine和Copilot对比</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Filling\"><a href=\"#Filling\" class=\"headerlink\" title=\"Filling\"></a>Filling</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/GyaoG/article/details/118992257\">GenerateAllSetter</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Format-1\"><a href=\"#Format-1\" class=\"headerlink\" title=\"Format\"></a>Format</h3><h3 id=\"Check\"><a href=\"#Check\" class=\"headerlink\" title=\"Check\"></a>Check</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45851575/article/details/125051480\">SpotBugs详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><h3 id=\"Maven\"><a href=\"#Maven\" class=\"headerlink\" title=\"Maven\"></a>Maven</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/GyaoG/article/details/120599475\">Maven Helper</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30231473/article/details/128762552\">Maven Search</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/seawaving/article/details/122607623\">Spring Assistant</a></li>\n<li><a href=\"https://blog.csdn.net/GLepoch/article/details/113485608\">Springirun（application.yml提示）</a></li>\n<li><a href=\"https://blog.csdn.net/a123lwlw/article/details/106230080\">SpringDevTool入门</a></li>\n<li><a href=\"https://blog.csdn.net/Sai_BAN/article/details/116380645\">SpringDevTool进阶</a></li>\n<li><a href=\"https://blog.csdn.net/luokha/article/details/119746359\">SpringDevTool详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zz153417230/article/details/98200761\">Mybatis</a></li>\n<li><a href=\"https://blog.csdn.net/dongdong199033/article/details/129738880\">Mybatis Log Free</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Translation\"><a href=\"#Translation\" class=\"headerlink\" title=\"Translation\"></a>Translation</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cnds123321/article/details/102864197\">Translation</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Database\"><a href=\"#Database\" class=\"headerlink\" title=\"Database\"></a>Database</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41571459/article/details/115004949\">Database Navigator</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Request\"><a href=\"#Request\" class=\"headerlink\" title=\"Request\"></a>Request</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/seawaving/article/details/122925310\">RestfulToolkitX</a></li>\n<li><a href=\"https://blog.csdn.net/chenlixiao007/article/details/116425259\">Http Client</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Console\"><a href=\"#Console\" class=\"headerlink\" title=\"Console\"></a>Console</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40093255/article/details/108390842\">Grep Console</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Shortcut-1\"><a href=\"#Shortcut-1\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cch1024/article/details/103384866\">Key Promoter X</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ dev + editor"],"tags":["+ dev"]},{"title":"vscode编辑器","url":"/2017/01/05/dev/dev-5-editor/editor-3-vscode/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/docs\">vscode官方文档</a></li>\n<li><a href=\"https://blog.csdn.net/Passerby_Wang/article/details/122179913\">vscode功能详解</a></li>\n<li><a href=\"https://blog.csdn.net/GCQ19961204/article/details/125665308\">vscode基础配置</a></li>\n</ul>\n</blockquote>\n<p>文件编码、换行、Tab转空格</p>\n<h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-windows.pdf\">vscode快捷键windows版</a></li>\n<li><a href=\"https://code.visualstudio.com/shortcuts/keyboard-shortcuts-macos.pdf\">vscode快捷键macOS版</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42815609/article/details/113600240\">vscode快捷键入门</a></li>\n<li><a href=\"https://piperliu.blog.csdn.net/article/details/113838865\">vscode快捷键进阶</a></li>\n<li><a href=\"https://piperliu.blog.csdn.net/article/details/114397279\">vscode快捷键详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Key\"><a href=\"#Key\" class=\"headerlink\" title=\"Key\"></a>Key</h3><p>ctrl：控制（control）或移动（move）或导航（navigate）<br>shift：选择（select）或切换（switch）<br>alt：辅助（assist）或交换（exchange）</p>\n<blockquote>\n<p>shift表示切换，比如键盘输入时的大小写切换，键盘输入时的数字和符号切换<br>shift还可以表示轮换，比如shell编程时可以对参数进行shift操作</p>\n</blockquote>\n<h3 id=\"Func\"><a href=\"#Func\" class=\"headerlink\" title=\"Func\"></a>Func</h3><p>功能（Func）：alphanum、ctrl（功能控制）、shift（功能切换）、alt（功能辅助）<br>移动（Move）：arrow、ctrl（移动控制）、alt（移动辅助）<br>导航（Navigate）：[]、ctrl（导航控制）、alt（导航辅助）<br>选择（Select）：click、shift（选择）、alt（选择辅助）<br>切换（Switch）：shift（切换）、alt（切换辅助）<br>辅助（Assist）：alt（辅助）<br>交换（Exchange）alt（交换）</p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><h2 id=\"Edit\"><a href=\"#Edit\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>全选（Select All）：ctrl + a</li>\n<li>删除（Delete）：backspace、delete</li>\n<li>剪切（Cut）：ctrl + x</li>\n<li>复制（Copy）：ctrl + c</li>\n<li>粘贴（Paste）：ctrl + v</li>\n<li>保存（Save）：ctrl + s</li>\n</ul>\n<h3 id=\"Skill\"><a href=\"#Skill\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><ul>\n<li>向后复制选中（Duplicate Selection&#x2F;Line）：ctrl + d（非默认）</li>\n<li>向上复制一行（Copy Line Up）：shift + alt + arrow up</li>\n<li>向下复制一行（Copy Line Down）：shift + alt + arrow down</li>\n<li>向上移动一行（Move Line Up）：alt + arrow up</li>\n<li>向下移动一行（Move Line Down）：alt + arrow down</li>\n</ul>\n<h3 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h3><ul>\n<li>转大写（UPPERCASE）：alt + u（非默认）</li>\n<li>转小写（lowercase）：alt + l（非默认）</li>\n<li>转标题（Capitalize）：</li>\n<li>转驼峰（camelCase）：</li>\n<li>转帕斯（PascalCase）：</li>\n<li>转蛇形（snake_case）：</li>\n<li>转连字（kebab-case）：</li>\n<li>转常量（CONST_CASE）：</li>\n</ul>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><p>撤销（Undo）：ctrl + z</p>\n<h3 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h3><p>重做（Redo）：ctrl + y</p>\n<h2 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h2><h3 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>常规性移动：arrow</li>\n</ul>\n<h3 id=\"Skill-1\"><a href=\"#Skill-1\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><ul>\n<li>移动到页顶：ctrl + home</li>\n<li>移动到页底：ctrl + end</li>\n<li>移动到行首：home</li>\n<li>移动到行尾：end</li>\n<li>移动到（上一个）词首：ctrl + arrow left</li>\n<li>移动到（下一个）词尾：ctrl + arrow right</li>\n</ul>\n<h3 id=\"Cursor\"><a href=\"#Cursor\" class=\"headerlink\" title=\"Cursor\"></a>Cursor</h3><ul>\n<li>单行添加光标（Add Cursor Single）：alt + click</li>\n<li>多行添加光标（Add Cursor Multiple）：shift + alt + click</li>\n<li>向上添加光标（Add Cursor Above）：ctrl + alt + arrow up（被QQ音乐占用）</li>\n<li>向下添加光标（Add Cursor Below）：ctrl + alt + arrow down（被QQ音乐占用）</li>\n</ul>\n<h3 id=\"Backward\"><a href=\"#Backward\" class=\"headerlink\" title=\"Backward\"></a>Backward</h3><ul>\n<li>后退（Backward）：alt + arrow left</li>\n</ul>\n<h3 id=\"Forward\"><a href=\"#Forward\" class=\"headerlink\" title=\"Forward\"></a>Forward</h3><ul>\n<li>前进（Forward）：alt + arrow right</li>\n</ul>\n<h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><h3 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42679415/article/details/123307825\">vscode单词选择设置</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45654407/article/details/106447813\">vscode快速选择环绕</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>选择到行首：shift + home</li>\n<li>选择到行尾：shift + end</li>\n<li>选择字符（Char）：shift + arrow</li>\n<li>选择单词（Word）：double click、ctrl + shift + arrow left&#x2F;right</li>\n<li>选择一行（Line）：triple click、ctrl + l</li>\n<li>选择一片（Area）：shift + click</li>\n<li>选择环绕（Surround）：</li>\n</ul>\n<blockquote>\n<p>选择环绕：选择引号和括号里面的内容</p>\n</blockquote>\n<h3 id=\"Expand\"><a href=\"#Expand\" class=\"headerlink\" title=\"Expand\"></a>Expand</h3><ul>\n<li>扩展（Expand）选择：shift + alt + arrow left</li>\n</ul>\n<h3 id=\"Shrink\"><a href=\"#Shrink\" class=\"headerlink\" title=\"Shrink\"></a>Shrink</h3><ul>\n<li>收缩（Shrink）选择：shift + alt + arrow right</li>\n</ul>\n<h3 id=\"Occurrence\"><a href=\"#Occurrence\" class=\"headerlink\" title=\"Occurrence\"></a>Occurrence</h3><ul>\n<li>向后添加选中（Add Next Occurrence）：alt + d（非默认）</li>\n<li>向前添加选中（Add Previous Occurrence）：</li>\n<li>添加所有选中（Select All Occurrence）：</li>\n</ul>\n<h3 id=\"Column\"><a href=\"#Column\" class=\"headerlink\" title=\"Column\"></a>Column</h3><ul>\n<li>列选模式（Column Selection Mode）：</li>\n</ul>\n<h2 id=\"Coding\"><a href=\"#Coding\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><h3 id=\"Generator\"><a href=\"#Generator\" class=\"headerlink\" title=\"Generator\"></a>Generator</h3><h3 id=\"Refactor\"><a href=\"#Refactor\" class=\"headerlink\" title=\"Refactor\"></a>Refactor</h3><h3 id=\"Format\"><a href=\"#Format\" class=\"headerlink\" title=\"Format\"></a>Format</h3><p>格式化快捷键：alt + f（非默认）</p>\n<h2 id=\"Navigation\"><a href=\"#Navigation\" class=\"headerlink\" title=\"Navigation\"></a>Navigation</h2><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/docs/editor/editingevolved\">vscode快速导航</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Find\"><a href=\"#Find\" class=\"headerlink\" title=\"Find\"></a>Find</h3><ul>\n<li>在文件中查找文本：ctrl + f</li>\n<li>在工作区查找文本：ctrl + shift + f</li>\n<li>查找文件（file）：ctrl + p、ctrl + e（已删除）</li>\n<li>查找符号（symbol）：alt + s（非默认）</li>\n<li>查找命令（command）：ctrl + shift + p</li>\n<li>查找引用（reference）：</li>\n</ul>\n<h3 id=\"Jump\"><a href=\"#Jump\" class=\"headerlink\" title=\"Jump\"></a>Jump</h3><ul>\n<li>跳转到声明（declare）：ctrl + click、ctrl + b（非默认）</li>\n<li>跳转到定义（define）：ctrl + shift + click、ctrl + shift + b（非默认）</li>\n<li>跳转到实现（implement）：ctrl + alt + b（非默认）</li>\n<li>跳转到某行（line）：ctrl + g</li>\n<li>跳转到某列（column）：ctrl + g</li>\n</ul>\n<h1 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h1><h2 id=\"Palette\"><a href=\"#Palette\" class=\"headerlink\" title=\"Palette\"></a>Palette</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43157144/article/details/111304769\">vscode面板入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012292754/article/details/108351875\">vscode面板详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Outline\"><a href=\"#Outline\" class=\"headerlink\" title=\"Outline\"></a>Outline</h2><h2 id=\"Minimap\"><a href=\"#Minimap\" class=\"headerlink\" title=\"Minimap\"></a>Minimap</h2><h1 id=\"Intellisense\"><a href=\"#Intellisense\" class=\"headerlink\" title=\"Intellisense\"></a>Intellisense</h1><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/docs/editor/intellisense\">vscode智能辅助详解</a></li>\n</ul>\n</blockquote>\n<p>lsp：language server plugin</p>\n<h2 id=\"Fixing\"><a href=\"#Fixing\" class=\"headerlink\" title=\"Fixing\"></a>Fixing</h2><p>快速修复快捷键：alt + enter（非默认）</p>\n<h3 id=\"Code-Action\"><a href=\"#Code-Action\" class=\"headerlink\" title=\"Code Action\"></a>Code Action</h3><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/docs/editor/refactoring#_code-actions-quick-fixes-and-refactorings\">vscode代码动作详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Suggest\"><a href=\"#Suggest\" class=\"headerlink\" title=\"Suggest\"></a>Suggest</h2><p>输入建议快捷键：shift + space（非默认）</p>\n<h3 id=\"Code-Completion\"><a href=\"#Code-Completion\" class=\"headerlink\" title=\"Code Completion\"></a>Code Completion</h3><blockquote>\n<ul>\n<li><a href=\"https://code.visualstudio.com/docs/editor/intellisense#_types-of-completions\">vscode代码补全详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Snippet\"><a href=\"#Snippet\" class=\"headerlink\" title=\"Snippet\"></a>Snippet</h2><h3 id=\"Snippet-1\"><a href=\"#Snippet-1\" class=\"headerlink\" title=\"Snippet\"></a>Snippet</h3><h3 id=\"Emmet\"><a href=\"#Emmet\" class=\"headerlink\" title=\"Emmet\"></a>Emmet</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wuyxinu/article/details/116140459\">Emmet入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33744228/article/details/80910377\">Emmet进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kettlo/article/details/120754531\">Emmet详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Run\"><a href=\"#Run\" class=\"headerlink\" title=\"Run\"></a>Run</h1><h2 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h2><h1 id=\"Debug\"><a href=\"#Debug\" class=\"headerlink\" title=\"Debug\"></a>Debug</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42962086/article/details/123274273\">vscode调试入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43082343/article/details/126618416\">vscode调试进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shentian885/article/details/123896536\">vscode调试详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31347869/article/details/121672295\">vscode远程调试</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39699670/article/details/114932751\">vscode可视化调试</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Remote\"><a href=\"#Remote\" class=\"headerlink\" title=\"Remote\"></a>Remote</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wjl18270365476/article/details/122891386\">vscode远程开发入门</a></li>\n<li><a href=\"https://blog.csdn.net/irober/article/details/112724986\">vscode远程开发详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SSH\"><a href=\"#SSH\" class=\"headerlink\" title=\"SSH\"></a>SSH</h2><h1 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/EsquireY/article/details/118051587\">vscode插件推荐入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011262253/article/details/113879997\">vscode插件推荐进阶</a></li>\n<li><a href=\"https://blog.csdn.net/JACK_SUJAVA/article/details/129375919\">vscode插件推荐详解</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=vscjava.vscode-java-pack\">Extension Pack for Java</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\">Python</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Edit-1\"><a href=\"#Edit-1\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><h3 id=\"Transformer\"><a href=\"#Transformer\" class=\"headerlink\" title=\"Transformer\"></a>Transformer</h3><blockquote>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=dakara.transformer\">Transformer</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=marclipovsky.string-manipulation\">String Manipulation</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=wmaurer.change-case\">change-case</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Editor\"><a href=\"#Editor\" class=\"headerlink\" title=\"Editor\"></a>Editor</h3><blockquote>\n<ul>\n<li><a href=\"https://piperliu.blog.csdn.net/article/details/113674255\">vscode编辑器插件之vim入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44746306/article/details/119356966\">vscode编辑器插件之vim进阶</a></li>\n<li><a href=\"https://blog.csdn.net/li520_fei/article/details/122780195\">vscode编辑器插件之vim详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Coding-1\"><a href=\"#Coding-1\" class=\"headerlink\" title=\"Coding\"></a>Coding</h2><h3 id=\"Generator-1\"><a href=\"#Generator-1\" class=\"headerlink\" title=\"Generator\"></a>Generator</h3><h3 id=\"Intellisense-1\"><a href=\"#Intellisense-1\" class=\"headerlink\" title=\"Intellisense\"></a>Intellisense</h3><h3 id=\"Filling\"><a href=\"#Filling\" class=\"headerlink\" title=\"Filling\"></a>Filling</h3><h3 id=\"Format-1\"><a href=\"#Format-1\" class=\"headerlink\" title=\"Format\"></a>Format</h3><blockquote>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=jbockle.jbockle-format-files\">Format Files</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=mervin.markdown-formatter\">markdown-formatter</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Check\"><a href=\"#Check\" class=\"headerlink\" title=\"Check\"></a>Check</h3><h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><h2 id=\"Translation\"><a href=\"#Translation\" class=\"headerlink\" title=\"Translation\"></a>Translation</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46106285/article/details/127190042\">Translation</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Database\"><a href=\"#Database\" class=\"headerlink\" title=\"Database\"></a>Database</h2><h2 id=\"Request\"><a href=\"#Request\" class=\"headerlink\" title=\"Request\"></a>Request</h2><h3 id=\"Git\"><a href=\"#Git\" class=\"headerlink\" title=\"Git\"></a>Git</h3><blockquote>\n<ul>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=eamodio.gitlens\">GitLens</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=mhutchie.git-graph\">Git Graph</a></li>\n<li><a href=\"https://marketplace.visualstudio.com/items?itemName=huizhou.githd\">Git History Diff</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ dev + editor"],"tags":["+ dev"]},{"title":"browser","url":"/2017/01/03/dev/dev-3-skill/skill-1-browser/","content":"<h1 id=\"Search\"><a href=\"#Search\" class=\"headerlink\" title=\"Search\"></a>Search</h1><h2 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014565127/article/details/53842885\">谷歌搜索语法（一）基本语法</a></li>\n<li><a href=\"https://blog.csdn.net/u014565127/article/details/53868443\">谷歌搜索语法（二）高级语法</a></li>\n<li><a href=\"https://blog.csdn.net/dmbjzhh/article/details/113093315\">搜索语法入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_62789540/article/details/122486453\">搜索语法进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41423450/article/details/85081039\">搜索语法详解</a></li>\n<li><a href=\"https://www.zhihu.com/question/22940886\">搜索时按照时间筛选</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">java link*map</span><br><span class=\"line\">java &quot;concurrency programming&quot; filetype:pdf language:zh</span><br><span class=\"line\">linkedhashmap site:(csdn.net | cnblogs.com)</span><br><span class=\"line\">linkedhashmap site:(csdn.net or cnblogs.com)</span><br><span class=\"line\">intext:linkedhashmap -intitle:linkedhashmap</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Fuzzy\"><a href=\"#Fuzzy\" class=\"headerlink\" title=\"Fuzzy\"></a>Fuzzy</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">~：同义符</span><br><span class=\"line\">*：通配符</span><br><span class=\"line\">?：通配符</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Logic\"><a href=\"#Logic\" class=\"headerlink\" title=\"Logic\"></a>Logic</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&quot;&quot;：关键字不分词，完全匹配关键字</span><br><span class=\"line\">-：必须排除关键字</span><br><span class=\"line\">+：必须包含关键字</span><br><span class=\"line\">&amp;（and）：同时匹配所有关键字，默认逻辑</span><br><span class=\"line\">|（or）：只需匹配任意关键字，非默认逻辑</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Filter\"><a href=\"#Filter\" class=\"headerlink\" title=\"Filter\"></a>Filter</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">site：限定搜索结果的网站来源</span><br><span class=\"line\">filetype：限定搜索结果的文本格式</span><br><span class=\"line\">language：限定搜索语言（zh、en）</span><br><span class=\"line\">intitle：在标题里搜索关键词</span><br><span class=\"line\">inurl：在链接里搜索关键词</span><br><span class=\"line\">intext：在内容里搜索关键词</span><br><span class=\"line\">index：在内容里搜索关键词</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Engine\"><a href=\"#Engine\" class=\"headerlink\" title=\"Engine\"></a>Engine</h2><p>谷歌、微软bing、百度、头条、360、Yandex</p>\n<h3 id=\"特定领域搜索引擎\"><a href=\"#特定领域搜索引擎\" class=\"headerlink\" title=\"特定领域搜索引擎\"></a>特定领域搜索引擎</h3><p>茶杯狐：<a href=\"https://cupfox.app/%E3%80%90%E5%BD%B1%E8%A7%86%E3%80%91\">https://cupfox.app/【影视】</a></p>\n<p>安娜的档案：<a href=\"https://zh.annas-archive.org/%E3%80%90%E5%87%BA%E7%89%88%E4%B9%A6/%E5%A4%96%E8%AF%AD%E4%B9%A6/%E5%8F%AF%E4%B8%8B%E8%BD%BD%E3%80%91\">https://zh.annas-archive.org/【出版书/外语书/可下载】</a></p>\n<p>鸠摩搜书&#x2F;熊猫搜书【偏向电子版】</p>\n<p>trace：<a href=\"https://trace.moe/%E3%80%90%E4%BA%8C%E6%AC%A1%E5%85%83%E5%9B%BE%E7%89%87%E5%87%BA%E5%A4%84%E3%80%91\">https://trace.moe/【二次元图片出处】</a></p>\n<p>Ascii2d：<a href=\"https://ascii2d.net/%E3%80%90%E4%BA%8C%E6%AC%A1%E5%85%83%E5%9B%BE%E7%89%87%E5%87%BA%E5%A4%84%E3%80%91\">https://ascii2d.net/【二次元图片出处】</a></p>\n<p>音乐搜索器：<a href=\"http://music.qyqm.top/%E3%80%90%E9%9F%B3%E4%B9%90%E4%B8%8B%E8%BD%BD%E3%80%91\">http://music.qyqm.top/【音乐下载】</a></p>\n<p>阿里云盘搜索：<a href=\"https://zhaoziyuan.la/\">https://zhaoziyuan.la/</a></p>\n<p>书格网：<a href=\"https://new.shuge.org/%E3%80%90%E5%8F%A4%E7%B1%8D/%E5%8F%A4%E6%96%87%E7%8C%AE/%E9%AB%98%E6%B8%85%E3%80%91\">https://new.shuge.org/【古籍/古文献/高清】</a></p>\n<p>文津搜索：<a href=\"http://find.nlc.cn/%E3%80%90%E5%8F%A4%E7%B1%8D/%E5%8F%A4%E6%96%87%E7%8C%AE/%E9%AB%98%E6%B8%85%E3%80%91\">http://find.nlc.cn/【古籍/古文献/高清】</a></p>\n<p>iconfont：<a href=\"https://www.iconfont.cn/%E3%80%90%E5%9B%BE%E6%A0%87%E4%B8%8B%E8%BD%BD%E3%80%91\">https://www.iconfont.cn/【图标下载】</a></p>\n<p>flaticon：<a href=\"https://www.freepikcompany.com/flaticon%E3%80%90%E5%9B%BE%E6%A0%87/%E6%8F%92%E7%94%BB/%E4%B8%8B%E8%BD%BD%E3%80%91\">https://www.freepikcompany.com/flaticon【图标/插画/下载】</a></p>\n<p>100font：<a href=\"https://www.100font.com/%E3%80%90%E5%AD%97%E4%BD%93%E7%89%88%E6%9D%83%E6%9F%A5%E7%9C%8B%E3%80%91\">https://www.100font.com/【字体版权查看】</a></p>\n<p>scihub：<a href=\"https://tool.yovisun.com/scihub/%E3%80%90%E8%AE%BA%E6%96%87%E6%9F%A5%E6%89%BE/8000%E4%B8%87%E6%95%B0%E6%8D%AE%E6%96%87%E7%8C%AE%E3%80%91\">https://tool.yovisun.com/scihub/【论文查找/8000万数据文献】</a></p>\n<p>哲学社会科学文献中心：<a href=\"https://www.ncpssd.org/index%E3%80%90%E8%AE%BA%E6%96%87%E6%9F%A5%E6%89%BE/2000%E5%A4%9A%E4%B8%87%E6%95%B0%E6%8D%AE%E6%96%87%E7%8C%AE%E3%80%91\">https://www.ncpssd.org/index【论文查找/2000多万数据文献】</a></p>\n<p>中国裁判文书网：<a href=\"https://wenshu.court.gov.cn/%E3%80%90%E6%96%87%E4%B9%A6%E6%A8%A1%E6%9D%BF%E3%80%91\">https://wenshu.court.gov.cn/【文书模板】</a></p>\n<p>中国自然标本馆：<a href=\"https://www.cfh.ac.cn/Spdb/spsearch.aspx%E3%80%90%E5%8A%A8%E7%89%A9/%E6%A4%8D%E7%89%A9/%E5%BE%AE%E7%94%9F%E7%89%A9%E8%B5%84%E6%96%99%E3%80%91\">https://www.cfh.ac.cn/Spdb/spsearch.aspx【动物/植物/微生物资料】</a></p>\n<p>国家企业信息公示系统：<a href=\"https://www.gsxt.gov.cn/index.html%E3%80%90%E5%85%8D%E8%B4%B9%E6%9F%A5%E6%89%BE%E4%BC%81%E4%B8%9A%E6%95%B0%E6%8D%AE%E3%80%91\">https://www.gsxt.gov.cn/index.html【免费查找企业数据】</a></p>\n<p>开发者搜索：<a href=\"https://kaifa.baidu.com/%E3%80%90%E7%A8%8B%E5%BA%8F%E5%91%98/%E7%BC%96%E7%A8%8B%E3%80%91\">https://kaifa.baidu.com/【程序员/编程】</a></p>\n<p>Goobe：<a href=\"https://goobe.io/%E3%80%90%E7%A8%8B%E5%BA%8F%E5%91%98/%E7%BC%96%E7%A8%8B%E3%80%91\">https://goobe.io/【程序员/编程】</a></p>\n<p>phind：<a href=\"https://www.phind.com/%E3%80%90%E7%A8%8B%E5%BA%8F%E5%91%98/%E7%BC%96%E7%A8%8B%E3%80%91\">https://www.phind.com/【程序员/编程】</a></p>\n<p>百度指数&#x2F;微信指数【词的热度】</p>\n<h1 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Ed7zgeE9X/article/details/129358321\">30个极致实用的谷歌浏览器插件</a></li>\n</ul>\n</blockquote>\n<ol>\n<li>EditThisCookie</li>\n<li>JSON Viewer</li>\n<li>JSON-handle</li>\n<li>Proxy SwitchyOmega</li>\n<li>Tabs saver</li>\n<li>XPath Generator</li>\n</ol>\n<h2 id=\"Translation\"><a href=\"#Translation\" class=\"headerlink\" title=\"Translation\"></a>Translation</h2><p>推荐 沙拉查词</p>\n<h2 id=\"Toc\"><a href=\"#Toc\" class=\"headerlink\" title=\"Toc\"></a>Toc</h2><blockquote>\n<p>Toc：Table of Content</p>\n</blockquote>\n<p>推荐 Smart TOC</p>\n<h2 id=\"Copy\"><a href=\"#Copy\" class=\"headerlink\" title=\"Copy\"></a>Copy</h2><p>推荐 SuperCopy（超级复制）</p>\n<h2 id=\"Speed\"><a href=\"#Speed\" class=\"headerlink\" title=\"Speed\"></a>Speed</h2><p>推荐 Global Speed（视频速度控制）</p>\n<h2 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41911985/article/details/95662894\">油猴插件入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18610547/article/details/108981413\">油猴脚本编写</a></li>\n</ul>\n</blockquote>\n<p>推荐 Tampermonkey（油猴）</p>\n<h1 id=\"Snippet\"><a href=\"#Snippet\" class=\"headerlink\" title=\"Snippet\"></a>Snippet</h1><blockquote>\n<ul>\n<li><a href=\"https://learn.microsoft.com/zh-cn/microsoft-edge/devtools-guide-chromium/javascript/snippets\">Snippet之Edge</a></li>\n<li><a href=\"https://blog.csdn.net/lychee_xiahua/article/details/116025753\">Snippet之Chrome</a></li>\n<li><a href=\"https://www.mattjennings.net/extracting-urls-web-page-chrome-developer-tools\">Snippet之url提取</a></li>\n</ul>\n</blockquote>\n<h2 id=\"破除CSDN强制关注\"><a href=\"#破除CSDN强制关注\" class=\"headerlink\" title=\"破除CSDN强制关注\"></a>破除CSDN强制关注</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56830409/article/details/125517834\">原生javascript解锁CSDN强制关注才能阅读让文章自动展开</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> article_content = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;article_content&quot;</span>);</span><br><span class=\"line\">article_content.<span class=\"title function_\">removeAttribute</span>(<span class=\"string\">&quot;style&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> follow_texts = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&#x27;follow-text&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">var</span> hide_article_boxs = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementsByClassName</span>(<span class=\"string\">&#x27;hide-article-box&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">if</span> (follow_texts[<span class=\"number\">0</span>] &amp;&amp; hide_article_boxs[<span class=\"number\">0</span>]) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hide_article_do&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> follow_text = follow_texts[<span class=\"number\">0</span>];</span><br><span class=\"line\">    follow_text.<span class=\"property\">parentElement</span>.<span class=\"property\">parentElement</span>.<span class=\"title function_\">removeChild</span>(follow_text.<span class=\"property\">parentElement</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> hide_article_box = hide_article_boxs[<span class=\"number\">0</span>];</span><br><span class=\"line\">    hide_article_box.<span class=\"property\">parentElement</span>.<span class=\"title function_\">removeChild</span>(hide_article_box);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;hide_article_no&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"提取网页外链信息\"><a href=\"#提取网页外链信息\" class=\"headerlink\" title=\"提取网页外链信息\"></a>提取网页外链信息</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">var p = /&lt;title&gt;.*&lt;\\/title&gt;/g</span><br><span class=\"line\">function parsePageTitle(s) &#123;</span><br><span class=\"line\">    var items = s.match(p)</span><br><span class=\"line\">    if (items) &#123;</span><br><span class=\"line\">        return items[0].replace(&quot;&lt;title&gt;&quot;, &quot;&quot;).replace(&quot;&lt;/title&gt;&quot;, &quot;&quot;)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    return &quot;null&quot;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getPageSource(url) &#123;</span><br><span class=\"line\">    return fetch(url).then(res =&gt; res.text())</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getPageTitle(url) &#123;</span><br><span class=\"line\">    fetch(url).then(res =&gt; res.text())</span><br><span class=\"line\">        .then(res =&gt; &#123;</span><br><span class=\"line\">            console.log(parsePageTitle(res))</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function getPageTitles(urls) &#123;</span><br><span class=\"line\">    Promise.all(</span><br><span class=\"line\">        urls.map(url =&gt;</span><br><span class=\"line\">            fetch(url).then(res =&gt; res.text())</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ).then(res =&gt; &#123;</span><br><span class=\"line\">        for (s of res) &#123;</span><br><span class=\"line\">            console.log(parsePageTitle(s))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function testGetPageTitle() &#123;</span><br><span class=\"line\">    // var url = &quot;https://blog.csdn.net/rikkatheworld/article/details/123040617&quot;</span><br><span class=\"line\">    var url = &quot;http://localhost:4000/2017/08/01/java/junior/java-2-lang/&quot;</span><br><span class=\"line\">    getPageTitle(url)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function testGetPageTitles() &#123;</span><br><span class=\"line\">    var urls = []</span><br><span class=\"line\">    urls.push(&quot;http://localhost:4000/2017/08/01/java/junior/java-2-lang/&quot;)</span><br><span class=\"line\">    urls.push(&quot;http://localhost:4000/2017/08/01/java/junior/java-3-container/&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">    getPageTitles(urls)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">function showOutLinks() &#123;</span><br><span class=\"line\">    var data = []</span><br><span class=\"line\"></span><br><span class=\"line\">    var urls = document.getElementsByTagName(&#x27;a&#x27;)</span><br><span class=\"line\">    for (url in urls) &#123;</span><br><span class=\"line\">        if (!urls[url].href || !urls[url].text) &#123;</span><br><span class=\"line\">            continue</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var href = urls[url].href + &quot;&quot;</span><br><span class=\"line\">        if (href.includes(&quot;localhost&quot;)) &#123;</span><br><span class=\"line\">            continue</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        var text = urls[url].text + &quot;&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">        var row = []</span><br><span class=\"line\">        row.push(text)</span><br><span class=\"line\">        row.push(href)</span><br><span class=\"line\"></span><br><span class=\"line\">        data.push(row)</span><br><span class=\"line\"></span><br><span class=\"line\">        // console.log(text + &quot; : &quot; + href)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // console.table(data)</span><br><span class=\"line\"></span><br><span class=\"line\">    for (row of data) &#123;</span><br><span class=\"line\">        console.log(row[0] + &quot; : &quot; + row[1])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// testGetPageTitle()</span><br><span class=\"line\">showOutLinks()</span><br></pre></td></tr></table></figure>\n","categories":["+ dev + skill"],"tags":["+ dev"]},{"title":"vim编辑器","url":"/2017/01/05/dev/dev-5-editor/editor-5-vim/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Sevel7/article/details/105189768\">vim简介</a></li>\n<li><a href=\"https://blog.csdn.net/hsforpyp/article/details/113833465\">vim入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhang_yu_ling/article/details/103777714\">vim进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ch_improve/article/details/88706714\">vim详解</a></li>\n<li><a href=\"https://blog.csdn.net/Liukairui/article/details/107392243\">vim精进</a></li>\n<li><a href=\"https://blog.csdn.net/Com_ma/article/details/78430836\">vim图解</a></li>\n<li><a href=\"https://yianwillis.github.io/vimcdoc/doc/\">vim文档</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><h3 id=\"Mode\"><a href=\"#Mode\" class=\"headerlink\" title=\"Mode\"></a>Mode</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangzeyuaaa/article/details/53404808\">vim之mode入门</a></li>\n<li><a href=\"https://blog.csdn.net/Mark_md/article/details/111040008\">vim之mode进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39147299/article/details/108972206\">vim之mode详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>普通模式：按<code>esc</code>进入</li>\n<li>编辑模式：普通模式时按<code>i</code>（在光标前插入）或<code>a</code>（在光标后插入）或<code>o</code>（在下一行插入）进入</li>\n<li>末行模式：普通模式时按<code>:</code>（冒号执行命令）或<code>/</code>（斜杠向前搜索）或<code>?</code>（问号向后搜索）进入</li>\n<li>可视模式：普通模式时按<code>v</code>（小v会选中一个字）或<code>V</code>（大V会选中一整行）进入</li>\n</ul>\n<h4 id=\"Edit-Mode\"><a href=\"#Edit-Mode\" class=\"headerlink\" title=\"Edit Mode\"></a>Edit Mode</h4><ul>\n<li><code>i</code>：进入插入编辑模式，在光标前插入</li>\n<li><code>I</code>：进入插入编辑模式，在行首（bol）处插入</li>\n<li><code>a</code>：进入追加编辑模式，在光标后追加</li>\n<li><code>A</code>：进入追加编辑模式，在行尾（eol）后追加</li>\n<li><code>o</code>：进入新行编辑模式，在下一行添加新行</li>\n<li><code>O</code>：进入新行编辑模式，在上一行添加新行</li>\n<li><code>r</code>：进入替换编辑模式，重复替换多个字（前面可接数字）</li>\n<li><code>R</code>：进入替换编辑模式，连续替换多个字（按<code>esc</code>结束）</li>\n</ul>\n<blockquote>\n<p><code>i</code> ：insert， <code>a</code> ：append， <code>o</code> ：open， <code>r</code> ：replace</p>\n</blockquote>\n<h4 id=\"Line-Mode\"><a href=\"#Line-Mode\" class=\"headerlink\" title=\"Line Mode\"></a>Line Mode</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013408061/article/details/77853130\">vim之末行模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/chenhuanyang/article/details/48680549\">vim之末行模式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hitlion2008/article/details/8799327\">vim之末行模式详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>:</code>（冒号）：执行命令</li>\n<li><code>/</code>（斜杠）：向前搜索</li>\n<li><code>?</code>（问号）：向后搜索</li>\n</ul>\n<h4 id=\"Visual-Mode\"><a href=\"#Visual-Mode\" class=\"headerlink\" title=\"Visual Mode\"></a>Visual Mode</h4><ul>\n<li><code>v</code>：进入可视模式，并选中一个字</li>\n<li><code>V</code>：进入可视模式，并选中一整行</li>\n</ul>\n<blockquote>\n<p><code>v</code> ：visual</p>\n</blockquote>\n<h3 id=\"Motion\"><a href=\"#Motion\" class=\"headerlink\" title=\"Motion\"></a>Motion</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/MrNoboday/article/details/105202740\">vim之motion入门</a></li>\n<li><a href=\"https://blog.csdn.net/techfield/article/details/84194232\">vim之motion进阶</a></li>\n<li><a href=\"https://yianwillis.github.io/vimcdoc/doc/motion.html\">vim之motion详解</a></li>\n</ul>\n</blockquote>\n<p>vim移动格式：[n]motion</p>\n<ul>\n<li><code>h</code>：左</li>\n<li><code>l</code>：右</li>\n<li><code>j</code>：下</li>\n<li><code>k</code>：上</li>\n<li><code>b</code>：词首</li>\n<li><code>e</code>：词尾</li>\n<li><code>w</code>：下一个词的词首</li>\n<li><code>0</code>：行首</li>\n<li><code>^</code>：行首（第一个非空白字符）</li>\n<li><code>$</code>：行尾</li>\n</ul>\n<blockquote>\n<p><code>b</code> ：begin， <code>e</code> ：end， <code>w</code> ：word</p>\n</blockquote>\n<h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zc21463071/article/details/106032116\">vim快捷键入门</a></li>\n<li><a href=\"https://blog.csdn.net/MyronCham/article/details/86746279\">vim快捷键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/mier9042/article/details/82981833\">vim快捷键详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32949893/article/details/113339607\">vim快捷键之leader键入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37280924/article/details/107753266\">vim快捷键之leader键进阶</a></li>\n<li><a href=\"https://blog.csdn.net/jiangkejkl/article/details/121634786\">vim快捷键之leader键详解</a></li>\n<li><a href=\"https://blog.csdn.net/cwtxyi/article/details/120013003\">vim快捷键之翻页</a></li>\n</ul>\n</blockquote>\n<h3 id=\"普通模式快捷键\"><a href=\"#普通模式快捷键\" class=\"headerlink\" title=\"普通模式快捷键\"></a>普通模式快捷键</h3><ul>\n<li>移到首行：gg</li>\n<li>移到尾行：G</li>\n<li>向上翻页（整页）：ctrl + b</li>\n<li>向下翻页（整页）：ctrl + f</li>\n<li>向上翻页（半页）：ctrl + u</li>\n<li>向下翻页（半页）：ctrl + d</li>\n<li>光标行居中：zz</li>\n<li>光标行置顶：zt</li>\n<li>光标行置底：zb</li>\n</ul>\n<blockquote>\n<p><code>b</code> ：backward， <code>f</code> ：forward， <code>u</code> ：up， <code>d</code> ：down， <code>t</code> ：top， <code>b</code> ：bottom</p>\n</blockquote>\n<h3 id=\"末行模式快捷键\"><a href=\"#末行模式快捷键\" class=\"headerlink\" title=\"末行模式快捷键\"></a>末行模式快捷键</h3><ul>\n<li>移动到行首：home、ctrl + b</li>\n<li>移动到行尾：end、ctrl + e</li>\n<li>移动到（上一个）词首：ctrl + arrow left</li>\n<li>移动到（下一个）词尾：ctrl + arrow right</li>\n<li>从光标前删除到行首：ctrl + u</li>\n<li>从光标前删除到词首：ctrl + w</li>\n</ul>\n<blockquote>\n<p><code>b</code> ：begin， <code>e</code> ：end， <code>w</code> ：word</p>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zuoyioo7/article/details/114273590\">vim命令缩写入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43808700/article/details/104350155\">vim命令缩写详解</a></li>\n<li><a href=\"https://blog.csdn.net/ningyanggege/article/details/104905996\">vim之命令g详解</a></li>\n<li><a href=\"https://blog.csdn.net/zkreats/article/details/52644906\">vim之执行外部命令入门</a></li>\n<li><a href=\"https://blog.csdn.net/songtianlun/article/details/107614363\">vim之执行外部命令详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Exit\"><a href=\"#Exit\" class=\"headerlink\" title=\"Exit\"></a>Exit</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43768851/article/details/121629428\">vim之exit入门</a></li>\n<li><a href=\"https://blog.csdn.net/abc1716975442/article/details/104407263\">vim之exit进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u013347451/article/details/107859580\">vim之exit详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>w</code>：保存不退出</li>\n<li><code>q</code>：不保存退出（如果有修改会提示保存）</li>\n<li><code>wq</code>：保存退出</li>\n<li><code>x</code>：保存退出（有修改时）或者退出（无修改时）</li>\n<li><code>w!</code>：强制保存不退出</li>\n<li><code>q!</code>：强制不保存退出</li>\n<li><code>wq!</code>：强制保存退出</li>\n</ul>\n<h2 id=\"Edit\"><a href=\"#Edit\" class=\"headerlink\" title=\"Edit\"></a>Edit</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46556293/article/details/124627889\">vim编辑命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/a3192048/article/details/88290444\">vim编辑之寄存器和剪切板详解</a></li>\n<li><a href=\"https://blog.csdn.net/guowake/article/details/2217086\">vim编辑之大小写转换</a></li>\n<li><a href=\"https://blog.csdn.net/ly890700/article/details/52662161\">vim编辑之撤销和重做</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39728909/article/details/112643802\">vim编辑之删除空白符</a></li>\n<li><a href=\"https://blog.csdn.net/JineD/article/details/106443814\">vim编辑之删除特殊行</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>全选（Select All）：ggVG</li>\n<li>删除（Delete）：</li>\n<li>剪切（Cut）：d[space|motion]、c[space|motion]</li>\n<li>复制（Copy）：y[space|motion]</li>\n<li>粘贴（Paste）：p（粘贴到光标后）、P（粘贴到光标前）、ctrl + v（编辑模式时）</li>\n<li>保存（Save）：w（末行模式时）</li>\n</ul>\n<blockquote>\n<p><code>d</code> ：delete， <code>c</code> ：change， <code>y</code> ：yank， <code>p</code> ：put</p>\n</blockquote>\n<h3 id=\"Skill\"><a href=\"#Skill\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><ul>\n<li>剪切行：[n]dd、[n]cc</li>\n<li>复制行：[n]yy</li>\n</ul>\n<h4 id=\"Cut\"><a href=\"#Cut\" class=\"headerlink\" title=\"Cut\"></a>Cut</h4><p>eoi：end of input（vim中普通模式输入时空格和箭头可以做会输入结束符，回车和TAB不行）</p>\n<p>vim命令格式1： <code>[n]cmd</code></p>\n<ul>\n<li><code>x</code>：删除多个字，会停留在普通模式，会存到寄存器</li>\n<li><code>s</code>：删除多个字，会进入编辑模式，会存到寄存器</li>\n</ul>\n<blockquote>\n<p><code>x</code> ：remove， <code>s</code> ：substitute</p>\n</blockquote>\n<p>vim命令格式2： <code>[n]cmd&lt;eoi&gt;</code> 或 <code>cmd[n]&lt;eoi&gt;</code></p>\n<ul>\n<li><code>d</code>：删除多个字，会停留在普通模式，会存到寄存器</li>\n<li><code>c</code>：修改多个字，会进入编辑模式，会存到寄存器</li>\n</ul>\n<blockquote>\n<p><code>d</code> ：delete， <code>c</code> ：change</p>\n</blockquote>\n<h3 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h3><ul>\n<li>转大写（UPPERCASE）：gU[space|motion]</li>\n<li>转小写（lowercase）：gu[space|motion]</li>\n<li>转标题（Capitalize）：</li>\n<li>转驼峰（camelCase）：</li>\n<li>转帕斯（PascalCase）：</li>\n<li>转蛇形（snake_case）：</li>\n<li>转连字（kebab-case）：</li>\n<li>转常量（CONST_CASE）：</li>\n</ul>\n<h3 id=\"Undo\"><a href=\"#Undo\" class=\"headerlink\" title=\"Undo\"></a>Undo</h3><p>撤销（Undo）：u</p>\n<h3 id=\"Redo\"><a href=\"#Redo\" class=\"headerlink\" title=\"Redo\"></a>Redo</h3><p>重做（Redo）：.（点号）、ctrl + r</p>\n<h2 id=\"Move\"><a href=\"#Move\" class=\"headerlink\" title=\"Move\"></a>Move</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/varyall/article/details/79220745\">vim移动详解</a></li>\n<li><a href=\"https://blog.csdn.net/riag/article/details/1964780\">vim移动之前进和后退</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>常规性移动：arrow、hjkl（普通模式时）</li>\n</ul>\n<h3 id=\"Skill-1\"><a href=\"#Skill-1\" class=\"headerlink\" title=\"Skill\"></a>Skill</h3><ul>\n<li>移动到首行：gg</li>\n<li>移动到尾行：G</li>\n<li>移动到行首：home、0、^</li>\n<li>移动到行尾：end、$</li>\n<li>移动到（上一个）词首：ctrl + arrow left、b</li>\n<li>移动到（下一个）词尾：ctrl + arrow right、e</li>\n<li>移动到下一个词首：w</li>\n</ul>\n<blockquote>\n<p><code>g</code> ：goto， <code>b</code> ：begin， <code>e</code> ：end</p>\n</blockquote>\n<h3 id=\"Backward\"><a href=\"#Backward\" class=\"headerlink\" title=\"Backward\"></a>Backward</h3><ul>\n<li>后退（Backward）：ctrl + o</li>\n</ul>\n<h3 id=\"Forward\"><a href=\"#Forward\" class=\"headerlink\" title=\"Forward\"></a>Forward</h3><ul>\n<li>前进（Forward）：ctrl + i</li>\n</ul>\n<h2 id=\"Select\"><a href=\"#Select\" class=\"headerlink\" title=\"Select\"></a>Select</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lcj_cjfykx/article/details/9091569\">vim选择详解</a></li>\n<li><a href=\"https://blog.csdn.net/lovedingd/article/details/116539727\">vim选择之全选</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><ul>\n<li>选择到行首：v^</li>\n<li>选择到行尾：v$</li>\n<li>选择字符（Char）：v + motion</li>\n<li>选择单词（Word）：v + motion</li>\n<li>选择一行（Line）：V</li>\n<li>选择一片（Area）：v + motion</li>\n</ul>\n<h3 id=\"Expand\"><a href=\"#Expand\" class=\"headerlink\" title=\"Expand\"></a>Expand</h3><ul>\n<li>扩展（Expand）选择：v + motion</li>\n</ul>\n<h3 id=\"Shrink\"><a href=\"#Shrink\" class=\"headerlink\" title=\"Shrink\"></a>Shrink</h3><ul>\n<li>收缩（Shrink）选择：v + motion</li>\n</ul>\n<h2 id=\"Find\"><a href=\"#Find\" class=\"headerlink\" title=\"Find\"></a>Find</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35624263/article/details/77181057\">vim查找入门</a></li>\n<li><a href=\"https://blog.csdn.net/dajiao_zi/article/details/130239607\">vim查找进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39834780/article/details/116890822\">vim查找详解</a></li>\n</ul>\n</blockquote>\n<p>vim查找格式： <code>/pattern</code> 和 <code>?pattern</code></p>\n<ul>\n<li><code>*</code>：快速正向查找一个单词</li>\n<li><code>#</code>：快速反向查找一个单词</li>\n<li><code>n</code>：搜索中的下一个</li>\n<li><code>N</code>：搜索中的上一个</li>\n</ul>\n<h3 id=\"Pattern\"><a href=\"#Pattern\" class=\"headerlink\" title=\"Pattern\"></a>Pattern</h3><blockquote>\n<ul>\n<li><a href=\"https://yianwillis.github.io/vimcdoc/doc/pattern.html\">vim之pattern详解</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/118265794\">vim之magic详解</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\|：匹配多个表达式</span><br><span class=\"line\">\\&lt;：匹配单词的开始位置</span><br><span class=\"line\">\\&gt;：匹配单词的结束位置</span><br><span class=\"line\">\\c：忽略大小写</span><br><span class=\"line\">\\C：匹配大小写</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Replace\"><a href=\"#Replace\" class=\"headerlink\" title=\"Replace\"></a>Replace</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rickzzz16/article/details/73290758\">vim替换入门</a></li>\n<li><a href=\"https://blog.csdn.net/cbaln0/article/details/87979056\">vim替换进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39955418/article/details/110373502\">vim替换详解</a></li>\n</ul>\n</blockquote>\n<p>vim替换格式： <code>[range]s/source/target/option</code></p>\n<h3 id=\"Range\"><a href=\"#Range\" class=\"headerlink\" title=\"Range\"></a>Range</h3><p>range的边界格式如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.：代表当前行</span><br><span class=\"line\">n：代表第n行</span><br><span class=\"line\">%：代表所有行</span><br><span class=\"line\">$：代表最后一行</span><br><span class=\"line\">/search-pattern/：代表下一个搜索结果所在的行</span><br><span class=\"line\">?backwards-search-pattern?：代表上一个搜索结果所在的行</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>ps：区间分隔符用逗号 <code>,</code> 或者分号 <code>;</code> 都可以的</p>\n</blockquote>\n<p>range是左闭右闭的，省去range使用光标所在的行，range的一边缺省使用光标所在的行代替那一边</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">%：所有行</span><br><span class=\"line\">1,3：第1到3行</span><br><span class=\"line\">3,$：第3行到最后一行</span><br><span class=\"line\">1,.：第1行到当前行</span><br><span class=\"line\">.,$：当前行到最后一行</span><br><span class=\"line\">1,：第1行到当前行</span><br><span class=\"line\">,$：当前行到最后一行</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Option\"><a href=\"#Option\" class=\"headerlink\" title=\"Option\"></a>Option</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">g：表示全局替换，将匹配到的所有项都替换掉，而不仅仅是第一个</span><br><span class=\"line\">c：表示每次替换前需要确认，即弹出一个界面供用户确认是否替换</span><br><span class=\"line\">e：表示没有匹配项时不显示错误</span><br><span class=\"line\">i：表示忽略大小写</span><br><span class=\"line\">I：表示区分大小写</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"More\"><a href=\"#More\" class=\"headerlink\" title=\"More\"></a>More</h2><h3 id=\"Read\"><a href=\"#Read\" class=\"headerlink\" title=\"Read\"></a>Read</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cscrazybing/article/details/48969183\">vim之用只读模式打开文件</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Save\"><a href=\"#Save\" class=\"headerlink\" title=\"Save\"></a>Save</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/deng529828/article/details/6031261\">vim之强制保存只读文件</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Diff\"><a href=\"#Diff\" class=\"headerlink\" title=\"Diff\"></a>Diff</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Zen_y/article/details/117774000\">vim之diff详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>:diffsplit</code>：比较两个文件（水平切分窗口）</li>\n<li><code>:vertical diffsplit</code> 比较两个文件（垂直切分窗口）</li>\n</ul>\n<h3 id=\"Grep\"><a href=\"#Grep\" class=\"headerlink\" title=\"Grep\"></a>Grep</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jiangkejkl/article/details/121422352\">vim之grep详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_47696151/article/details/117792656\">vim之set命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/fsdgrasdfg/article/details/112669344\">vim之set显示不可见字符</a></li>\n</ul>\n</blockquote>\n<h1 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jy692405180/article/details/79775125\">vim之Buffer、Window和Tab入门</a></li>\n<li><a href=\"https://blog.csdn.net/gaoyuan_zz/article/details/90812755\">vim之Buffer、Window和Tab详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_57943685/article/details/130547911\">vim之Buffer详解</a></li>\n<li><a href=\"https://lusing.blog.csdn.net/article/details/74943831\">vim之Window详解</a></li>\n<li><a href=\"https://blog.csdn.net/lusing/article/details/74973914\">vim之Tab详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>:split</code>：打开一个文件（水平切分窗口）</li>\n<li><code>:vsplit</code>：打开一个文件（垂直切分窗口）</li>\n<li><code>:sview</code>：用只读模式打开一个文件（水平切分窗口）</li>\n<li><code>:vertical sview</code> 用只读模式打开一个文件（垂直切分窗口）</li>\n<li><code>:new</code>：新建一个文件（水平切分窗口）</li>\n<li><code>:vnew</code>：新建一个文件（垂直切分窗口）</li>\n<li><code>:edit</code>：编辑一个文件（替换当前窗口）</li>\n</ul>\n<h2 id=\"Search\"><a href=\"#Search\" class=\"headerlink\" title=\"Search\"></a>Search</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/simple_the_best/article/details/103841147\">vim之模糊搜索详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_30603081/article/details/119348337\">vim搜索插件之Ctrlp</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43162745/article/details/88828817\">vim搜索插件之Leaderf</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33982670/article/details/88742016\">vim搜索插件之Fzf</a></li>\n<li><a href=\"https://blog.csdn.net/simple_the_best/article/details/103841147\">vim搜索插件之vim-clap</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Explore\"><a href=\"#Explore\" class=\"headerlink\" title=\"Explore\"></a>Explore</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37926734/article/details/124919260\">vim之目录导航详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37926734/article/details/124919260\">vim目录插件之Nerdtree</a></li>\n<li><a href=\"https://blog.csdn.net/niuiic/article/details/109158364\">vim目录插件之coc-explorer</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Outline\"><a href=\"#Outline\" class=\"headerlink\" title=\"Outline\"></a>Outline</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baidu_35679960/article/details/79111140\">vim标签插件之Taglist</a></li>\n<li><a href=\"https://blog.csdn.net/cromma/article/details/51277098\">vim标签插件之Tagbar</a></li>\n</ul>\n</blockquote>\n<p>Ctags：标签生成工具（是独立的程序，不是vim的插件）</p>\n<h1 id=\"Intellisense\"><a href=\"#Intellisense\" class=\"headerlink\" title=\"Intellisense\"></a>Intellisense</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011847345/article/details/111705950\">vim补全插件之Youcompleteme</a></li>\n<li><a href=\"https://blog.csdn.net/niuiic/article/details/109157414\">vim补全插件之coc</a></li>\n</ul>\n</blockquote>\n<p>lsp：language server plugin </p>\n<h1 id=\"Plugins\"><a href=\"#Plugins\" class=\"headerlink\" title=\"Plugins\"></a>Plugins</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_47329175/article/details/120377030\">vim插件入门</a></li>\n<li><a href=\"https://blog.csdn.net/Young824/article/details/123529084\">vim插件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010105424/article/details/115278143\">vim插件详解</a></li>\n<li><a href=\"https://www.zhihu.com/question/23590572\">vim插件之好用到爆的插件</a></li>\n<li><a href=\"https://www.zhihu.com/question/31934850\">vim插件之有名却过时的插件</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ dev + editor"],"tags":["+ dev"]},{"title":"git","url":"/2017/01/07/dev/dev-7-tools/tools-1-git/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://git-scm.com/book/zh/v2\">git文档</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoputao0903/article/details/23912561\">Git入门</a></li>\n<li><a href=\"https://blog.csdn.net/XH_jing/article/details/121900458\">Git进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qtiao/article/details/97783243\">Git详解</a></li>\n<li><a href=\"https://blog.csdn.net/freeking101/article/details/90289202\">Git精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43425487/category_9895272.html\">Git教程</a></li>\n<li><a href=\"https://blog.csdn.net/Codinglaoshi/article/details/128690666\">git之不常用的命令</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yzpbright/article/details/116144006\">git diff –staged与 git diff –cached有什么区别</a></li>\n<li><a href=\"https://blog.csdn.net/u010037020/article/details/81537809\">git stash和stage有什么区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44781409/article/details/107560533\">git reset、revert、rebase有什么区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51971452/article/details/113871247\">git restore、reset、revert有什么区别</a></li>\n<li><a href=\"https://blog.csdn.net/heart_mine/article/details/79424591\">git中working tree, index, commit详解</a></li>\n<li><a href=\"https://blog.csdn.net/boyzzy1995/article/details/128733516\">git pathspec详解</a></li>\n<li><a href=\"https://blog.csdn.net/cnzhaocc/article/details/39438059\">git revision详解</a></li>\n<li><a href=\"https://blog.csdn.net/aitazhixin/article/details/54089447\">git tree-ish详解</a></li>\n<li><a href=\"https://blog.csdn.net/Activity_Time/article/details/90550656\">git commit-id详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Area\"><a href=\"#Area\" class=\"headerlink\" title=\"Area\"></a>Area</h3><p>git分为三个区</p>\n<ul>\n<li>工作区：修改的东西会先保存在这个区域，git add操作后会并缓存到暂存区</li>\n<li>暂存区：待提交的东西保存在这个区域，git commit操作时会并打包到仓库区</li>\n<li>仓库区：归档的东西保存在这个区域</li>\n</ul>\n<h3 id=\"Name\"><a href=\"#Name\" class=\"headerlink\" title=\"Name\"></a>Name</h3><ul>\n<li>工作区：working area</li>\n<li>暂存区：stage area 也叫缓存区（cache area）</li>\n<li>仓库区：repository area</li>\n</ul>\n<blockquote>\n<p>git diff –staged 和 –cached 是一个意思<br>注意存在 git restore –staged 但不存在 git restore –cached</p>\n</blockquote>\n<h3 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h3><ul>\n<li>工作区：结构为working tree</li>\n<li>暂存区：结构为index tree</li>\n<li>仓库区：结构为commit tree</li>\n</ul>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HO1_K/article/details/121038247\">git config详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012757419/article/details/105614028\">git换行符详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Repository\"><a href=\"#Repository\" class=\"headerlink\" title=\"Repository\"></a>Repository</h1><h2 id=\"Clone\"><a href=\"#Clone\" class=\"headerlink\" title=\"Clone\"></a>Clone</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42672770/article/details/81317778\">git clone详解</a></li>\n<li><a href=\"https://blog.csdn.net/jilijo/article/details/119566455\">git init详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Remote\"><a href=\"#Remote\" class=\"headerlink\" title=\"Remote\"></a>Remote</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33210042/article/details/119730978\">git remote入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38085855/article/details/82684167\">git remote详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44863237/article/details/130116543\">git添加多个远程仓库入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012022003/article/details/53734730\">git添加多个远程仓库进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yangyangrenren/article/details/121133338\">git添加多个远程仓库详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Submodule\"><a href=\"#Submodule\" class=\"headerlink\" title=\"Submodule\"></a>Submodule</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/guotianqing/article/details/82391665\">git submodule入门</a></li>\n<li><a href=\"https://blog.csdn.net/Java0258/article/details/108532507\">git submodule进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wkyseo/article/details/81589477\">git submodule详解</a></li>\n<li><a href=\"https://blog.csdn.net/tyustli/article/details/129460567\">git 添加子模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/Lee_queenie/article/details/127386151\">git 删除子模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/dongguanghuiyin/article/details/78792992\">git 重新添加子模块详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Branch\"><a href=\"#Branch\" class=\"headerlink\" title=\"Branch\"></a>Branch</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chaogu94/article/details/111057918\">git branch详解</a></li>\n<li><a href=\"https://blog.csdn.net/kingyc123456789/article/details/108683676\">git checkout（切换分支）详解</a></li>\n<li><a href=\"https://blog.csdn.net/zxlyx/article/details/124218646\">git switch详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010665216/article/details/129736023\">git 删除分支详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_49343190/article/details/121924241\">git 重命名分支详解</a></li>\n<li><a href=\"https://blog.csdn.net/lmj19851117/article/details/79669276\">git分支之Bug分支和Feature分支</a></li>\n</ul>\n</blockquote>\n<p>推荐用git switch代替git checkout来切换分支</p>\n<h1 id=\"Tag\"><a href=\"#Tag\" class=\"headerlink\" title=\"Tag\"></a>Tag</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jdsjlzx/article/details/98654951\">git tag详解</a></li>\n<li><a href=\"https://blog.csdn.net/i_dont_know_a/article/details/90202674\">git 删除标签详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Change\"><a href=\"#Change\" class=\"headerlink\" title=\"Change\"></a>Change</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44567318/article/details/119701438\">git status详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39505245/article/details/119899171\">git diff详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_61502213/article/details/120610030\">git add详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42780289/article/details/98353792\">git rm详解</a></li>\n<li><a href=\"https://blog.csdn.net/yan3013216087/article/details/103136868\">git mv详解</a></li>\n<li><a href=\"https://blog.csdn.net/raoxiaoya/article/details/111321583\">git checkout（检出文件）详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20817327/article/details/116898718\">git restore详解</a></li>\n<li><a href=\"https://blog.csdn.net/stone_yw/article/details/80795669\">git stash详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44815943/article/details/117476879\">git ls-files详解</a></li>\n<li><a href=\"https://blog.csdn.net/littlehaes/article/details/106960889\">git ls-tree详解</a></li>\n</ul>\n</blockquote>\n<p>推荐用git restore代替git checkout来还原变更</p>\n<h1 id=\"Commit\"><a href=\"#Commit\" class=\"headerlink\" title=\"Commit\"></a>Commit</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40994734/article/details/128694274\">git commit详解</a></li>\n<li><a href=\"https://blog.csdn.net/asdfgh0077/article/details/103984900\">git commit signoff详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36125138/article/details/118606548\">git revert和reset详解</a></li>\n<li><a href=\"https://blog.csdn.net/guyue35/article/details/82703065\">git revert详解</a></li>\n<li><a href=\"https://blog.csdn.net/zts_zts/article/details/115220786\">git reset详解</a></li>\n<li><a href=\"https://blog.csdn.net/carolzhang8406/article/details/49761927\">git reset模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44544859/article/details/122325272\">git reset模式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lishuoboy/article/details/112066463\">git reset模式详解</a></li>\n</ul>\n</blockquote>\n<p>git revert：丢弃已提交记录的变更，并生成新的提交<br>git reset：丢弃已提交记录的变更，不生成新的提交</p>\n<blockquote>\n<p>注意：如果提交已经推送到仓库并被别人同步了，就不能使用git reset，否则会造成代码丢失</p>\n</blockquote>\n<h1 id=\"Sync\"><a href=\"#Sync\" class=\"headerlink\" title=\"Sync\"></a>Sync</h1><h2 id=\"Fetch\"><a href=\"#Fetch\" class=\"headerlink\" title=\"Fetch\"></a>Fetch</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42780289/article/details/98049574\">git fetch详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Merge\"><a href=\"#Merge\" class=\"headerlink\" title=\"Merge\"></a>Merge</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42780289/article/details/97945300\">git merge入门</a></li>\n<li><a href=\"https://blog.csdn.net/chaiyu2002/article/details/81020370\">git merge进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28107929/article/details/104555680\">git merge详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42310154/article/details/119004977\">git rebase入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42780289/article/details/98078717\">git rebase进阶</a></li>\n<li><a href=\"https://blog.csdn.net/small_white_123/article/details/121563248\">git rebase详解</a></li>\n<li><a href=\"https://blog.csdn.net/muzidigbig/article/details/122321393\">git cherry-pick详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43201350/article/details/125757531\">git显示冲突的文件</a></li>\n<li><a href=\"https://blog.csdn.net/zengjianze/article/details/105627349\">git查找冲突的文件</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44297716/article/details/116117492\">git查看未合并的分支</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Pull\"><a href=\"#Pull\" class=\"headerlink\" title=\"Pull\"></a>Pull</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BUCTOJ/article/details/89879619\">git pull详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Push\"><a href=\"#Push\" class=\"headerlink\" title=\"Push\"></a>Push</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhs260133172/article/details/113882525\">git push入门</a></li>\n<li><a href=\"https://blog.csdn.net/yzpbright/article/details/115574130\">git push进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40816738/article/details/105109944\">git push详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Upstream\"><a href=\"#Upstream\" class=\"headerlink\" title=\"Upstream\"></a>Upstream</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xixihahalelehehe/article/details/129158399\">git upstream入门</a></li>\n<li><a href=\"https://blog.csdn.net/ken1583096683/article/details/83021257\">git upstream进阶</a></li>\n<li><a href=\"https://blog.csdn.net/cllcsy/article/details/122136524\">git upstream详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Fork\"><a href=\"#Fork\" class=\"headerlink\" title=\"Fork\"></a>Fork</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whutshiliu/article/details/112504520\">git fork保持同步入门</a></li>\n<li><a href=\"https://blog.csdn.net/wakarimasu/article/details/109152932\">git fork保持同步进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43207025/article/details/106875614\">git fork保持同步详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/daguanjia11/article/details/73823617\">git log入门</a></li>\n<li><a href=\"https://blog.csdn.net/albertsh/article/details/108439423\">git log进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u011106915/article/details/105836289\">git log详解</a></li>\n<li><a href=\"https://blog.csdn.net/jjlovefj/article/details/86476925\">git log精进</a></li>\n<li><a href=\"https://blog.csdn.net/ystyaoshengting/article/details/113781167\">git show详解</a></li>\n<li><a href=\"https://blog.csdn.net/wq6ylg08/article/details/88909813\">git blame详解</a></li>\n<li><a href=\"https://blog.csdn.net/chaiyu2002/article/details/81773041\">git reflog详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhangphil/article/details/79964751\">git log之查看最近的提交记录</a></li>\n<li><a href=\"https://blog.csdn.net/asdfgh0077/article/details/103453994\">git log之搜索指定的变更记录</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><p>git prune：清除所有不可达的对象<br>git clean：清除所有未追踪的对象</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sgs595595/article/details/72480346\">git prune详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44137575/article/details/108142088\">git clean详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012835970/article/details/117948368\">git 清除所有提交记录并成为一个新的干净仓库</a></li>\n<li><a href=\"https://blog.csdn.net/asdfgh0077/article/details/106939756\">git 列出仓库中的文件</a></li>\n<li><a href=\"https://www.git-tower.com/learn/git/faq/restoring-deleted-files/\">git 恢复已删除的文件</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + tools"],"tags":["+ dev"]},{"title":"maven","url":"/2017/01/07/dev/dev-7-tools/tools-3-maven/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://mvnrepository.com/\">maven官方仓库</a></li>\n<li><a href=\"https://book.huihoo.com/maven-the-definitive-guide/index.html\">maven文档</a></li>\n<li><a href=\"https://blog.csdn.net/hcmony/article/details/56013655\">maven入门</a></li>\n<li><a href=\"https://blog.csdn.net/dghkgjlh/article/details/113471655\">maven进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43410878/article/details/123812267\">maven详解</a></li>\n<li><a href=\"https://blog.csdn.net/layonly/article/details/120625336\">maven精进</a></li>\n<li><a href=\"https://blog.csdn.net/vhfdff/article/details/89048334\">maven项目结构详解</a></li>\n<li><a href=\"https://blog.csdn.net/cx1110162/article/details/78297654\">maven之archetype详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45542380/article/details/110483615\">idea中使用maven入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_47346664/article/details/120426807\">idea中使用maven详解</a></li>\n<li><a href=\"https://blog.csdn.net/GyaoG/article/details/120599475\">idea中使用maven插件</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Pom\"><a href=\"#Pom\" class=\"headerlink\" title=\"Pom\"></a>Pom</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_47061482/article/details/109817802\">maven之pom.xml入门</a></li>\n<li><a href=\"https://blog.csdn.net/jk418756/article/details/87917776\">maven之pom.xml进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42601136/article/details/121806064\">maven之pom.xml详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Properties\"><a href=\"#Properties\" class=\"headerlink\" title=\"Properties\"></a>Properties</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fzhu008/article/details/105377087\">maven之Properties入门</a></li>\n<li><a href=\"https://blog.csdn.net/DaiH09/article/details/113933087\">maven之Properties进阶</a></li>\n<li><a href=\"https://blog.csdn.net/moonpure/article/details/82380456\">maven之Properties详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Dependency\"><a href=\"#Dependency\" class=\"headerlink\" title=\"Dependency\"></a>Dependency</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wohaqiyi/article/details/119322984\">maven依赖之版本号详解</a></li>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/108243496\">maven依赖之snapshot详解</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/122350988\">maven依赖之scope详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010979642/article/details/108534860\">maven依赖之dependencies与dependencyManagement的区别</a></li>\n<li><a href=\"https://blog.csdn.net/csdn_mrsongyang/article/details/118580215\">maven依赖冲突解决入门</a></li>\n<li><a href=\"https://blog.csdn.net/u010786653/article/details/119759060\">maven依赖冲突解决进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kingwinstar/article/details/106916140\">maven依赖冲突解决详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source\"></a>Source</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/russle/article/details/80786221\">maven编译之source和target入门</a></li>\n<li><a href=\"https://blog.csdn.net/gao_zhennan/article/details/124232142\">maven编译之source和target详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w727655308/article/details/121586559\">maven资源之resource入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011781521/article/details/79052725\">maven资源之resource详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Plugin\"><a href=\"#Plugin\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liupeifeng3514/article/details/80236827\">maven插件之plugins和pluginManagement的区别</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Package\"><a href=\"#Package\" class=\"headerlink\" title=\"Package\"></a>Package</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42873554/article/details/107946927\">maven生命周期入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014241071/article/details/81668312\">maven生命周期进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40017062/article/details/122658297\">maven生命周期详解</a></li>\n<li><a href=\"https://blog.csdn.net/cyan20115/article/details/106551162\">mvn clean入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012683399/article/details/96132763\">mvn clean详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhaojianting/article/details/80324533\">mvn package入门</a></li>\n<li><a href=\"https://blog.csdn.net/sdrfengmi/article/details/87191944\">mvn package详解</a></li>\n<li><a href=\"https://blog.csdn.net/sky_jiangcheng/article/details/78223308\">mvn install入门</a></li>\n<li><a href=\"https://blog.csdn.net/DaiH09/article/details/110086415\">mvn install详解</a></li>\n<li><a href=\"https://blog.csdn.net/lisheng19870305/article/details/103506063\">mvn deploy入门</a></li>\n<li><a href=\"https://blog.csdn.net/djrm11/article/details/121340829\">mvn deploy详解</a></li>\n<li><a href=\"https://blog.csdn.net/arkblue/article/details/50974957\">mvn skipTests详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Resource-1\"><a href=\"#Resource-1\" class=\"headerlink\" title=\"Resource\"></a>Resource</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_30407099/article/details/99811538\">maven打包额外的资源文件</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39940205/article/details/80517244\">maven打包额外的配置文件</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Dependency-1\"><a href=\"#Dependency-1\" class=\"headerlink\" title=\"Dependency\"></a>Dependency</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014163312/article/details/127330574\">maven打包依赖包入门</a></li>\n<li><a href=\"https://blog.csdn.net/sgyuanshi/article/details/98115890\">maven打包依赖包详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Plugin-1\"><a href=\"#Plugin-1\" class=\"headerlink\" title=\"Plugin\"></a>Plugin</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/calm_encode/article/details/103931537\">maven打包插件详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22222499/article/details/92800859\">maven打包插件之assembly和shade对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/cool0/article/details/107625828\">maven打包插件之assembly和shade对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014163312/article/details/104854590\">maven打包插件之依赖插件maven-dependency-plugin详解</a></li>\n<li><a href=\"https://blog.csdn.net/Java_1710/article/details/120992614\">maven打包插件之编译插件maven-compiler-plugin详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Module\"><a href=\"#Module\" class=\"headerlink\" title=\"Module\"></a>Module</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BUCTOJ/article/details/108851118\">maven模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38249409/article/details/129369551\">maven模块之继承和聚合详解</a></li>\n<li><a href=\"https://blog.csdn.net/wb1046329430/article/details/119775973\">maven创建子模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/allway2/article/details/124840866\">maven多模块创建入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41010294/article/details/105823296\">maven多模块创建进阶</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_41885330/article/details/81875395\">maven多模块创建详解</a></li>\n<li><a href=\"https://blog.csdn.net/zxh1991811/article/details/113368918\">maven多模块打包入门</a></li>\n<li><a href=\"https://blog.csdn.net/DHCliaozheng/article/details/105555842\">maven多模块打包进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39546312/article/details/110219578\">maven多模块打包详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44695727/article/details/109154845\">maven多模块之Spring扫描</a></li>\n<li><a href=\"https://blog.csdn.net/J080624/article/details/81067587\">maven模块之Module和Project对比</a></li>\n<li><a href=\"https://blog.csdn.net/ailifang/article/details/114667553\">maven模块之Pom和Project对比</a></li>\n<li><a href=\"https://blog.csdn.net/isea533/article/details/85065086\">maven模块之Module和Git Submodule对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Setting\"><a href=\"#Setting\" class=\"headerlink\" title=\"Setting\"></a>Setting</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_47061482/article/details/109816261\">maven之settings.xml入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43740223/article/details/114253461\">maven之settings.xml进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zxd1435513775/article/details/99294705\">maven之settings.xml详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Repository\"><a href=\"#Repository\" class=\"headerlink\" title=\"Repository\"></a>Repository</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq32933432/article/details/104440175\">maven之Repository详解</a></li>\n<li><a href=\"https://blog.csdn.net/sayyy/article/details/80451531\">maven之Repository多仓库入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44730056/article/details/89504198\">maven之Repository多仓库进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ceo158/article/details/120244422\">maven之Repository多仓库详解</a></li>\n<li><a href=\"https://blog.csdn.net/abu935009066/article/details/124206273\">maven之Repository优先级入门</a></li>\n<li><a href=\"https://blog.csdn.net/wwd0501/article/details/92830558\">maven之Repository优先级进阶</a></li>\n<li><a href=\"https://blog.csdn.net/taugast/article/details/113787531\">maven之Repository优先级详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Profile\"><a href=\"#Profile\" class=\"headerlink\" title=\"Profile\"></a>Profile</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zy103118/article/details/79879879\">maven之Profile入门</a></li>\n<li><a href=\"https://blog.csdn.net/java_collect/article/details/83870215\">maven之Profile进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29235677/article/details/118528996\">maven之Profile详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/adparking/article/details/114692211\">maven之mvn和mvnw的关系</a></li>\n<li><a href=\"https://blog.csdn.net/xfg0218/article/details/80549988\">maven之mvn入门</a></li>\n<li><a href=\"https://blog.csdn.net/good_good_xiu/article/details/116740333\">maven之mvn详解</a></li>\n<li><a href=\"https://blog.csdn.net/nthack5730/article/details/82385124\">maven之mvn help命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/Deschampszzzz/article/details/114492653\">maven之mvn dependency命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/bawcwchen/article/details/80298173\">maven之mvn archetype命令详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Cache\"><a href=\"#Cache\" class=\"headerlink\" title=\"Cache\"></a>Cache</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37156624/article/details/117928547\">maven之cache详解</a></li>\n<li><a href=\"https://blog.csdn.net/love_right/article/details/106074575\">idea之maven刷新（refresh）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35502206/article/details/113850165\">idea之maven重导入（reimport）</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + tools"],"tags":["+ dev"]},{"title":"docker","url":"/2017/01/07/dev/dev-7-tools/tools-5-docker/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1>","categories":["+ dev + tools"],"tags":["+ dev"]},{"title":"charset","url":"/2017/01/09/dev/dev-9-topic/topic-1-charset/","content":"<h1 id=\"Charset\"><a href=\"#Charset\" class=\"headerlink\" title=\"Charset\"></a>Charset</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yueyueniaolzp/article/details/82178954\">计算机基础之ASCII码对照表</a></li>\n<li><a href=\"https://blog.csdn.net/wucz122140729/article/details/105682875\">计算机基础之控制字符（control）和可打印（print）字符</a></li>\n<li><a href=\"https://blog.csdn.net/booksyhay/article/details/27169223\">计算机基础之空白符（blank）与空格符（space）的区别</a></li>\n</ul>\n</blockquote>\n<p>blank：包含空格符、水平制表符<br>space：包含空格符、回车符、换行符、换页符、水平制表符、垂直制表符<br>empty：无字符</p>\n<h2 id=\"Codec\"><a href=\"#Codec\" class=\"headerlink\" title=\"Codec\"></a>Codec</h2><p>ascii ansi unicode utf-8 gbk gb2312 gb18030</p>\n<h1 id=\"Mark\"><a href=\"#Mark\" class=\"headerlink\" title=\"Mark\"></a>Mark</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_30279751/article/details/95565111\">计算机基础之键盘上的特殊标点符号</a></li>\n<li><a href=\"https://blog.csdn.net/muzihuaner/article/details/105284399\">计算机基础之编程需注意的标点符号</a></li>\n<li><a href=\"https://blog.csdn.net/finewings/article/details/9064543\">计算机基础之标点符号中英文对照表</a></li>\n<li><a href=\"https://blog.csdn.net/XianRenShan/article/details/76390365\">计算机基础之半角符号与全角符号简介</a></li>\n<li><a href=\"https://blog.csdn.net/terrychinaz/article/details/113793477\">计算机基础之半角符号与全角符号入门</a></li>\n<li><a href=\"https://blog.csdn.net/someday1314/article/details/69934312\">计算机基础之半角符号与全角符号进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46419373/article/details/120434022\">计算机基础之半角符号与全角符号详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34802028/article/details/105643108\">计算机基础之半角符号与全角符号精进</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Language\"><a href=\"#Language\" class=\"headerlink\" title=\"Language\"></a>Language</h2><h3 id=\"Chinese\"><a href=\"#Chinese\" class=\"headerlink\" title=\"Chinese\"></a>Chinese</h3><blockquote>\n<ul>\n<li><a href=\"https://zh-style-guide.readthedocs.io/zh_CN/latest/%E6%A0%87%E7%82%B9%E7%AC%A6%E5%8F%B7/%E5%B8%B8%E7%94%A8%E4%B8%AD%E6%96%87%E6%A0%87%E7%82%B9%E7%AC%A6%E5%8F%B7.html\">常用中文标点符号详解</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/153256588\">连字符和破折号的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"English\"><a href=\"#English\" class=\"headerlink\" title=\"English\"></a>English</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/finewings/article/details/9064543\">常见的标点符号英文读法入门</a></li>\n<li><a href=\"https://blog.csdn.net/huapenguag/article/details/83412034\">常见的标点符号英文读法详解</a></li>\n<li><a href=\"https://blog.csdn.net/u011537073/article/details/87930774\">常见的数学符号参考手册大全</a></li>\n<li><a href=\"https://blog.csdn.net/liuchuo/article/details/104013635\">常见的数学符号英文读法入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30536513/article/details/99501785\">常见的数学符号英文读法详解</a></li>\n<li><a href=\"https://blog.csdn.net/wanjiac/article/details/108654201\">常见的数学公式英文读法入门</a></li>\n<li><a href=\"https://blog.csdn.net/qwertyupoiuytr/article/details/53997703\">常见的数学公式英文读法详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h2><h3 id=\"特殊\"><a href=\"#特殊\" class=\"headerlink\" title=\"特殊\"></a>特殊</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文省略号（……） 英文间距符（^）</span><br><span class=\"line\">中文货币符（￥） 英文货币符（$）</span><br><span class=\"line\">中文井号符（#） 英文井号符（#）</span><br><span class=\"line\">中文百分号（%） 中文百分号（%）</span><br><span class=\"line\">中文标记符（@） 英文标记符（@）</span><br><span class=\"line\">中文引用符（&amp;） 英文引用符（&amp;）</span><br><span class=\"line\">中文竖线符（|） 英文竖线符（|）</span><br><span class=\"line\">中文感叹号（！） 英文感叹号（!）</span><br><span class=\"line\">中文疑问号（？） 英文文疑问号（?）</span><br><span class=\"line\">中文六星号（*） 中文六星号（*）</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>^</code> 代表开始， <code>$</code> 代表结束<br><code>$</code> 代表取值， <code>#</code> 代表运算， <code>%</code> 代表指令<br><code>@</code> 代表标记， <code>&amp;</code> 代表引用<br><code>&amp;</code> 代表逻辑与， <code>|</code> 代表逻辑或， <code>!</code> 代表逻辑非<br><code>?</code> 代表占位， <code>*</code> 代表通配</p>\n</blockquote>\n<blockquote>\n<p>正则表达式模糊匹配规则<br><code>.</code> 代表匹配任意字符<br><code>?</code> 代表匹配字符或者表达式0次或1次<br><code>*</code> 代表匹配字符或者表达式0次或多次<br><code>+</code> 代表匹配字符或者表达式1次或多次</p>\n</blockquote>\n<blockquote>\n<p>数据库模糊匹配规则<br><code>_</code> 代表必须匹配1个字符<br><code>%</code> 代表匹配0个或多个字符</p>\n</blockquote>\n<h3 id=\"分隔\"><a href=\"#分隔\" class=\"headerlink\" title=\"分隔\"></a>分隔</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文逗号（，） 英文逗号（,）</span><br><span class=\"line\">中文句号（。） 英文句号（.）</span><br><span class=\"line\">中文分号（；） 英文分号（;）</span><br><span class=\"line\">中文冒号（：） 英文冒号（:）</span><br><span class=\"line\">中文顿号（/） 英文正斜杠（/）</span><br><span class=\"line\">中文顿号（、） 英文反斜杠（\\）</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>,</code> 是子句分隔符， <code>.</code> 是整句分隔符<br><code>;</code> 是条目分隔符， <code>:</code> 是键值分隔符， <code>/</code> 是路径分隔符<br><code>/</code> 是注释符， <code>\\</code> 是转义符</p>\n</blockquote>\n<blockquote>\n<p>ps：搜狗输入法中文输入 <code>正斜杠</code> 时默认输出 <code>顿号</code> ，如果要输出 <code>正斜杠</code> 就需要在常用设置里 <code>自定义标点符号</code></p>\n</blockquote>\n<h3 id=\"连接\"><a href=\"#连接\" class=\"headerlink\" title=\"连接\"></a>连接</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文连字符（-） 英文连字符（-）</span><br><span class=\"line\">中文破折号（_） 英文下划线（_）</span><br><span class=\"line\">中文波浪线（~） 英文波浪线（~）</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><code>-</code> 是用来连接 <code>组合</code> 里的不同 <code>分类</code> 的<br><code>_</code> 是用来连接 <code>整体</code> 里的不同 <code>部分</code> 的<br><code>~</code> 是用来连接 <code>范围</code> 里的高低 <code>两端</code> 的</p>\n</blockquote>\n<blockquote>\n<p>ps：搜狗输入法中文输入 <code>下划线</code> 时默认输出 <code>破折号</code> ，如果要输出 <code>下划线</code> 就需要在常用设置里 <code>自定义标点符号</code></p>\n</blockquote>\n<h3 id=\"包裹\"><a href=\"#包裹\" class=\"headerlink\" title=\"包裹\"></a>包裹</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文单引号（‘） 英文单引号（&#x27;）</span><br><span class=\"line\">中文双引号（“） 英文双引号（&quot;）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"强调\"><a href=\"#强调\" class=\"headerlink\" title=\"强调\"></a>强调</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文反引号（·） 英文反引号（`）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"括号\"><a href=\"#括号\" class=\"headerlink\" title=\"括号\"></a>括号</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文书名号（《》） 英文尖括号（&lt;&gt;）</span><br><span class=\"line\">中文圆括号（（）） 英文圆括号（()）</span><br><span class=\"line\">中文方括号（【】） 英文方括号（[]）</span><br><span class=\"line\">中文花括号（&#123;&#125;） 英文花括号（&#123;&#125;）</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"运算\"><a href=\"#运算\" class=\"headerlink\" title=\"运算\"></a>运算</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">中文加号（+） 英文加号（+）</span><br><span class=\"line\">中文减号（-） 英文减号（-）</span><br><span class=\"line\">中文乘号（*） 英文乘号（*）</span><br><span class=\"line\">中文除号（/） 英文除号（/）</span><br><span class=\"line\">中文余号（%） 英文余号（%）</span><br><span class=\"line\">中文等号（=） 英文等号（=）</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Difference\"><a href=\"#Difference\" class=\"headerlink\" title=\"Difference\"></a>Difference</h2><p>中英文输入法的标点符号差异对比技巧如下</p>\n<ol>\n<li>先看形状的不同</li>\n<li>再看宽度的不同</li>\n</ol>\n<blockquote>\n<p>中文输入法默认是全角，占2个字符宽度<br>英文输入法默认是半角，占1个字符宽度</p>\n</blockquote>\n<p>中英文输入法的标点符号差异对比总结如下</p>\n<ul>\n<li>逗号</li>\n<li>句号</li>\n<li>分号</li>\n<li>冒号</li>\n<li>感叹号</li>\n<li>疑问号</li>\n<li>单引号</li>\n<li>双引号</li>\n<li>反引号</li>\n<li>各种括号</li>\n</ul>\n<h1 id=\"Char\"><a href=\"#Char\" class=\"headerlink\" title=\"Char\"></a>Char</h1><h2 id=\"斜杠\"><a href=\"#斜杠\" class=\"headerlink\" title=\"斜杠\"></a>斜杠</h2><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/wangboqi/p/7461819.html\">正斜杠（&#x2F;）和反斜杠（\\）的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"正斜杠\"><a href=\"#正斜杠\" class=\"headerlink\" title=\"正斜杠\"></a>正斜杠</h3><p>正斜杠（&#x2F;）：文件和url的路径分隔符</p>\n<h3 id=\"反斜杠\"><a href=\"#反斜杠\" class=\"headerlink\" title=\"反斜杠\"></a>反斜杠</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43641811/article/details/106166988\">java字符串转义异常</a></li>\n<li><a href=\"https://blog.csdn.net/feifuzeng/article/details/75007232\">java正则表达式转义异常</a></li>\n</ul>\n</blockquote>\n<p>反斜杠（\\）：编程语言里面的转义符</p>\n<h4 id=\"字符串\"><a href=\"#字符串\" class=\"headerlink\" title=\"字符串\"></a>字符串</h4><h5 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h5><p>报异常 Illegal escape character</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;123\\t\\m&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Main.java:<span class=\"number\">3</span>: error: illegal escape character</span><br><span class=\"line\">\t\tSystem.out.println(<span class=\"string\">&quot;123\\t\\m&quot;</span>);</span><br><span class=\"line\">\t\t                          ^</span><br><span class=\"line\"><span class=\"number\">1</span> error</span><br><span class=\"line\">Error: Could not find or load main <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h5><p>无异常 不吃掉反斜杠</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;123\\t\\m&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">123</span>\t\\m</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h5><p>无异常 会吃掉反斜杠</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">&quot;123\\t\\m&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">123</span> m</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h4><h5 id=\"java-1\"><a href=\"#java-1\" class=\"headerlink\" title=\"java\"></a>java</h5><p>报异常 unsupported escape sequence </p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.regex.Pattern;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t    <span class=\"type\">Pattern</span> <span class=\"variable\">p</span> <span class=\"operator\">=</span> Pattern.compile(<span class=\"string\">&quot;123\\\\t\\\\m&quot;</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread <span class=\"string\">&quot;main&quot;</span> java.util.regex.PatternSyntaxException: Illegal/unsupported escape sequence near index <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"number\">123</span>\\t\\m</span><br><span class=\"line\">      ^</span><br><span class=\"line\">\tat java.util.regex.Pattern.error(Pattern.java:<span class=\"number\">1955</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.escape(Pattern.java:<span class=\"number\">2471</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.atom(Pattern.java:<span class=\"number\">2198</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.sequence(Pattern.java:<span class=\"number\">2130</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.expr(Pattern.java:<span class=\"number\">1996</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.compile(Pattern.java:<span class=\"number\">1696</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.&lt;init&gt;(Pattern.java:<span class=\"number\">1351</span>)</span><br><span class=\"line\">\tat java.util.regex.Pattern.compile(Pattern.java:<span class=\"number\">1028</span>)</span><br><span class=\"line\">\tat Main.main(Main.java:<span class=\"number\">5</span>)</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"python-1\"><a href=\"#python-1\" class=\"headerlink\" title=\"python\"></a>python</h5><p>报异常 bad escape</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\">re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;123\\t\\m&quot;</span>)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">Traceback (most recent call last):</span><br><span class=\"line\">  File <span class=\"string\">&quot;.code.tio&quot;</span>, line <span class=\"number\">2</span>, <span class=\"keyword\">in</span> &lt;module&gt;</span><br><span class=\"line\">    re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;123\\t\\m&quot;</span>)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/re.py&quot;</span>, line <span class=\"number\">233</span>, <span class=\"keyword\">in</span> <span class=\"built_in\">compile</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> _<span class=\"built_in\">compile</span>(pattern, flags)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/re.py&quot;</span>, line <span class=\"number\">301</span>, <span class=\"keyword\">in</span> _<span class=\"built_in\">compile</span></span><br><span class=\"line\">    p = sre_compile.<span class=\"built_in\">compile</span>(pattern, flags)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/sre_compile.py&quot;</span>, line <span class=\"number\">562</span>, <span class=\"keyword\">in</span> <span class=\"built_in\">compile</span></span><br><span class=\"line\">    p = sre_parse.parse(p, flags)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/sre_parse.py&quot;</span>, line <span class=\"number\">855</span>, <span class=\"keyword\">in</span> parse</span><br><span class=\"line\">    p = _parse_sub(source, pattern, flags &amp; SRE_FLAG_VERBOSE, <span class=\"number\">0</span>)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/sre_parse.py&quot;</span>, line <span class=\"number\">416</span>, <span class=\"keyword\">in</span> _parse_sub</span><br><span class=\"line\">    <span class=\"keyword\">not</span> nested <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> items))</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/sre_parse.py&quot;</span>, line <span class=\"number\">502</span>, <span class=\"keyword\">in</span> _parse</span><br><span class=\"line\">    code = _escape(source, this, state)</span><br><span class=\"line\">  File <span class=\"string\">&quot;/usr/lib64/python3.6/sre_parse.py&quot;</span>, line <span class=\"number\">401</span>, <span class=\"keyword\">in</span> _escape</span><br><span class=\"line\">    <span class=\"keyword\">raise</span> source.error(<span class=\"string\">&quot;bad escape %s&quot;</span> % escape, <span class=\"built_in\">len</span>(escape))</span><br><span class=\"line\">sre_constants.error: bad escape \\m at position <span class=\"number\">5</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"javascript-1\"><a href=\"#javascript-1\" class=\"headerlink\" title=\"javascript\"></a>javascript</h5><p>无异常 会吃掉反斜杠</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> re = <span class=\"regexp\">/123\\t\\m/</span></span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(re.<span class=\"title function_\">test</span>(<span class=\"string\">&quot;123\\tm&quot;</span>))</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"operator","url":"/2017/01/09/dev/dev-9-topic/topic-11-operator/","content":"<h1 id=\"Operator\"><a href=\"#Operator\" class=\"headerlink\" title=\"Operator\"></a>Operator</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Sun_zhihe/article/details/107207027\">运算符分类详解</a></li>\n</ul>\n</blockquote>\n<p>运算符分类</p>\n<ul>\n<li>赋值运算符：赋值（&#x3D;）</li>\n<li>算术运算符：加（+）、减（-）、乘（*）、除（&#x2F;）、取模（%）、指数（**）、阶乘（）</li>\n<li>比较运算符：等于（&#x3D;&#x3D;）、大于（&gt;）、小于（&lt;）、大于等于（&gt;&#x3D;）、小于等于（&lt;&#x3D;）</li>\n<li>逻辑运算符：与（&amp;&amp;）、或（||）、非（!）</li>\n<li>按位运算符：按位与（&amp;）、按位或（|）、异或（^）</li>\n<li>成员运算符：in、not in</li>\n<li>身份运算符：is、is not</li>\n</ul>\n<p>数据类型分类</p>\n<ul>\n<li>字符串</li>\n<li>数值</li>\n<li>日期</li>\n<li>枚举</li>\n<li>集合</li>\n</ul>\n<h2 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h2><h3 id=\"操作符重载\"><a href=\"#操作符重载\" class=\"headerlink\" title=\"操作符重载\"></a>操作符重载</h3><p>java中不支持操作符重载</p>\n<blockquote>\n<p>ps：字符串的加法拼接操作不是操作符重载，而是语法糖，编译后由StringBuilder实现</p>\n</blockquote>\n<h3 id=\"隐式转换\"><a href=\"#隐式转换\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><ul>\n<li>不同数据 <code>类型</code> 之间的隐式转换</li>\n<li>不同数据 <code>长度</code> 之间的隐式转换</li>\n</ul>\n<h2 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h2><h3 id=\"操作符重载-1\"><a href=\"#操作符重载-1\" class=\"headerlink\" title=\"操作符重载\"></a>操作符重载</h3><p>python中支持操作符重载</p>\n<h3 id=\"隐式转换-1\"><a href=\"#隐式转换-1\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><ul>\n<li>不同数据 <code>类型</code> 之间的隐式转换</li>\n<li>不同数据 <code>长度</code> 之间的隐式转换</li>\n<li>str和unicode之间的decode和encode隐式转换</li>\n</ul>\n<h2 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h2><h3 id=\"操作符重载-2\"><a href=\"#操作符重载-2\" class=\"headerlink\" title=\"操作符重载\"></a>操作符重载</h3><p>javascript原生支持了部分操作符重载</p>\n<h3 id=\"隐式转换-2\"><a href=\"#隐式转换-2\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><ul>\n<li>不同数据 <code>类型</code> 之间的隐式转换</li>\n<li>不同数据 <code>长度</code> 之间的隐式转换</li>\n</ul>\n<h2 id=\"mysql\"><a href=\"#mysql\" class=\"headerlink\" title=\"mysql\"></a>mysql</h2><h3 id=\"操作符重载-3\"><a href=\"#操作符重载-3\" class=\"headerlink\" title=\"操作符重载\"></a>操作符重载</h3><p>无</p>\n<h3 id=\"隐式转换-3\"><a href=\"#隐式转换-3\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3><h2 id=\"mongodb\"><a href=\"#mongodb\" class=\"headerlink\" title=\"mongodb\"></a>mongodb</h2><h3 id=\"操作符重载-4\"><a href=\"#操作符重载-4\" class=\"headerlink\" title=\"操作符重载\"></a>操作符重载</h3><p>无</p>\n<h3 id=\"隐式转换-4\"><a href=\"#隐式转换-4\" class=\"headerlink\" title=\"隐式转换\"></a>隐式转换</h3>","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"data","url":"/2017/01/09/dev/dev-9-topic/topic-5-data/","content":"<h1 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h1><p>文件：File<br>数据库：Database<br>信息：Info</p>\n<blockquote>\n<p>ps：数据库的存储部分本质上还是文件</p>\n</blockquote>\n<h1 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h1><ol>\n<li>文件分为文本文件（Text File）和 二进制文件（Binary File）</li>\n<li>文本文件又分为普通文本文件（Plain Text）和富文本文件（Rich Text）</li>\n<li>文件的格式包含编码格式（File Encoding）和数据格式（File Format）</li>\n</ol>\n<p><code>文本文件</code> 俗称 <code>文档</code> ， <code>二进制文件</code> 俗称 <code>文件</code></p>\n<blockquote>\n<p>ps：口语中的文件格式或者文件类型（File Type）一般指文件的数据格式</p>\n</blockquote>\n<h2 id=\"Text-File\"><a href=\"#Text-File\" class=\"headerlink\" title=\"Text File\"></a>Text File</h2><h3 id=\"Encoding\"><a href=\"#Encoding\" class=\"headerlink\" title=\"Encoding\"></a>Encoding</h3><p>ascii ansi unicode utf-8 gbk gb2312 gb18030</p>\n<h3 id=\"Format\"><a href=\"#Format\" class=\"headerlink\" title=\"Format\"></a>Format</h3><p>文档类的有</p>\n<ul>\n<li>txt</li>\n<li>doc、docx</li>\n<li>ppt</li>\n<li>excel</li>\n<li>pdf</li>\n</ul>\n<p>标记类的有</p>\n<ul>\n<li>html</li>\n<li>xml</li>\n<li>md</li>\n</ul>\n<p>程序类的有</p>\n<ul>\n<li>java</li>\n<li>python</li>\n<li>js</li>\n</ul>\n<p>配置类的有</p>\n<ul>\n<li>properties</li>\n<li>ini</li>\n<li>xml</li>\n<li>json</li>\n<li>yaml</li>\n<li>toml</li>\n</ul>\n<p>思维类的有</p>\n<ul>\n<li>xmap（Xmind）</li>\n</ul>\n<p>绘图类的有</p>\n<ul>\n<li>psd（Photoshop）</li>\n<li>vsd、vsdx（Visio）</li>\n<li>drawio（DrawIO）</li>\n</ul>\n<p>设计类的有</p>\n<ul>\n<li>rp（Axure）</li>\n<li>sketch（Sketch）</li>\n<li>figma（Figma）</li>\n</ul>\n<blockquote>\n<p>分类非常多，还有其他各种软件所生成的文件</p>\n</blockquote>\n<h2 id=\"Binary-File\"><a href=\"#Binary-File\" class=\"headerlink\" title=\"Binary File\"></a>Binary File</h2><h3 id=\"Encoding-1\"><a href=\"#Encoding-1\" class=\"headerlink\" title=\"Encoding\"></a>Encoding</h3><ul>\n<li>ascii</li>\n</ul>\n<blockquote>\n<p>ps：二进制文件只有一种编码格式，即ascii编码</p>\n</blockquote>\n<h3 id=\"Format-1\"><a href=\"#Format-1\" class=\"headerlink\" title=\"Format\"></a>Format</h3><ul>\n<li>图像：Image</li>\n<li>音频：Audio</li>\n<li>视频：Video</li>\n</ul>\n<p>图像又主要分为3类</p>\n<ul>\n<li>相片：Photograph（照相机拍摄产生的图像）</li>\n<li>截图：Screenshot（屏幕截取产生的图像）</li>\n<li>图片：Picture（画图软件生成的图像）</li>\n</ul>\n<blockquote>\n<p>ps：图形学（Graphics）指的是图像（Image）的绘制（Draw）和编辑（Edit）技术</p>\n</blockquote>\n<h1 id=\"Info\"><a href=\"#Info\" class=\"headerlink\" title=\"Info\"></a>Info</h1><p>信息传输分类 有线 无线<br>信息传输载体 光缆（电缆）  基站 卫星<br>信息传输方式 点对点（P2P：peer to peer） 广播（broadcast）<br>信息传输格式 短信 邮件 消息（通讯类软件）<br>信息传播方式 新闻（官方传播形式） 媒体（民间传播形式）<br>信息传播格式 文字（文学） 图像（美术） 音频（音乐） 视频 表演</p>\n<blockquote>\n<p>ps：传输是通信学的术语，传播是语言学的术语</p>\n</blockquote>\n<p>文字类型分类 文章 帖子<br>图像类型分类 图片 画作<br>音乐类型分类 歌唱 器乐<br>视频类型分类 电影 电视剧<br>表演类型分类 舞蹈 舞台剧</p>\n<blockquote>\n<p>ps：文章组织形式 随笔 专题</p>\n</blockquote>\n","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"regex","url":"/2017/01/09/dev/dev-9-topic/topic-7-regex/","content":"<h1 id=\"Regex\"><a href=\"#Regex\" class=\"headerlink\" title=\"Regex\"></a>Regex</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shoyer/article/details/8300439\">正则表达式派系分类</a></li>\n<li><a href=\"https://blog.csdn.net/tao_wei162/article/details/84911630\">正则表达式标准分类</a></li>\n<li><a href=\"https://blog.csdn.net/huan_xiao/article/details/8424923\">正则表达式之BRE与ERE的区别</a></li>\n<li><a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html\">java正则表达式详解</a></li>\n<li><a href=\"https://docs.python.org/zh-cn/3/howto/regex.html\">python正则表达式详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010087338/article/details/120152806\">正则表达式之各种括号</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Character\"><a href=\"#Character\" class=\"headerlink\" title=\"Character\"></a>Character</h1><h2 id=\"Meta\"><a href=\"#Meta\" class=\"headerlink\" title=\"Meta\"></a>Meta</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/RekklesYasin/article/details/111462489\">正则表达式之元字符</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.：匹配任意字符</span><br><span class=\"line\">\\：转义符</span><br><span class=\"line\">^：匹配开始</span><br><span class=\"line\">$：匹配结尾</span><br><span class=\"line\">|：或</span><br><span class=\"line\">?：匹配字符或者表达式0次或1次</span><br><span class=\"line\">*：匹配字符或者表达式0次或多次</span><br><span class=\"line\">+：匹配字符或者表达式1次或多次</span><br><span class=\"line\">-：范围连接符</span><br><span class=\"line\">()：子表达式</span><br><span class=\"line\">[]：字符类</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>正则匹配时字符串的右边是前，左边是后</p>\n</blockquote>\n<h2 id=\"Wildcard\"><a href=\"#Wildcard\" class=\"headerlink\" title=\"Wildcard\"></a>Wildcard</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46932303/article/details/107090796\">正则表达式之通配符</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Blank\"><a href=\"#Blank\" class=\"headerlink\" title=\"Blank\"></a>Blank</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jsjcmq/article/details/111935641\">正则表达式之空白符</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/clx527257002/article/details/82998057\">正则表达式之类型符入门</a></li>\n<li><a href=\"https://blog.csdn.net/Karse_/article/details/117286857\">正则表达式之类型符进阶</a></li>\n<li><a href=\"https://blog.csdn.net/LeviDing/article/details/126188420\">正则表达式之类型符详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>[:ascii:]</code>：ASCII字符</li>\n<li><code>[:word:]</code>：字母、数字、下划线</li>\n<li><code>[:alnum:]</code>：字母和数字</li>\n<li><code>[:alpha:]</code>：字母</li>\n<li><code>[:upper:]</code>：大写字母</li>\n<li><code>[:lower:]</code>：小写字母</li>\n<li><code>[:digit:]</code>：数字</li>\n<li><code>[:xdigit:]</code>：十六进制数字</li>\n<li><code>[:cntrl:]</code>：控制字符</li>\n<li><code>[:print:]</code>：打印字符</li>\n<li><code>[:graph:]</code>：可视字符（不包含空白字符的打印字符）</li>\n<li><code>[:blank:]</code>：空白符（包含空格符、水平制表符）</li>\n<li><code>[:space:]</code>：空白符（包含空格符、回车符、换行符、换页符、水平制表符、垂直制表符）</li>\n<li><code>[:punct:]</code>：标点字符</li>\n</ul>\n<blockquote>\n<p>ps： <code>\\w</code> 代表字母、数字、下划线， <code>\\d</code> 代表数字， <code>\\s</code> 代表空白符 </p>\n</blockquote>\n<h2 id=\"Boundary\"><a href=\"#Boundary\" class=\"headerlink\" title=\"Boundary\"></a>Boundary</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44799217/article/details/113705354\">正则表达式之字串边界符</a></li>\n<li><a href=\"https://blog.csdn.net/chanmufeng/article/details/54141913\">正则表达式之单词边界符</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Expression\"><a href=\"#Expression\" class=\"headerlink\" title=\"Expression\"></a>Expression</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shuilan0066/article/details/120283592\">正则表达式之或表达式</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Repeat\"><a href=\"#Repeat\" class=\"headerlink\" title=\"Repeat\"></a>Repeat</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yeshang_lady/article/details/99626016\">正则表达式之重复匹配</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Position\"><a href=\"#Position\" class=\"headerlink\" title=\"Position\"></a>Position</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40710974/article/details/126594090\">正则表达式之位置匹配</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Assertion\"><a href=\"#Assertion\" class=\"headerlink\" title=\"Assertion\"></a>Assertion</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Madenhaire/article/details/118941470\">正则表达式之断言匹配</a></li>\n</ul>\n</blockquote>\n<p>正则匹配时字符串的右边是前，左边是后</p>\n<ul>\n<li><code>?=</code>：肯定式向前查看</li>\n<li><code>?!</code>：否定式向前查看</li>\n<li><code>?&lt;=</code>：肯定式向后查看</li>\n<li><code>?&lt;=</code>：否定式向后查看</li>\n</ul>\n<h1 id=\"Grouping\"><a href=\"#Grouping\" class=\"headerlink\" title=\"Grouping\"></a>Grouping</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wang489687009/article/details/122905518\">正则表达式之分组匹配</a></li>\n<li><a href=\"https://blog.csdn.net/Ly0309Xuan1111/article/details/106328922\">正则表达式之分组捕获</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/118459401\">正则表达式之分组命名</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Mode\"><a href=\"#Mode\" class=\"headerlink\" title=\"Mode\"></a>Mode</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42667613/article/details/115859383\">正则表达式之贪婪匹配和懒惰匹配</a></li>\n<li><a href=\"https://blog.csdn.net/zhy1379/article/details/124696392\">正则表达式之忽略大小写</a></li>\n<li><a href=\"https://blog.csdn.net/hongweigg/article/details/39557323\">正则表达式之多行匹配</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45196863/article/details/119636856\">正则表达式之全局匹配（python）</a></li>\n<li><a href=\"https://blog.csdn.net/qqdoudoua/article/details/81231125\">正则表达式之全局匹配（python）</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/raoshihong/article/details/17004641\">正则表达式之反向引用</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"graph","url":"/2017/03/01/dsa/dsa-1-structure/graph/","content":"","categories":["+ das + structure"],"tags":["+ structure"]},{"title":"keyboard","url":"/2017/01/09/dev/dev-9-topic/topic-3-keyboard/","content":"<h1 id=\"Keyboard\"><a href=\"#Keyboard\" class=\"headerlink\" title=\"Keyboard\"></a>Keyboard</h1><h2 id=\"Shortcut\"><a href=\"#Shortcut\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><h3 id=\"Key\"><a href=\"#Key\" class=\"headerlink\" title=\"Key\"></a>Key</h3><p>ctrl：控制（control）或移动（move）或导航（navigate）<br>shift：选择（select）或切换（switch）<br>alt：辅助（assist）或交换（exchange）</p>\n<blockquote>\n<p>shift表示切换，比如键盘输入时的大小写切换，键盘输入时的数字和符号切换<br>shift还可以表示轮换，比如shell编程时可以对参数进行shift操作</p>\n</blockquote>\n<h3 id=\"Func\"><a href=\"#Func\" class=\"headerlink\" title=\"Func\"></a>Func</h3><p>功能（Func）：alphanum、ctrl（功能控制）、shift（功能切换）、alt（功能辅助）<br>移动（Move）：arrow、ctrl（移动控制）、alt（移动辅助）<br>导航（Navigate）：[]、ctrl（导航控制）、alt（导航辅助）<br>选择（Select）：click、shift（选择）、alt（选择辅助）<br>切换（Switch）：shift（切换）、alt（切换辅助）<br>辅助（Assist）：alt（辅助）<br>交换（Exchange）alt（交换）</p>\n<p>ctrl键常用功能如下</p>\n<ul>\n<li>ctrl + a：全选（all）、首部（字母表首字母）</li>\n<li>ctrl + b：后退（backward）、开始（begin）、底部（bottom）</li>\n<li>ctrl + c：复制（copy）、修改（change）</li>\n<li>ctrl + d：下移（down）、删除（delete）</li>\n<li>ctrl + e：结束（end）、尾部（end）</li>\n<li>ctrl + f：前进（forward）、查找（find）</li>\n<li>ctrl + g：跳转（goto）</li>\n<li>ctrl + h：左</li>\n<li>ctrl + i：</li>\n<li>ctrl + j：下</li>\n<li>ctrl + k：上</li>\n<li>ctrl + l：右</li>\n<li>ctrl + m：</li>\n<li>ctrl + n：新建（new）、后一个（next）</li>\n<li>ctrl + o：打开（open）</li>\n<li>ctrl + p：打印（print）、面板（palette）、前一个（previous）</li>\n<li>ctrl + q：退出（quit）、静音（quiet）</li>\n<li>ctrl + r：替换（replace）、运行（run）</li>\n<li>ctrl + s：保存（save）、停止（stop）</li>\n<li>ctrl + t：顶部（top）</li>\n<li>ctrl + u：上移（up）</li>\n<li>ctrl + v：粘贴</li>\n<li>ctrl + w：单词（word）、窗口（window）</li>\n<li>ctrl + x：剪切</li>\n<li>ctrl + y：重做</li>\n<li>ctrl + z：撤销</li>\n</ul>\n<blockquote>\n<p>cxvyzfr：复制，剪切，粘贴，重做，撤销，查找，替换<br>ae：开始，结束<br>be：开始，结束<br>fb：前进，后退<br>ud：向上，向下<br>tb：顶部，底部</p>\n</blockquote>\n<h1 id=\"IME\"><a href=\"#IME\" class=\"headerlink\" title=\"IME\"></a>IME</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kmswilliam/article/details/117675903\">搜狗输入法自定义标点符号</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33360009/article/details/110457900\">搜狗输入法使用技巧入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33360009/article/details/110457900\">搜狗输入法使用技巧详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Shortcut-1\"><a href=\"#Shortcut-1\" class=\"headerlink\" title=\"Shortcut\"></a>Shortcut</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/langhuage/article/details/118227286\">搜狗输入法快捷键入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43959833/article/details/116496663\">搜狗输入法快捷键详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"time","url":"/2017/01/09/dev/dev-9-topic/topic-9-time/","content":"<h1 id=\"Time\"><a href=\"#Time\" class=\"headerlink\" title=\"Time\"></a>Time</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/haungrui/article/details/7198635\">epoch是什么</a></li>\n</ul>\n</blockquote>\n<p>time时间 狭义上的时间，只包含时分秒<br>date日期 狭义上的日期，只包含年月日<br>datetime 时间点，广义上的日期或者时间，包含年月日和时分秒<br>timezone 时区<br>timestamp 时间戳 2038</p>\n<p>unix timestamp 秒<br>java timestamp 毫秒<br>mysql timestamp 秒</p>\n<p>linux 时区配置 TZ<br>java 时区变量 TZ<br>python 时区变量 TZ</p>\n<p>linux date</p>\n","categories":["+ dev + topic"],"tags":["+ dev"]},{"title":"list","url":"/2017/03/01/dsa/dsa-1-structure/list/","content":"<h1 id=\"数组列表\"><a href=\"#数组列表\" class=\"headerlink\" title=\"数组列表\"></a>数组列表</h1><figure class=\"highlight java\"><figcaption><span>MyArrayList.java</span><a href=\"/downloads/code/java/dsa/list/MyArrayList.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.list;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArrayList</span> {</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"链表列表\"><a href=\"#链表列表\" class=\"headerlink\" title=\"链表列表\"></a>链表列表</h1><figure class=\"highlight java\"><figcaption><span>MyLinkedList.java</span><a href=\"/downloads/code/java/dsa/list/MyLinkedList.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.list;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyLinkedList</span> {</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n","categories":["+ das + structure"],"tags":["+ structure"]},{"title":"queue","url":"/2017/03/01/dsa/dsa-1-structure/queue/","content":"<h1 id=\"数组队列\"><a href=\"#数组队列\" class=\"headerlink\" title=\"数组队列\"></a>数组队列</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fengyuyeguirenenen/article/details/122675108\">数组队列假溢出详解</a></li>\n</ul>\n</blockquote>\n<p>数组队列假溢出的接解决办法</p>\n<ul>\n<li>使用移位操作<ul>\n<li>rear等于capacity时，将所有元素整体移到左端</li>\n</ul>\n</li>\n<li>使用循环数组<ul>\n<li>使用循环数组并且浪费一个空间来判断满</li>\n<li>使用循环数组并且添加flag标记来辅助判断head等于rear时是空还是满</li>\n<li>使用循环数组并且添加size大小来辅助判断head等于rear时是空还是满</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"普通数组队列（normal-queue）\"><a href=\"#普通数组队列（normal-queue）\" class=\"headerlink\" title=\"普通数组队列（normal queue）\"></a>普通数组队列（normal queue）</h2><h3 id=\"简单数组队列\"><a href=\"#简单数组队列\" class=\"headerlink\" title=\"简单数组队列\"></a>简单数组队列</h3><p>简单数组队列存在假溢出的问题</p>\n<ul>\n<li>判空：front &#x3D;&#x3D; rear</li>\n<li>判满：rear &#x3D;&#x3D; capacity</li>\n<li>入队指针变化：rear++; </li>\n<li>出队指针变化：front++;</li>\n</ul>\n<figure class=\"highlight java\"><figcaption><span>MyArraySimpleQueue.java</span><a href=\"/downloads/code/java/dsa/queue/MyArraySimpleQueue.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArraySimpleQueue</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> capacity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">front</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">rear</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] table;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyArraySimpleQueue</span><span class=\"params\">(<span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.table = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[capacity];</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFull</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rear == capacity;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        table[rear] = s;</span><br><span class=\"line\">        rear++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> table[front];</span><br><span class=\"line\">        table[front] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        front++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(table);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyArraySimpleQueue</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyArraySimpleQueue</span>(capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"复杂数组队列\"><a href=\"#复杂数组队列\" class=\"headerlink\" title=\"复杂数组队列\"></a>复杂数组队列</h3><p>复杂数组队列使用移位（transfer）来解决假溢出的问题，并且判满条件还需要判断front指针</p>\n<ul>\n<li>判空：front &#x3D;&#x3D; rear</li>\n<li>判满：rear &#x3D;&#x3D; capacity &amp;&amp; front &#x3D;&#x3D; 0</li>\n<li>入队指针变化：rear++; </li>\n<li>出队指针变化：front++;</li>\n</ul>\n<figure class=\"highlight java\"><figcaption><span>MyArrayComplexQueue.java</span><a href=\"/downloads/code/java/dsa/queue/MyArrayComplexQueue.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArrayComplexQueue</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> capacity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">front</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">rear</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] table;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyArrayComplexQueue</span><span class=\"params\">(<span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.table = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[capacity];</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFull</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rear == capacity &amp;&amp; front == <span class=\"number\">0</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// fake full</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (rear == capacity) {</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> front; i &lt; rear; i++) {</span><br><span class=\"line\">                table[i - front] = table[i];</span><br><span class=\"line\">                table[i] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\"></span><br><span class=\"line\">            rear = rear - front;</span><br><span class=\"line\">            front = <span class=\"number\">0</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        table[rear] = s;</span><br><span class=\"line\">        rear++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> table[front];</span><br><span class=\"line\">        table[front] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        front++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(table);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyArrayComplexQueue</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyArrayComplexQueue</span>(capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue and enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue and enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + (i + capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; capacity / <span class=\"number\">2</span>) {</span><br><span class=\"line\">                s = queue.dequeue();</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                    System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"循环数组队列（cicular-queue）\"><a href=\"#循环数组队列（cicular-queue）\" class=\"headerlink\" title=\"循环数组队列（cicular queue）\"></a>循环数组队列（cicular queue）</h2><h3 id=\"循环数组队列（冗余法）\"><a href=\"#循环数组队列（冗余法）\" class=\"headerlink\" title=\"循环数组队列（冗余法）\"></a>循环数组队列（冗余法）</h3><p>冗余法循环数组队列存在浪费一个空间的问题</p>\n<ul>\n<li>判空：front &#x3D;&#x3D; rear</li>\n<li>判满：(rear + 1) % capacity &#x3D;&#x3D; front</li>\n<li>入队指针变化：rear &#x3D; (rear + 1) % capacity; </li>\n<li>出队指针变化：front &#x3D; (front + 1) % capacity;</li>\n</ul>\n<figure class=\"highlight java\"><figcaption><span>MyArrayLoopQueueWithWaste.java</span><a href=\"/downloads/code/java/dsa/queue/MyArrayLoopQueueWithWaste.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArrayLoopQueueWithWaste</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> capacity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">front</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">rear</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] table;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyArrayLoopQueueWithWaste</span><span class=\"params\">(<span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.table = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[capacity];</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFull</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (rear + <span class=\"number\">1</span>) % capacity == front;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        table[rear] = s;</span><br><span class=\"line\">        rear = (rear + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> table[front];</span><br><span class=\"line\">        table[front] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        front = (front + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(table);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyArrayLoopQueueWithWaste</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyArrayLoopQueueWithWaste</span>(capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue and enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue and enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + (i + capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; capacity / <span class=\"number\">2</span>) {</span><br><span class=\"line\">                s = queue.dequeue();</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                    System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环数组队列（flag标记法）\"><a href=\"#循环数组队列（flag标记法）\" class=\"headerlink\" title=\"循环数组队列（flag标记法）\"></a>循环数组队列（flag标记法）</h3><ul>\n<li>判空：!flag &amp;&amp; front &#x3D;&#x3D; rear; </li>\n<li>判满：flag &amp;&amp; front &#x3D;&#x3D; rear; </li>\n<li>入队指针变化：rear &#x3D; (rear + 1) % capacity; </li>\n<li>出队指针变化：front &#x3D; (front + 1) % capacity;</li>\n</ul>\n<figure class=\"highlight java\"><figcaption><span>MyArrayLoopQueueWithFlag.java</span><a href=\"/downloads/code/java/dsa/queue/MyArrayLoopQueueWithFlag.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArrayLoopQueueWithFlag</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> capacity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">front</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">rear</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>; <span class=\"comment\">// false is empty, true is full</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] table;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyArrayLoopQueueWithFlag</span><span class=\"params\">(<span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.table = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[capacity];</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> !flag &amp;&amp; front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFull</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> flag &amp;&amp; front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        table[rear] = s;</span><br><span class=\"line\">        rear = (rear + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        flag = <span class=\"literal\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> table[front];</span><br><span class=\"line\">        table[front] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        front = (front + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        flag = <span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(table);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyArrayLoopQueueWithFlag</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyArrayLoopQueueWithFlag</span>(capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue and enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue and enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + (i + capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; capacity / <span class=\"number\">2</span>) {</span><br><span class=\"line\">                s = queue.dequeue();</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                    System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"循环数组队列（size辅助法）\"><a href=\"#循环数组队列（size辅助法）\" class=\"headerlink\" title=\"循环数组队列（size辅助法）\"></a>循环数组队列（size辅助法）</h3><ul>\n<li>判空：size &#x3D;&#x3D; 0 &amp;&amp; front &#x3D;&#x3D; rear; </li>\n<li>判满：size &gt; 0 &amp;&amp; front &#x3D;&#x3D; rear; </li>\n<li>入队指针变化：rear &#x3D; (rear + 1) % capacity; </li>\n<li>出队指针变化：front &#x3D; (front + 1) % capacity;</li>\n</ul>\n<figure class=\"highlight java\"><figcaption><span>MyArrayLoopQueueWithSize.java</span><a href=\"/downloads/code/java/dsa/queue/MyArrayLoopQueueWithSize.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyArrayLoopQueueWithSize</span> {</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> capacity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">front</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">rear</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">size</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String[] table;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyArrayLoopQueueWithSize</span><span class=\"params\">(<span class=\"type\">int</span> capacity)</span> {</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.capacity = capacity;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.table = <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>[capacity];</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEmpty</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size == <span class=\"number\">0</span> &amp;&amp; front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFull</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> size &gt; <span class=\"number\">0</span> &amp;&amp; front == rear;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isFull()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        table[rear] = s;</span><br><span class=\"line\">        rear = (rear + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        size++;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEmpty()) {</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">v</span> <span class=\"operator\">=</span> table[front];</span><br><span class=\"line\">        table[front] = <span class=\"literal\">null</span>;</span><br><span class=\"line\">        front = (front + <span class=\"number\">1</span>) % capacity;</span><br><span class=\"line\"></span><br><span class=\"line\">        size--;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> v;</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(table);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyArrayLoopQueueWithSize</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyArrayLoopQueueWithSize</span>(capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue and enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue and enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + (i + capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; capacity / <span class=\"number\">2</span>) {</span><br><span class=\"line\">                s = queue.dequeue();</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                    System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"链表队列\"><a href=\"#链表队列\" class=\"headerlink\" title=\"链表队列\"></a>链表队列</h1><figure class=\"highlight java\"><figcaption><span>MyLinkedQueue.java</span><a href=\"/downloads/code/java/dsa/queue/MyLinkedQueue.java\">view raw</a></figcaption><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> dsa.queue;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> dsa.link.MySingleLink;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyLinkedQueue</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">MySingleLink</span> <span class=\"variable\">link</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MySingleLink</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyLinkedQueue</span><span class=\"params\">()</span> {</span><br><span class=\"line\"></span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">enqueue</span><span class=\"params\">(String s)</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link.addLast(s);</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">dequeue</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> link.removeFirst();</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// for test print</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> {</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Arrays.toString(link.toArray());</span><br><span class=\"line\">    }</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> {</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">capacity</span> <span class=\"operator\">=</span> <span class=\"number\">7</span>;</span><br><span class=\"line\">        <span class=\"type\">MyLinkedQueue</span> <span class=\"variable\">queue</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyLinkedQueue</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + i;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue and enqueue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue and enqueue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; capacity + <span class=\"number\">1</span>; i++) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span> + (i + capacity);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i &lt; capacity / <span class=\"number\">2</span>) {</span><br><span class=\"line\">                s = queue.dequeue();</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                <span class=\"type\">boolean</span> <span class=\"variable\">ok</span> <span class=\"operator\">=</span> queue.enqueue(s);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (ok) {</span><br><span class=\"line\">                    System.out.println(String.format(<span class=\"string\">&quot;enqueue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">                } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">&quot;queue is full&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                }</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// test for dequeue</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;\\n---test dequeue---\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) {</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> queue.dequeue();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s != <span class=\"literal\">null</span>) {</span><br><span class=\"line\">                System.out.println(String.format(<span class=\"string\">&quot;dequeue value %2s , queue is %s&quot;</span>, s, queue.toString()));</span><br><span class=\"line\">            } <span class=\"keyword\">else</span> {</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;queue is empty&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            }</span><br><span class=\"line\">        }</span><br><span class=\"line\">    }</span><br><span class=\"line\">}</span><br></pre></td></tr></table></figure>\n","categories":["+ das + structure"],"tags":["+ structure"]},{"title":"tree","url":"/2017/03/01/dsa/dsa-1-structure/tree/","content":"","categories":["+ das + structure"],"tags":["+ structure"]},{"title":"stack","url":"/2017/03/01/dsa/dsa-1-structure/stack/","content":"","categories":["+ das + structure"],"tags":["+ structure"]},{"title":"find","url":"/2017/03/03/dsa/dsa-3-algorithm/find/","content":"","categories":["+ das + algorithm"],"tags":["+ algorithm"]},{"title":"sort","url":"/2017/03/03/dsa/dsa-3-algorithm/sort/","content":"","categories":["+ das + algorithm"],"tags":["+ algorithm"]},{"title":"cooking","url":"/2017/05/01/essay/knowledge/cooking/","content":"<h1 id=\"美食（中餐）\"><a href=\"#美食（中餐）\" class=\"headerlink\" title=\"美食（中餐）\"></a>美食（中餐）</h1><h2 id=\"早餐\"><a href=\"#早餐\" class=\"headerlink\" title=\"早餐\"></a>早餐</h2><h3 id=\"主食\"><a href=\"#主食\" class=\"headerlink\" title=\"主食\"></a>主食</h3><p>油条（炸） 油饼（炸） 煎饼（煎） 包子（蒸） 馒头（蒸）</p>\n<h3 id=\"糕饼\"><a href=\"#糕饼\" class=\"headerlink\" title=\"糕饼\"></a>糕饼</h3><p>冲冲糕 熨斗糕 三角粑 炸年糕 春卷 麻圆 糯米团</p>\n<p>糍粑 泡粑 锅巴</p>\n<p>玉米饼 山药饼</p>\n<h3 id=\"饮品\"><a href=\"#饮品\" class=\"headerlink\" title=\"饮品\"></a>饮品</h3><p>豆浆 </p>\n<h3 id=\"稀饭\"><a href=\"#稀饭\" class=\"headerlink\" title=\"稀饭\"></a>稀饭</h3><p>白稀饭 菜稀饭 绿豆粥 南瓜粥 小米粥 黑米粥 皮蛋瘦肉粥</p>\n<h3 id=\"米糊\"><a href=\"#米糊\" class=\"headerlink\" title=\"米糊\"></a>米糊</h3><p>油茶</p>\n<h3 id=\"小吃\"><a href=\"#小吃\" class=\"headerlink\" title=\"小吃\"></a>小吃</h3><p>豆腐脑 酸辣粉</p>\n<h2 id=\"午餐\"><a href=\"#午餐\" class=\"headerlink\" title=\"午餐\"></a>午餐</h2><h3 id=\"粉面\"><a href=\"#粉面\" class=\"headerlink\" title=\"粉面\"></a>粉面</h3><p>米粉 长寿米粉 长沙宽粉 西安米皮 南昌拌粉 柳州螺蛳粉<br>米线 三鲜米线 火锅米线 过桥米线（云南）<br>小面 豌杂面 肥肠面 牛肉面 羊肉面 铺盖面 刀削面 面块 面片</p>\n<h3 id=\"炒饭\"><a href=\"#炒饭\" class=\"headerlink\" title=\"炒饭\"></a>炒饭</h3><p>蛋炒饭 火腿炒饭 老干妈炒饭</p>\n<h3 id=\"盖饭\"><a href=\"#盖饭\" class=\"headerlink\" title=\"盖饭\"></a>盖饭</h3><p>猪肉 红烧肉 回锅肉 盐煎肉 青椒肉片 青椒肉丝 鱼香肉丝 榨菜肉丝 土豆肉丝 泡椒猪肝<br>牛肉 土豆牛肉<br>羊肉 葱爆羊肉<br>鸡肉 辣子鸡丁 宫保鸡丁<br>素菜 麻婆豆腐 干煸豆角 地三鲜</p>\n<h3 id=\"盒饭\"><a href=\"#盒饭\" class=\"headerlink\" title=\"盒饭\"></a>盒饭</h3><p>猪肉 红烧肉 狮子头 锅包肉 溜肉段 水煮肉片 青椒肉片 青椒肉丝 鱼香肉丝<br>鸡肉 辣子鸡丁 宫保鸡丁<br>素菜 麻婆豆腐 干煸豆角 地三鲜 烧茄子 炒花菜 土豆丝</p>\n<h3 id=\"快餐\"><a href=\"#快餐\" class=\"headerlink\" title=\"快餐\"></a>快餐</h3><p>食品 卤肉饭 肥牛饭 鱼香肉丝 辣子鸡丁 宫保鸡丁 香菇滑鸡 咖喱猪排 咖喱牛肉 麻婆豆腐<br>品牌 乡村基 大米先生 老乡鸡 吉野家 和合谷 沙县小吃</p>\n<h3 id=\"炒菜（江湖菜）\"><a href=\"#炒菜（江湖菜）\" class=\"headerlink\" title=\"炒菜（江湖菜）\"></a>炒菜（江湖菜）</h3><p>猪肉 红烧肉 回锅肉 盐煎肉 青椒肉片 青椒肉丝 鱼香肉丝 榨菜肉丝 土豆肉丝 泡椒猪肝 土豆火腿<br>猪肉 水煮肉 滑肉汤 蒜泥白肉 梅菜扣肉 烧白 夹沙 蹄花 蹄髈<br>牛肉 耙牛肉 牛肉汤<br>羊肉 烤羊肉 羊肉汤<br>鸡肉 辣子鸡丁 宫保鸡丁<br>鸭肉 啤酒鸭 老鸭汤<br>鱼肉 烤鱼、水煮鱼、酸菜鱼<br>兔肉 椒麻兔<br>素菜 麻婆豆腐 干煸豆角 手撕包菜 清炒莴笋 清炒丝瓜 清炒藤藤菜 炝炒土豆 干烧茄子<br>素菜 西红柿鸡蛋 韭菜鸡蛋</p>\n<h3 id=\"聚餐\"><a href=\"#聚餐\" class=\"headerlink\" title=\"聚餐\"></a>聚餐</h3><p>人少 干锅 麻辣烫 冒菜 毛血旺 荤豆花<br>人多 火锅 串串 烤鱼<br>自助 自助餐</p>\n<p>吃牛 耙牛肉 牛肉汤<br>吃羊 烤羊肉 羊肉汤<br>吃鸡 芋儿鸡 肥肠鸡<br>吃鸭 啤酒鸭 老鸭汤<br>吃鱼 烤鱼 水煮鱼 酸菜鱼</p>\n<p>火锅（肉菜） 毛肚 鸭肠 腰片 黄喉 麻辣牛肉 耗儿鱼 虾滑 肉丸 火腿肠<br>火锅（素菜） 贡菜 藕片 土豆片 莴笋 竹笋<br>火锅（豆菜） 豆芽 豆腐 豆干 豆皮<br>火锅（粉面） 红薯粉 粉丝 面块<br>火锅（零食） 酥肉 糍粑 山药</p>\n<h1 id=\"美食（西餐）\"><a href=\"#美食（西餐）\" class=\"headerlink\" title=\"美食（西餐）\"></a>美食（西餐）</h1><blockquote>\n<ul>\n<li><a href=\"https://web.phb123.com/pinpai/top16811.html\">汉堡品牌排行榜</a></li>\n<li><a href=\"https://web.phb123.com/pinpai/mzps.html\">披萨品牌排行榜</a></li>\n</ul>\n</blockquote>\n<h2 id=\"早餐-1\"><a href=\"#早餐-1\" class=\"headerlink\" title=\"早餐\"></a>早餐</h2><h3 id=\"主食-1\"><a href=\"#主食-1\" class=\"headerlink\" title=\"主食\"></a>主食</h3><p>蛋糕 面包 鸡蛋 火腿 培根 牛排</p>\n<h3 id=\"饮品-1\"><a href=\"#饮品-1\" class=\"headerlink\" title=\"饮品\"></a>饮品</h3><p>牛奶 果汁</p>\n<h2 id=\"午餐-1\"><a href=\"#午餐-1\" class=\"headerlink\" title=\"午餐\"></a>午餐</h2><h3 id=\"炸鸡和汉堡\"><a href=\"#炸鸡和汉堡\" class=\"headerlink\" title=\"炸鸡和汉堡\"></a>炸鸡和汉堡</h3><p>食品 炸鸡 汉堡 薯片<br>品牌 肯德基 麦当劳 德克士 汉堡王 华莱士 塔斯汀</p>\n<h3 id=\"披萨和牛排\"><a href=\"#披萨和牛排\" class=\"headerlink\" title=\"披萨和牛排\"></a>披萨和牛排</h3><p>食品 披萨 牛排 意面<br>品牌 必胜客 尊宝披萨</p>\n<h3 id=\"三明治\"><a href=\"#三明治\" class=\"headerlink\" title=\"三明治\"></a>三明治</h3><p>食品 三明治<br>品牌 赛百味</p>\n<h1 id=\"食材（蔬菜）\"><a href=\"#食材（蔬菜）\" class=\"headerlink\" title=\"食材（蔬菜）\"></a>食材（蔬菜）</h1><h2 id=\"菜类（叶）\"><a href=\"#菜类（叶）\" class=\"headerlink\" title=\"菜类（叶）\"></a>菜类（叶）</h2><h3 id=\"常见\"><a href=\"#常见\" class=\"headerlink\" title=\"常见\"></a>常见</h3><ul>\n<li>包包白（包菜）</li>\n<li>黄秧白（大白菜）</li>\n<li>瓢儿白（油白菜）</li>\n<li>莴笋叶（油麦菜）</li>\n<li>藤藤菜（空心菜）</li>\n<li>花菜</li>\n</ul>\n<h3 id=\"少见\"><a href=\"#少见\" class=\"headerlink\" title=\"少见\"></a>少见</h3><blockquote>\n<ul>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1679040159372132159\">木耳菜</a></li>\n<li><a href=\"https://xumu.haoyundao.net/showinfo-1-54044-0.html\">软姜子</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1730866197868235059\">冬寒菜</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>豌豆尖</li>\n<li>豌豆片</li>\n<li>红苕尖</li>\n<li>软番子（软姜子、木耳菜、落葵）</li>\n<li>冬寒菜</li>\n<li>儿菜</li>\n</ul>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><ul>\n<li>折耳根</li>\n<li>茼蒿</li>\n<li>油菜</li>\n</ul>\n<h2 id=\"菜类（豆）\"><a href=\"#菜类（豆）\" class=\"headerlink\" title=\"菜类（豆）\"></a>菜类（豆）</h2><h3 id=\"鲜豆品\"><a href=\"#鲜豆品\" class=\"headerlink\" title=\"鲜豆品\"></a>鲜豆品</h3><blockquote>\n<ul>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1700637067288700717\">这5种“豆角”有啥区别，别再傻傻分不清啦</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1752080491591407193\">豌豆和青豆是同一种豆子吗</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1735326285685855245\">蚕豆是豆类吗，与胡豆的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>四季豆（芸豆）</li>\n<li>豇豆</li>\n<li>毛豆（青豆）</li>\n<li>豌豆</li>\n<li>胡豆（蚕豆）</li>\n</ul>\n<h3 id=\"豆制品\"><a href=\"#豆制品\" class=\"headerlink\" title=\"豆制品\"></a>豆制品</h3><ul>\n<li>豆芽</li>\n<li>豆腐</li>\n<li>豆干</li>\n<li>豆皮</li>\n<li>豆花</li>\n<li>豆浆</li>\n<li>豆腐泡</li>\n<li>豆腐乳</li>\n</ul>\n<h3 id=\"干豆品\"><a href=\"#干豆品\" class=\"headerlink\" title=\"干豆品\"></a>干豆品</h3><blockquote>\n<ul>\n<li><a href=\"http://www.qinggua.net/ask/202003/23341.html\">大豆和小豆的区别</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1713673567661818340\">黄豆、红豆、绿豆、黑豆，吃哪种对身体最好？现在开始要清楚了</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1671889429892614387\">赤小豆和红豆有什么区别？看完之后才知道，这么多年我都挑错了</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1707308301323943496\">赤小豆”和“红小豆”有啥区别？差别不止一点，学会别再买错了</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1732789392342272498\">白扁豆是什么食物</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>黄豆</li>\n<li>绿豆</li>\n<li>黑豆</li>\n<li>红豆</li>\n<li>赤小豆</li>\n<li>红小豆</li>\n<li>白扁豆</li>\n</ul>\n<h2 id=\"菜类（瓜）\"><a href=\"#菜类（瓜）\" class=\"headerlink\" title=\"菜类（瓜）\"></a>菜类（瓜）</h2><ul>\n<li>黄瓜</li>\n<li>丝瓜</li>\n<li>南瓜（晃瓜）</li>\n<li>冬瓜</li>\n<li>葫芦瓜（西葫芦）</li>\n<li>苦瓜</li>\n</ul>\n<h2 id=\"菜类（椒）\"><a href=\"#菜类（椒）\" class=\"headerlink\" title=\"菜类（椒）\"></a>菜类（椒）</h2><ul>\n<li>青椒</li>\n<li>红椒</li>\n</ul>\n<h2 id=\"菜类（菇）\"><a href=\"#菜类（菇）\" class=\"headerlink\" title=\"菜类（菇）\"></a>菜类（菇）</h2><ul>\n<li>平菇</li>\n<li>蘑菇</li>\n<li>香菇</li>\n</ul>\n<h2 id=\"菜类（混）\"><a href=\"#菜类（混）\" class=\"headerlink\" title=\"菜类（混）\"></a>菜类（混）</h2><ul>\n<li>土豆</li>\n<li>玉米</li>\n<li>茄子</li>\n<li>西红柿</li>\n<li>洋葱</li>\n<li>韭菜</li>\n</ul>\n<h2 id=\"菜类（配）\"><a href=\"#菜类（配）\" class=\"headerlink\" title=\"菜类（配）\"></a>菜类（配）</h2><ul>\n<li>莲藕</li>\n<li>海带</li>\n<li>萝卜</li>\n<li>芋儿</li>\n<li>山药</li>\n</ul>\n<h1 id=\"食材（肉蛋）\"><a href=\"#食材（肉蛋）\" class=\"headerlink\" title=\"食材（肉蛋）\"></a>食材（肉蛋）</h1><h2 id=\"肉类（肉）\"><a href=\"#肉类（肉）\" class=\"headerlink\" title=\"肉类（肉）\"></a>肉类（肉）</h2><blockquote>\n<ul>\n<li><a href=\"https://xueqiu.com/1178914953/155908046\">猪肉11个部位分布图讲解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>鲜肉：猪牛羊鸡鸭鱼兔鹅</li>\n<li>卤肉：核桃肉、猪耳朵</li>\n<li>烤肉：烤鸡、烤鸭、烤鱼</li>\n<li>熏肉：香肠、腊肉、火腿</li>\n<li>蒸肉：扣肉、烧白、夹沙</li>\n</ul>\n<p>不辣：瘦肉、猪肝、三线肉、滑肉汤、排骨、猪蹄、猪脚<br>微辣：卤肉、烤肉、炸酥肉、水煮肉、香肠、腊肉、火腿</p>\n<h3 id=\"鲜肉\"><a href=\"#鲜肉\" class=\"headerlink\" title=\"鲜肉\"></a>鲜肉</h3><ul>\n<li>瘦肉</li>\n<li>肥肉</li>\n<li>猪肝</li>\n<li>三线肉（五花肉）</li>\n<li>排骨</li>\n<li>猪蹄</li>\n<li>猪脚</li>\n</ul>\n<h3 id=\"卤肉\"><a href=\"#卤肉\" class=\"headerlink\" title=\"卤肉\"></a>卤肉</h3><ul>\n<li>核桃肉</li>\n<li>猪耳朵</li>\n</ul>\n<h3 id=\"烤肉\"><a href=\"#烤肉\" class=\"headerlink\" title=\"烤肉\"></a>烤肉</h3><ul>\n<li>烤鸡</li>\n<li>烤鸭</li>\n<li>烤鱼</li>\n</ul>\n<h3 id=\"熏肉\"><a href=\"#熏肉\" class=\"headerlink\" title=\"熏肉\"></a>熏肉</h3><ul>\n<li>香肠</li>\n<li>腊肉</li>\n<li>火腿</li>\n</ul>\n<h3 id=\"蒸肉\"><a href=\"#蒸肉\" class=\"headerlink\" title=\"蒸肉\"></a>蒸肉</h3><ul>\n<li>扣肉</li>\n<li>烧白</li>\n<li>夹沙</li>\n</ul>\n<h2 id=\"蛋类（蛋）\"><a href=\"#蛋类（蛋）\" class=\"headerlink\" title=\"蛋类（蛋）\"></a>蛋类（蛋）</h2><ul>\n<li>鸡蛋</li>\n<li>鸭蛋</li>\n<li>皮蛋</li>\n</ul>\n<h1 id=\"食材（主食）\"><a href=\"#食材（主食）\" class=\"headerlink\" title=\"食材（主食）\"></a>食材（主食）</h1><p>主粮：大米 小麦 土豆 红薯 大豆</p>\n<h2 id=\"饭类（饭）\"><a href=\"#饭类（饭）\" class=\"headerlink\" title=\"饭类（饭）\"></a>饭类（饭）</h2><ul>\n<li>大米</li>\n<li>馒头</li>\n<li>包子</li>\n<li>花卷</li>\n<li>汤圆</li>\n<li>抄手</li>\n<li>米粉</li>\n<li>米线</li>\n<li>粉丝</li>\n<li>粉条</li>\n<li>面条</li>\n<li>面块</li>\n</ul>\n<h2 id=\"汤类（汤）\"><a href=\"#汤类（汤）\" class=\"headerlink\" title=\"汤类（汤）\"></a>汤类（汤）</h2><ul>\n<li>菜叶汤</li>\n<li>南瓜汤</li>\n<li>紫菜汤</li>\n<li>西红柿鸡蛋汤</li>\n<li>滑肉汤</li>\n<li>排骨汤（配冬瓜、儿菜、芋头、莲藕、海带、萝卜）</li>\n<li>猪蹄汤（蹄髈汤）</li>\n<li>麻辣烫（配火腿肠、豆皮、豆腐、平菇、瘦肉）</li>\n</ul>\n<h1 id=\"调料\"><a href=\"#调料\" class=\"headerlink\" title=\"调料\"></a>调料</h1><blockquote>\n<ul>\n<li><a href=\"http://www.360doc.com/content/22/0509/08/67691349_1030438555.shtml\">厨房必备，10大类调味品，100种调料习性用途用法图片大全</a></li>\n</ul>\n</blockquote>\n<h2 id=\"佐料\"><a href=\"#佐料\" class=\"headerlink\" title=\"佐料\"></a>佐料</h2><h3 id=\"基础\"><a href=\"#基础\" class=\"headerlink\" title=\"基础\"></a>基础</h3><ul>\n<li>油：营养必需品，包含猪油、菜油、香油</li>\n<li>盐：营养必需品，包含碘盐、无碘盐</li>\n<li>酱：提鲜和上色，包含酱油（生抽、老抽）</li>\n<li>醋：去腥和开胃，包含白醋、果醋（苹果醋）</li>\n<li>姜：去腥和驱寒，包含生姜、老姜</li>\n<li>蒜：增香和杀菌，包含大蒜、小蒜</li>\n<li>葱：增香和装饰，包含大葱、小葱</li>\n</ul>\n<h3 id=\"提味\"><a href=\"#提味\" class=\"headerlink\" title=\"提味\"></a>提味</h3><ul>\n<li>辣椒：增辣（辛辣）</li>\n<li>胡椒：增辣（微辣）</li>\n<li>麻椒：增麻（重麻）</li>\n<li>花椒：增麻（微麻）</li>\n<li>红糖：增甜（重甜）</li>\n<li>白糖：增甜（微甜）</li>\n</ul>\n<h3 id=\"增香\"><a href=\"#增香\" class=\"headerlink\" title=\"增香\"></a>增香</h3><ul>\n<li>芝麻：增香</li>\n</ul>\n<h2 id=\"酱料\"><a href=\"#酱料\" class=\"headerlink\" title=\"酱料\"></a>酱料</h2><blockquote>\n<ul>\n<li><a href=\"https://new.qq.com/rain/a/20210420A0FE7700\">老抽、生抽、酱油、蚝油、豉油、味极鲜的区别，应该了解</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1742566084162089293\">豆豉和豆瓣酱的区别在哪里</a></li>\n</ul>\n</blockquote>\n<p>酱油：分为生抽和老抽，生抽提鲜，老抽上色<br>蚝油：提鲜<br>料酒：去腥<br>豆豉：提味<br>豆瓣酱：提味</p>\n<h2 id=\"香料\"><a href=\"#香料\" class=\"headerlink\" title=\"香料\"></a>香料</h2><blockquote>\n<ul>\n<li><a href=\"https://new.qq.com/rain/a/20200610A0S5W200\">中国地道的“五香”是哪“五种”</a></li>\n</ul>\n</blockquote>\n<p>花椒：<br>八角：又称大茴香<br>桂皮：<br>草果：<br>香叶：</p>\n<p>五香粉 十三香</p>\n<h1 id=\"烹饪\"><a href=\"#烹饪\" class=\"headerlink\" title=\"烹饪\"></a>烹饪</h1><h2 id=\"烹饪手艺\"><a href=\"#烹饪手艺\" class=\"headerlink\" title=\"烹饪手艺\"></a>烹饪手艺</h2><h3 id=\"切菜\"><a href=\"#切菜\" class=\"headerlink\" title=\"切菜\"></a>切菜</h3><h3 id=\"配料\"><a href=\"#配料\" class=\"headerlink\" title=\"配料\"></a>配料</h3><h3 id=\"颠勺\"><a href=\"#颠勺\" class=\"headerlink\" title=\"颠勺\"></a>颠勺</h3><h2 id=\"烹饪方式\"><a href=\"#烹饪方式\" class=\"headerlink\" title=\"烹饪方式\"></a>烹饪方式</h2><p>蒸炒煮煎炸烤</p>\n<p>煎：半接触，表面接触油<br>炸：全接触，浸泡在油里<br>烤：无接触，靠热量烤熟</p>\n<h3 id=\"蒸\"><a href=\"#蒸\" class=\"headerlink\" title=\"蒸\"></a>蒸</h3><p>饭 鸡蛋 包子 馒头 花卷</p>\n<h3 id=\"炒\"><a href=\"#炒\" class=\"headerlink\" title=\"炒\"></a>炒</h3><p>菜 肉</p>\n<h3 id=\"煮\"><a href=\"#煮\" class=\"headerlink\" title=\"煮\"></a>煮</h3><p>汤 麻辣烫 面条 抄手 汤圆</p>\n<h3 id=\"煎\"><a href=\"#煎\" class=\"headerlink\" title=\"煎\"></a>煎</h3><p>蛋 饼 鱼</p>\n<h3 id=\"炸\"><a href=\"#炸\" class=\"headerlink\" title=\"炸\"></a>炸</h3><p>花生米 酥肉 鸡腿 鸡翅 春卷</p>\n<h3 id=\"烤\"><a href=\"#烤\" class=\"headerlink\" title=\"烤\"></a>烤</h3><p>肉（五花肉、鸡鸭、鱼）</p>\n<h2 id=\"烹饪厨具\"><a href=\"#烹饪厨具\" class=\"headerlink\" title=\"烹饪厨具\"></a>烹饪厨具</h2><h3 id=\"蒸-1\"><a href=\"#蒸-1\" class=\"headerlink\" title=\"蒸\"></a>蒸</h3><p>蒸锅 蒸笼</p>\n<h3 id=\"炒-1\"><a href=\"#炒-1\" class=\"headerlink\" title=\"炒\"></a>炒</h3><p>圆底锅</p>\n<h3 id=\"煮-1\"><a href=\"#煮-1\" class=\"headerlink\" title=\"煮\"></a>煮</h3><p>高压锅</p>\n<h3 id=\"煎-1\"><a href=\"#煎-1\" class=\"headerlink\" title=\"煎\"></a>煎</h3><p>平底锅 </p>\n<h3 id=\"炸-1\"><a href=\"#炸-1\" class=\"headerlink\" title=\"炸\"></a>炸</h3><p>油炸锅 空气炸锅</p>\n<h3 id=\"烤-1\"><a href=\"#烤-1\" class=\"headerlink\" title=\"烤\"></a>烤</h3><p>烤箱 烤炉 电饼铛</p>\n<h3 id=\"热\"><a href=\"#热\" class=\"headerlink\" title=\"热\"></a>热</h3><p>微波炉</p>\n<h2 id=\"烹饪标准\"><a href=\"#烹饪标准\" class=\"headerlink\" title=\"烹饪标准\"></a>烹饪标准</h2><p>色香味意形养</p>\n<h3 id=\"色\"><a href=\"#色\" class=\"headerlink\" title=\"色\"></a>色</h3><p>颜色</p>\n<h3 id=\"香\"><a href=\"#香\" class=\"headerlink\" title=\"香\"></a>香</h3><p>香味</p>\n<h3 id=\"味\"><a href=\"#味\" class=\"headerlink\" title=\"味\"></a>味</h3><p>味道</p>\n<h3 id=\"意\"><a href=\"#意\" class=\"headerlink\" title=\"意\"></a>意</h3><p>意义</p>\n<h3 id=\"形\"><a href=\"#形\" class=\"headerlink\" title=\"形\"></a>形</h3><p>形状</p>\n<h3 id=\"养\"><a href=\"#养\" class=\"headerlink\" title=\"养\"></a>养</h3><p>养生</p>\n<h2 id=\"烹饪口味\"><a href=\"#烹饪口味\" class=\"headerlink\" title=\"烹饪口味\"></a>烹饪口味</h2><p>五感（由近到远）：听觉 视觉 嗅觉 触觉 味觉</p>\n<p>视觉：颜色 造型<br>嗅觉：香味 臭味<br>味觉：酸甜苦辣咸鲜麻</p>\n<h3 id=\"酸\"><a href=\"#酸\" class=\"headerlink\" title=\"酸\"></a>酸</h3><h3 id=\"甜\"><a href=\"#甜\" class=\"headerlink\" title=\"甜\"></a>甜</h3><h3 id=\"苦\"><a href=\"#苦\" class=\"headerlink\" title=\"苦\"></a>苦</h3><h3 id=\"辣\"><a href=\"#辣\" class=\"headerlink\" title=\"辣\"></a>辣</h3><h3 id=\"咸\"><a href=\"#咸\" class=\"headerlink\" title=\"咸\"></a>咸</h3><h3 id=\"鲜\"><a href=\"#鲜\" class=\"headerlink\" title=\"鲜\"></a>鲜</h3><h3 id=\"麻\"><a href=\"#麻\" class=\"headerlink\" title=\"麻\"></a>麻</h3><h1 id=\"营养\"><a href=\"#营养\" class=\"headerlink\" title=\"营养\"></a>营养</h1><h2 id=\"糖\"><a href=\"#糖\" class=\"headerlink\" title=\"糖\"></a>糖</h2><p>糖 碳水化合物 淀粉</p>\n<h3 id=\"白糖\"><a href=\"#白糖\" class=\"headerlink\" title=\"白糖\"></a>白糖</h3><h3 id=\"冰糖\"><a href=\"#冰糖\" class=\"headerlink\" title=\"冰糖\"></a>冰糖</h3><h3 id=\"红糖\"><a href=\"#红糖\" class=\"headerlink\" title=\"红糖\"></a>红糖</h3><h2 id=\"脂肪\"><a href=\"#脂肪\" class=\"headerlink\" title=\"脂肪\"></a>脂肪</h2><h2 id=\"蛋白质\"><a href=\"#蛋白质\" class=\"headerlink\" title=\"蛋白质\"></a>蛋白质</h2><p>维生素</p>\n<h1 id=\"风味\"><a href=\"#风味\" class=\"headerlink\" title=\"风味\"></a>风味</h1><h2 id=\"腌制\"><a href=\"#腌制\" class=\"headerlink\" title=\"腌制\"></a>腌制</h2><h2 id=\"风干\"><a href=\"#风干\" class=\"headerlink\" title=\"风干\"></a>风干</h2><h2 id=\"浸泡\"><a href=\"#浸泡\" class=\"headerlink\" title=\"浸泡\"></a>浸泡</h2><h2 id=\"烟熏\"><a href=\"#烟熏\" class=\"headerlink\" title=\"烟熏\"></a>烟熏</h2><h2 id=\"发酵\"><a href=\"#发酵\" class=\"headerlink\" title=\"发酵\"></a>发酵</h2>","categories":["+ essay"],"tags":["+ essay"]},{"title":"finance","url":"/2017/05/01/essay/knowledge/finance/","content":"","categories":["+ essay"],"tags":["+ essay"]},{"title":"geography","url":"/2017/05/01/essay/knowledge/geography/","content":"","categories":["+ essay"],"tags":["+ essay"]},{"title":"life","url":"/2017/05/01/essay/experience/life/","content":"<h1 id=\"日常用品\"><a href=\"#日常用品\" class=\"headerlink\" title=\"日常用品\"></a>日常用品</h1><p>饮食用品<br>矿泉水 可乐 豆浆粉 泡面 面包</p>\n<p>洗漱用品<br>香皂 香皂盒 洗发露 沐浴露 牙膏 牙刷</p>\n<p>清洁用品<br>湿巾 抽纸 卷筒纸</p>\n<p>洗涤用品<br>洗衣粉 洗洁精 洗手液 盆子 水桶</p>\n<p>晾晒用品<br>晾衣杆 衣架<br>带夹子的衣架 袜子晾晒架 铺盖晾晒架</p>\n<p>防护用品<br>蚊香 打火机</p>\n<p>穿着用品<br>衣服 裤子 内裤 外套 拖鞋 鞋子 袜子<br>鞋垫</p>\n<p>床上用品<br>睡衣 睡裤 眼罩 耳罩 床单 被子 枕头<br>夏凉被 冬暖被</p>\n<p>电器用品<br>插线板 电风扇 小风扇</p>\n<p>五金用品<br>卷尺 美工刀 螺丝刀 夹钳 锤子</p>\n<p>其他用品<br>收纳盒 烧水壶 电煮锅 手提袋 文件袋</p>\n<h1 id=\"商超物品\"><a href=\"#商超物品\" class=\"headerlink\" title=\"商超物品\"></a>商超物品</h1><p>饮食<br>粮油 蔬菜 水果 肉蛋 生鲜 冷冻<br>香烟 酒水 零食 牛奶 茶饮 冲泡</p>\n<p>清洁<br>肥皂 洗衣粉 香皂 沐浴露 洗发水牙膏 牙刷 纸</p>\n<p>生活<br>美妆 鞋服 箱包<br>珠宝 首饰 手表<br>玩具 宠物 鲜花</p>\n<p>娱乐<br>数码 相机<br>电子 手机 电脑 电视 音响 显示器 配件</p>\n<p>工作<br>办公 纸笔 打印机 </p>\n<p>学习<br>纸笔 计算器 课外书</p>\n<p>家电<br>冰箱 空调 洗衣机 电饭煲 烧水壶</p>\n<p>运动<br>体育 健身 户外</p>\n<p>健康<br>医药 保健</p>\n<p>艺术<br>乐器 美术 文学</p>\n<p>家居<br>厨具 炊具 灶具</p>\n<p>家具<br>桌子 凳子 沙发 衣柜 床</p>\n<h1 id=\"家用电器\"><a href=\"#家用电器\" class=\"headerlink\" title=\"家用电器\"></a>家用电器</h1><p>记录各种电器的说明书</p>\n<h2 id=\"燃气表\"><a href=\"#燃气表\" class=\"headerlink\" title=\"燃气表\"></a>燃气表</h2><h3 id=\"燃气自闭阀\"><a href=\"#燃气自闭阀\" class=\"headerlink\" title=\"燃气自闭阀\"></a>燃气自闭阀</h3><p><a href=\"https://cdv.webportal.top/v/dlis1Z35/\">燃气自闭阀</a></p>\n<h3 id=\"燃气电磁阀\"><a href=\"#燃气电磁阀\" class=\"headerlink\" title=\"燃气电磁阀\"></a>燃气电磁阀</h3><p><a href=\"http://www.nengtaicq.cn/wap/chanpinzhanshi/dianxingkeranqititanceqi/diancifasan/159.html\">家用电磁阀</a></p>\n<h3 id=\"燃气报警器\"><a href=\"#燃气报警器\" class=\"headerlink\" title=\"燃气报警器\"></a>燃气报警器</h3><p><a href=\"http://www.nengtaicq.cn/wap/chanpinzhanshi/dianxingkeranqititanceqi/baojingqi/157.html\">家用报警器TP010C</a></p>\n<p><a href=\"http://gas.gridmis.com/deviceDetail/index.html?handle=88.209.206/1661538949585309879\">家用报警器设备详情</a></p>\n<h2 id=\"华帝燃气灶\"><a href=\"#华帝燃气灶\" class=\"headerlink\" title=\"华帝燃气灶\"></a>华帝燃气灶</h2><p>型号：JZT-BHC836B1</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/vatti/index.html?uid=8amqe\">https://ela.bbqk.com/vatti/index.html?uid=8amqe</a></p>\n<h2 id=\"华帝油烟机\"><a href=\"#华帝油烟机\" class=\"headerlink\" title=\"华帝油烟机\"></a>华帝油烟机</h2><p>型号：CXW-220-J639BH</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/vatti/index.html?uid=taoxy\">https://ela.bbqk.com/vatti/index.html?uid=taoxy</a></p>\n<h2 id=\"华帝热水器\"><a href=\"#华帝热水器\" class=\"headerlink\" title=\"华帝热水器\"></a>华帝热水器</h2><p>型号：JSQ30-Q16JH1</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/vatti/index.html?uid=bc5nt\">https://ela.bbqk.com/vatti/index.html?uid=bc5nt</a></p>\n<h2 id=\"苏泊尔电饭煲\"><a href=\"#苏泊尔电饭煲\" class=\"headerlink\" title=\"苏泊尔电饭煲\"></a>苏泊尔电饭煲</h2><p>型号：CFXB30FC29-60</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/index.html?uid=1bkq0\">https://ela.bbqk.com/index.html?uid=1bkq0</a></p>\n<p><a href=\"https://www.supor.com.cn/Upload/News/0f3cbab038ac426c9f315a0681bc6c02.pdf\">苏泊尔电饭煲说明书</a></p>\n<h2 id=\"苏泊尔烧水壶\"><a href=\"#苏泊尔烧水壶\" class=\"headerlink\" title=\"苏泊尔烧水壶\"></a>苏泊尔烧水壶</h2><h2 id=\"美的冰箱\"><a href=\"#美的冰箱\" class=\"headerlink\" title=\"美的冰箱\"></a>美的冰箱</h2><p>型号：BCD-433WGPM</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/index.html?uid=8bzwc\">https://ela.bbqk.com/index.html?uid=8bzwc</a></p>\n<h2 id=\"格力空调\"><a href=\"#格力空调\" class=\"headerlink\" title=\"格力空调\"></a>格力空调</h2><p>型号：KFR-35GW&#x2F;(35564)FNhAc-B3</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/gree/index.html?uid=8c7bn\">https://ela.bbqk.com/gree/index.html?uid=8c7bn</a></p>\n<h2 id=\"小天鹅洗衣机\"><a href=\"#小天鹅洗衣机\" class=\"headerlink\" title=\"小天鹅洗衣机\"></a>小天鹅洗衣机</h2><p>型号：TBM90-7188WIDCLG</p>\n<p>中国能效标识：<a href=\"https://ela.bbqk.com/index.html?uid=6brxe\">https://ela.bbqk.com/index.html?uid=6brxe</a></p>\n<p><a href=\"https://filecmms.midea.com/plmdescription/FastStorageHandbook/1-1000/0000000142_B2_TBM90-7188WIDCLG%E7%94%B5%E5%AD%90%E8%AF%B4%E6%98%8E%E4%B9%A6.pdf\">小天鹅波轮全自动洗衣机说明书</a></p>\n<p><a href=\"https://qrcode.midea.com/index.html?v=2&type=0000DA31338000751&mode=000&tsn=0000DA3133800075181155M00629#/\">小天鹅波轮全自动洗衣机保修网址</a></p>\n<p>产品型号：TBM90-7188WIDCLG<br>机身条码：3133800075181155M00629</p>\n","categories":["+ essay"],"tags":["+ essay"]},{"title":"study","url":"/2017/05/01/essay/experience/study/","content":"<h1 id=\"四六级成绩查询\"><a href=\"#四六级成绩查询\" class=\"headerlink\" title=\"四六级成绩查询\"></a>四六级成绩查询</h1><p>根据成绩报告单查询地址：<a href=\"https://cjcx.neea.edu.cn/html1/folder/21033/658-1.htm\">https://cjcx.neea.edu.cn/html1/folder/21033/658-1.htm</a></p>\n<p>六级成绩报告单：132237063002498<br>四级成绩报告单：122137063002603</p>\n<p>六级成绩：443<br>四级成绩：474</p>\n<h1 id=\"学历证书查询\"><a href=\"#学历证书查询\" class=\"headerlink\" title=\"学历证书查询\"></a>学历证书查询</h1><p>学历证书查询：<a href=\"https://www.chsi.com.cn/xlcx/lscx/query.do\">https://www.chsi.com.cn/xlcx/lscx/query.do</a><br>学位证书查询：<a href=\"https://www.chsi.com.cn/xwcx/lscx/query.do\">https://www.chsi.com.cn/xwcx/lscx/query.do</a></p>\n<p>毕业证书编号 104251201505003371<br>学位证书编号 1042542015003371</p>\n<h1 id=\"人事档案查询\"><a href=\"#人事档案查询\" class=\"headerlink\" title=\"人事档案查询\"></a>人事档案查询</h1><p>在社保网站 <a href=\"https://12333.gov.cn/portal/service_catalog\">https://12333.gov.cn/portal/service_catalog</a> 里选择 <code>档案存档情况查看</code> 可以查询</p>\n","categories":["+ essay"],"tags":["+ essay"]},{"title":"work","url":"/2017/05/01/essay/experience/work/","content":"<h1 id=\"工作形式\"><a href=\"#工作形式\" class=\"headerlink\" title=\"工作形式\"></a>工作形式</h1><ul>\n<li>打工</li>\n<li>摆摊</li>\n<li>开店</li>\n</ul>\n<h1 id=\"打工去向\"><a href=\"#打工去向\" class=\"headerlink\" title=\"打工去向\"></a>打工去向</h1><h2 id=\"私企\"><a href=\"#私企\" class=\"headerlink\" title=\"私企\"></a>私企</h2><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/38021133\">劳务外包和劳务派遣有什么区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>正式工</li>\n<li>劳务外包</li>\n<li>劳务派遣</li>\n</ul>\n<h3 id=\"互联网大厂\"><a href=\"#互联网大厂\" class=\"headerlink\" title=\"互联网大厂\"></a>互联网大厂</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39578487/article/details/107818508\">各地互联网大厂名单</a></li>\n<li><a href=\"https://blog.csdn.net/cz_00001/article/details/121762784\">2022年最值得去的100家互联网大厂有哪些</a></li>\n</ul>\n</blockquote>\n<h3 id=\"软件外包公司\"><a href=\"#软件外包公司\" class=\"headerlink\" title=\"软件外包公司\"></a>软件外包公司</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ylguoguo6666/article/details/129922011\">国内IT软件外包公司汇总（2023 最新版）</a></li>\n</ul>\n</blockquote>\n<h2 id=\"公企\"><a href=\"#公企\" class=\"headerlink\" title=\"公企\"></a>公企</h2><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/425754875\">公务员、国企和事业单位有什么区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>公务员</li>\n<li>事业单位</li>\n<li>国企和央企</li>\n</ul>\n<h3 id=\"国企\"><a href=\"#国企\" class=\"headerlink\" title=\"国企\"></a>国企</h3><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/599880625\">三桶油</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/135184584\">二大电网</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/366376606\">三大运营商</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/345391170\">中国银行分类</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/109369360\">金融产品分类</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>邮政：中国邮政</li>\n<li>烟草：中国烟草</li>\n<li>石油：三桶油（中石油、中石化、中海油）</li>\n<li>电网：二大电网（国家电网、南方电网）</li>\n<li>通信：三大运营商（移动、联通、电信）</li>\n<li>银行：六大行（中国银行、工商银行、农业银行、建设银行、交通银行、邮政银行）、城市银行、商业银行</li>\n<li>金融：股票、基金、证券、债券、信托、期货、国债、外汇</li>\n<li>保险：</li>\n</ul>\n<h1 id=\"面试指南\"><a href=\"#面试指南\" class=\"headerlink\" title=\"面试指南\"></a>面试指南</h1><h2 id=\"Offer疑问\"><a href=\"#Offer疑问\" class=\"headerlink\" title=\"Offer疑问\"></a>Offer疑问</h2><ol>\n<li>是不是周末双休</li>\n<li>上下班时间和午休</li>\n<li>试用期时间和工资</li>\n<li>工作地点和班车</li>\n<li>五险一金比例</li>\n<li>加班（调休或加班费）</li>\n<li>餐补</li>\n<li>出差</li>\n<li>外派</li>\n</ol>\n<h1 id=\"入职指引\"><a href=\"#入职指引\" class=\"headerlink\" title=\"入职指引\"></a>入职指引</h1><h2 id=\"入职须知\"><a href=\"#入职须知\" class=\"headerlink\" title=\"入职须知\"></a>入职须知</h2><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/609033250\">常说的OA系统、ERP系统、CRM系统是什么</a></li>\n</ul>\n</blockquote>\n<ol>\n<li>合同</li>\n<li>电脑和显示器</li>\n<li>网络和打印机</li>\n<li>邮箱</li>\n<li>OA</li>\n</ol>\n<blockquote>\n<p>OA ERP CRM</p>\n</blockquote>\n<h1 id=\"公司架构\"><a href=\"#公司架构\" class=\"headerlink\" title=\"公司架构\"></a>公司架构</h1><p>人事部 负责人员管理<br>行政部 负责事物管理<br>  前勤 前台 秘书<br>  后勤 保洁 保安 司机<br>  物资 办公用品 清洁用品<br>  设备 电脑 打印机 网络<br>  食堂 厨师 服务员<br>财务部 负责资金管理<br>科技部 负责产品研发<br>  项目经理 负责功能的设计和项目管理 PM<br>  设计师 负责界面的设计和用户体验 UI UE<br>  研发工程师 负责产品的实现和交付 RD FE BE<br>  质量工程师 负责产品的质量和测试 QA<br>  安全工程师 负责产品得安全和防护 SE<br>  运维工程师 负责产品的部署和维护 OPS<br>  pm product manger 或者 project manager<br>  ui user interface<br>  ue user experience<br>  rd research developer<br>  fe frontend engineer<br>  be backend engineer<br>  qa quality assurance<br>  se security engineer<br>  ops opreations<br>生产部 负责产品生产<br>销售部 负责产品销售<br>运营部 负责产品运营<br>营销部 负责产品营销<br>  策划 负责方案策划<br>  设计 负责宣传设计<br>  活动 负责活动推广<br>宣传部 负责公司宣传<br>  传统媒体 电视 报纸<br>  新媒体 网络<br>商务部 负责商务推广、商务合作、商业分析<br>  商推 负责商务推广 BD<br>  商合 负责商业合作 BC<br>  商分 负责商业分析 BA<br>  商智 负责商业智能 BI<br>  bd business development<br>  bc business cooperation<br>  ba business analysis<br>  bi business intelligence<br>公关部 负责政府关系<br>战略部 负责制定战略<br>发展部 负责进行投资和引资</p>\n","categories":["+ essay"],"tags":["+ essay"]},{"title":"java-interview-summary","url":"/2017/09/03/tech/interview/interview-1-java/","content":"<h1 id=\"java面试指南\"><a href=\"#java面试指南\" class=\"headerlink\" title=\"java面试指南\"></a>java面试指南</h1><blockquote>\n<ul>\n<li><a href=\"https://javaguide.cn/home.html\">java面试指南</a></li>\n<li><a href=\"https://xiaolincoding.com/\">小林图解计算机</a></li>\n</ul>\n</blockquote>\n<h1 id=\"java面试合集\"><a href=\"#java面试合集\" class=\"headerlink\" title=\"java面试合集\"></a>java面试合集</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/adminpd/category_10709361.html\">Java面试合集1</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58479954/category_11813124.html\">Java面试合集2</a></li>\n<li><a href=\"https://blog.csdn.net/m0_48795607/category_10390417.html\">Java面试合集3</a></li>\n</ul>\n</blockquote>\n<h1 id=\"java面试问答\"><a href=\"#java面试问答\" class=\"headerlink\" title=\"java面试问答\"></a>java面试问答</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_72885838/article/details/126250680\">java面试问答1</a></li>\n</ul>\n</blockquote>\n<h1 id=\"java面试专题（初级篇）\"><a href=\"#java面试专题（初级篇）\" class=\"headerlink\" title=\"java面试专题（初级篇）\"></a>java面试专题（初级篇）</h1><h2 id=\"Lang\"><a href=\"#Lang\" class=\"headerlink\" title=\"Lang\"></a>Lang</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44844089/article/details/105965915\">String面试专题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44399112/article/details/115652525\">Object面试专题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_51232471/article/details/119154374\">Container面试专题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concurrency\"><a href=\"#Concurrency\" class=\"headerlink\" title=\"Concurrency\"></a>Concurrency</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43122090/article/details/105508836\">Concurrency面试专题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wtyicy/article/details/115922106\">IO面试专题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/androidstarjack/article/details/122677800\">JVM面试专题</a></li>\n</ul>\n</blockquote>\n<h1 id=\"java面试专题（高级篇）\"><a href=\"#java面试专题（高级篇）\" class=\"headerlink\" title=\"java面试专题（高级篇）\"></a>java面试专题（高级篇）</h1><h2 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37840993/article/details/82149095\">Spring面试专题</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SpringData\"><a href=\"#SpringData\" class=\"headerlink\" title=\"SpringData\"></a>SpringData</h3><h4 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45498460/article/details/120739551\">Mybatis面试专题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/adminpd/article/details/122910606\">Mysql面试专题</a></li>\n<li><a href=\"https://xiaolincoding.com/mysql/\">小林图解Mysql</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/adminpd/article/details/122934938\">Redis面试专题</a></li>\n<li><a href=\"https://xiaolincoding.com/redis/\">小林图解Redis</a></li>\n</ul>\n</blockquote>\n<h2 id=\"MQ\"><a href=\"#MQ\" class=\"headerlink\" title=\"MQ\"></a>MQ</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_36755535/article/details/123553543\">MQ面试专题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38233258/article/details/125706595\">MQTT面试专题</a></li>\n<li><a href=\"https://blog.csdn.net/yanpenglei/article/details/120862224\">RabbitMQ常见面试题</a></li>\n<li><a href=\"https://blog.csdn.net/lupengfei1009/article/details/114525762\">RocketMQ常见面试题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28900249/article/details/90346599\">Kafka常见面试题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/128708648\">操作系统面试专题</a></li>\n<li><a href=\"https://xiaolincoding.com/os/\">小林图解系统</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Network\"><a href=\"#Network\" class=\"headerlink\" title=\"Network\"></a>Network</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34827674/category_9811520_2.html\">网络面试专题</a></li>\n<li><a href=\"https://xiaolincoding.com/network/\">小林图解网络</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39158966/article/details/130086041\">三天吃透计算机网络八股文</a></li>\n<li><a href=\"https://blog.csdn.net/yicixing7/article/details/79320821\">HTTP常见面试题</a></li>\n<li><a href=\"https://blog.csdn.net/u011626662/article/details/119025268\">TCP常见面试题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45020715/article/details/104064417\">IP常见面试题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HY_Moher/article/details/129799454\">Web面试专题</a></li>\n</ul>\n</blockquote>\n<h1 id=\"java面试总结（初级篇）\"><a href=\"#java面试总结（初级篇）\" class=\"headerlink\" title=\"java面试总结（初级篇）\"></a>java面试总结（初级篇）</h1><h2 id=\"Lang-1\"><a href=\"#Lang-1\" class=\"headerlink\" title=\"Lang\"></a>Lang</h2><h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><h4 id=\"String和StringBuilder、StringBuffer的区别\"><a href=\"#String和StringBuilder、StringBuffer的区别\" class=\"headerlink\" title=\"String和StringBuilder、StringBuffer的区别\"></a>String和StringBuilder、StringBuffer的区别</h4><h4 id=\"String为什么是不可变的\"><a href=\"#String为什么是不可变的\" class=\"headerlink\" title=\"String为什么是不可变的\"></a>String为什么是不可变的</h4><h3 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h3><h4 id=\"Object类的常见方法有哪些\"><a href=\"#Object类的常见方法有哪些\" class=\"headerlink\" title=\"Object类的常见方法有哪些\"></a>Object类的常见方法有哪些</h4><h4 id=\"equals和-x3D-x3D-的区别\"><a href=\"#equals和-x3D-x3D-的区别\" class=\"headerlink\" title=\"equals和&#x3D;&#x3D;的区别\"></a>equals和&#x3D;&#x3D;的区别</h4><h2 id=\"Container-1\"><a href=\"#Container-1\" class=\"headerlink\" title=\"Container\"></a>Container</h2><h3 id=\"Container-2\"><a href=\"#Container-2\" class=\"headerlink\" title=\"Container\"></a>Container</h3><h4 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h4><h5 id=\"ArrayList和LinkedList的区别\"><a href=\"#ArrayList和LinkedList的区别\" class=\"headerlink\" title=\"ArrayList和LinkedList的区别\"></a>ArrayList和LinkedList的区别</h5><h5 id=\"ArrayList和Vector的区别\"><a href=\"#ArrayList和Vector的区别\" class=\"headerlink\" title=\"ArrayList和Vector的区别\"></a>ArrayList和Vector的区别</h5><h5 id=\"Collections-synchronizedList和Vector的区别\"><a href=\"#Collections-synchronizedList和Vector的区别\" class=\"headerlink\" title=\"Collections.synchronizedList和Vector的区别\"></a>Collections.synchronizedList和Vector的区别</h5><h5 id=\"CopyOnWriteArrayList和Vector的区别\"><a href=\"#CopyOnWriteArrayList和Vector的区别\" class=\"headerlink\" title=\"CopyOnWriteArrayList和Vector的区别\"></a>CopyOnWriteArrayList和Vector的区别</h5><h5 id=\"CopyOnWriteArrayList和Collections-synchronizedList的区别\"><a href=\"#CopyOnWriteArrayList和Collections-synchronizedList的区别\" class=\"headerlink\" title=\"CopyOnWriteArrayList和Collections.synchronizedList的区别\"></a>CopyOnWriteArrayList和Collections.synchronizedList的区别</h5><h5 id=\"ArrayList和LinkedList增删查时间复杂度分析\"><a href=\"#ArrayList和LinkedList增删查时间复杂度分析\" class=\"headerlink\" title=\"ArrayList和LinkedList增删查时间复杂度分析\"></a>ArrayList和LinkedList增删查时间复杂度分析</h5><h5 id=\"为什么ArrayList实现了RandomAccess接口而LinkedList却没有\"><a href=\"#为什么ArrayList实现了RandomAccess接口而LinkedList却没有\" class=\"headerlink\" title=\"为什么ArrayList实现了RandomAccess接口而LinkedList却没有\"></a>为什么ArrayList实现了RandomAccess接口而LinkedList却没有</h5><h4 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h4><h5 id=\"HashMap和ConcurrentHashMap的区别\"><a href=\"#HashMap和ConcurrentHashMap的区别\" class=\"headerlink\" title=\"HashMap和ConcurrentHashMap的区别\"></a>HashMap和ConcurrentHashMap的区别</h5><h5 id=\"HashMap和Hashtable的区别\"><a href=\"#HashMap和Hashtable的区别\" class=\"headerlink\" title=\"HashMap和Hashtable的区别\"></a>HashMap和Hashtable的区别</h5><h5 id=\"Collections-synchronizedMap和Hashtable的区别\"><a href=\"#Collections-synchronizedMap和Hashtable的区别\" class=\"headerlink\" title=\"Collections.synchronizedMap和Hashtable的区别\"></a>Collections.synchronizedMap和Hashtable的区别</h5><h5 id=\"ConcurrentHashMap和Hashtable的区别\"><a href=\"#ConcurrentHashMap和Hashtable的区别\" class=\"headerlink\" title=\"ConcurrentHashMap和Hashtable的区别\"></a>ConcurrentHashMap和Hashtable的区别</h5><h5 id=\"ConcurrentHashMap和Collections-synchronizedMap的区别\"><a href=\"#ConcurrentHashMap和Collections-synchronizedMap的区别\" class=\"headerlink\" title=\"ConcurrentHashMap和Collections.synchronizedMap的区别\"></a>ConcurrentHashMap和Collections.synchronizedMap的区别</h5><h4 id=\"Queue\"><a href=\"#Queue\" class=\"headerlink\" title=\"Queue\"></a>Queue</h4><h5 id=\"Queue方法的区别\"><a href=\"#Queue方法的区别\" class=\"headerlink\" title=\"Queue方法的区别\"></a>Queue方法的区别</h5><h5 id=\"ArrayDeque和LinkedList的区别\"><a href=\"#ArrayDeque和LinkedList的区别\" class=\"headerlink\" title=\"ArrayDeque和LinkedList的区别\"></a>ArrayDeque和LinkedList的区别</h5><h5 id=\"ArrayBlockingQueue和LinkedBlockingQueue的区别\"><a href=\"#ArrayBlockingQueue和LinkedBlockingQueue的区别\" class=\"headerlink\" title=\"ArrayBlockingQueue和LinkedBlockingQueue的区别\"></a>ArrayBlockingQueue和LinkedBlockingQueue的区别</h5><h3 id=\"Traverse\"><a href=\"#Traverse\" class=\"headerlink\" title=\"Traverse\"></a>Traverse</h3><h4 id=\"Iterator和Itreable的区别\"><a href=\"#Iterator和Itreable的区别\" class=\"headerlink\" title=\"Iterator和Itreable的区别\"></a>Iterator和Itreable的区别</h4><h4 id=\"Iterator和ListIterator的区别\"><a href=\"#Iterator和ListIterator的区别\" class=\"headerlink\" title=\"Iterator和ListIterator的区别\"></a>Iterator和ListIterator的区别</h4><h4 id=\"List遍历时怎么安全的删除元素\"><a href=\"#List遍历时怎么安全的删除元素\" class=\"headerlink\" title=\"List遍历时怎么安全的删除元素\"></a>List遍历时怎么安全的删除元素</h4><h3 id=\"Sorting\"><a href=\"#Sorting\" class=\"headerlink\" title=\"Sorting\"></a>Sorting</h3><h4 id=\"Comparator和Comparable的区别\"><a href=\"#Comparator和Comparable的区别\" class=\"headerlink\" title=\"Comparator和Comparable的区别\"></a>Comparator和Comparable的区别</h4><h3 id=\"Nullable\"><a href=\"#Nullable\" class=\"headerlink\" title=\"Nullable\"></a>Nullable</h3><h4 id=\"ConcurrentHashMap为什么key和value不能为null\"><a href=\"#ConcurrentHashMap为什么key和value不能为null\" class=\"headerlink\" title=\"ConcurrentHashMap为什么key和value不能为null\"></a>ConcurrentHashMap为什么key和value不能为null</h4><h3 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h3><h4 id=\"List-1\"><a href=\"#List-1\" class=\"headerlink\" title=\"List\"></a>List</h4><h5 id=\"ArrayList是如何扩容的\"><a href=\"#ArrayList是如何扩容的\" class=\"headerlink\" title=\"ArrayList是如何扩容的\"></a>ArrayList是如何扩容的</h5><h4 id=\"Map-1\"><a href=\"#Map-1\" class=\"headerlink\" title=\"Map\"></a>Map</h4><h5 id=\"Map-2\"><a href=\"#Map-2\" class=\"headerlink\" title=\"Map\"></a>Map</h5><h6 id=\"为什么重写equals要重写hashCode\"><a href=\"#为什么重写equals要重写hashCode\" class=\"headerlink\" title=\"为什么重写equals要重写hashCode\"></a>为什么重写equals要重写hashCode</h6><h6 id=\"hash冲突如何解决\"><a href=\"#hash冲突如何解决\" class=\"headerlink\" title=\"hash冲突如何解决\"></a>hash冲突如何解决</h6><h5 id=\"HashMap\"><a href=\"#HashMap\" class=\"headerlink\" title=\"HashMap\"></a>HashMap</h5><h6 id=\"HashMap的核心逻辑\"><a href=\"#HashMap的核心逻辑\" class=\"headerlink\" title=\"HashMap的核心逻辑\"></a>HashMap的核心逻辑</h6><h6 id=\"java7和java8的HashMap区别\"><a href=\"#java7和java8的HashMap区别\" class=\"headerlink\" title=\"java7和java8的HashMap区别\"></a>java7和java8的HashMap区别</h6><h6 id=\"java8的HashMap为什么要用红黑树\"><a href=\"#java8的HashMap为什么要用红黑树\" class=\"headerlink\" title=\"java8的HashMap为什么要用红黑树\"></a>java8的HashMap为什么要用红黑树</h6><h6 id=\"java8的HashMap中的红黑树是如何排序的\"><a href=\"#java8的HashMap中的红黑树是如何排序的\" class=\"headerlink\" title=\"java8的HashMap中的红黑树是如何排序的\"></a>java8的HashMap中的红黑树是如何排序的</h6><h6 id=\"java8的HashMap中链表和红黑树的转换条件\"><a href=\"#java8的HashMap中链表和红黑树的转换条件\" class=\"headerlink\" title=\"java8的HashMap中链表和红黑树的转换条件\"></a>java8的HashMap中链表和红黑树的转换条件</h6><h6 id=\"java8的HashMap容量大小为什么必须是2的幂次方\"><a href=\"#java8的HashMap容量大小为什么必须是2的幂次方\" class=\"headerlink\" title=\"java8的HashMap容量大小为什么必须是2的幂次方\"></a>java8的HashMap容量大小为什么必须是2的幂次方</h6><h6 id=\"HashMap是如何扩容的\"><a href=\"#HashMap是如何扩容的\" class=\"headerlink\" title=\"HashMap是如何扩容的\"></a>HashMap是如何扩容的</h6><h6 id=\"HashMap有哪些并发问题\"><a href=\"#HashMap有哪些并发问题\" class=\"headerlink\" title=\"HashMap有哪些并发问题\"></a>HashMap有哪些并发问题</h6><h5 id=\"ConcurrentHashMap\"><a href=\"#ConcurrentHashMap\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h5><h6 id=\"ConcurrentHashMap的核心逻辑\"><a href=\"#ConcurrentHashMap的核心逻辑\" class=\"headerlink\" title=\"ConcurrentHashMap的核心逻辑\"></a>ConcurrentHashMap的核心逻辑</h6><h6 id=\"java7和java8的ConcurrentHashMap区别\"><a href=\"#java7和java8的ConcurrentHashMap区别\" class=\"headerlink\" title=\"java7和java8的ConcurrentHashMap区别\"></a>java7和java8的ConcurrentHashMap区别</h6><h6 id=\"java7的ConcurrentHashMap的并发度是什么\"><a href=\"#java7的ConcurrentHashMap的并发度是什么\" class=\"headerlink\" title=\"java7的ConcurrentHashMap的并发度是什么\"></a>java7的ConcurrentHashMap的并发度是什么</h6><h6 id=\"java8的ConcurrentHashMap为什么放弃了分段锁\"><a href=\"#java8的ConcurrentHashMap为什么放弃了分段锁\" class=\"headerlink\" title=\"java8的ConcurrentHashMap为什么放弃了分段锁\"></a>java8的ConcurrentHashMap为什么放弃了分段锁</h6><h6 id=\"ConcurrentHashMap是如何计算size的\"><a href=\"#ConcurrentHashMap是如何计算size的\" class=\"headerlink\" title=\"ConcurrentHashMap是如何计算size的\"></a>ConcurrentHashMap是如何计算size的</h6><h6 id=\"ConcurrentHashMap是如何扩容的\"><a href=\"#ConcurrentHashMap是如何扩容的\" class=\"headerlink\" title=\"ConcurrentHashMap是如何扩容的\"></a>ConcurrentHashMap是如何扩容的</h6><h6 id=\"ConcurrentHashMap还有并发问题吗\"><a href=\"#ConcurrentHashMap还有并发问题吗\" class=\"headerlink\" title=\"ConcurrentHashMap还有并发问题吗\"></a>ConcurrentHashMap还有并发问题吗</h6><h2 id=\"Concurrency-1\"><a href=\"#Concurrency-1\" class=\"headerlink\" title=\"Concurrency\"></a>Concurrency</h2><h3 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h3><h4 id=\"线程创建的方式\"><a href=\"#线程创建的方式\" class=\"headerlink\" title=\"线程创建的方式\"></a>线程创建的方式</h4><h4 id=\"线程的状态变化\"><a href=\"#线程的状态变化\" class=\"headerlink\" title=\"线程的状态变化\"></a>线程的状态变化</h4><h4 id=\"线程的控制方法\"><a href=\"#线程的控制方法\" class=\"headerlink\" title=\"线程的控制方法\"></a>线程的控制方法</h4><h4 id=\"线程的废弃方法\"><a href=\"#线程的废弃方法\" class=\"headerlink\" title=\"线程的废弃方法\"></a>线程的废弃方法</h4><h4 id=\"线程的相关问题\"><a href=\"#线程的相关问题\" class=\"headerlink\" title=\"线程的相关问题\"></a>线程的相关问题</h4><h5 id=\"线程和进程的区别\"><a href=\"#线程和进程的区别\" class=\"headerlink\" title=\"线程和进程的区别\"></a>线程和进程的区别</h5><h5 id=\"Runnable和Callable的区别\"><a href=\"#Runnable和Callable的区别\" class=\"headerlink\" title=\"Runnable和Callable的区别\"></a>Runnable和Callable的区别</h5><h5 id=\"Thread的start和run的区别\"><a href=\"#Thread的start和run的区别\" class=\"headerlink\" title=\"Thread的start和run的区别\"></a>Thread的start和run的区别</h5><h5 id=\"Thread的start能调用多次吗\"><a href=\"#Thread的start能调用多次吗\" class=\"headerlink\" title=\"Thread的start能调用多次吗\"></a>Thread的start能调用多次吗</h5><h5 id=\"Thread的sleep和yield的区别\"><a href=\"#Thread的sleep和yield的区别\" class=\"headerlink\" title=\"Thread的sleep和yield的区别\"></a>Thread的sleep和yield的区别</h5><h5 id=\"Thread的sleep和join的区别\"><a href=\"#Thread的sleep和join的区别\" class=\"headerlink\" title=\"Thread的sleep和join的区别\"></a>Thread的sleep和join的区别</h5><h5 id=\"Thread的join和wait的区别\"><a href=\"#Thread的join和wait的区别\" class=\"headerlink\" title=\"Thread的join和wait的区别\"></a>Thread的join和wait的区别</h5><h3 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h3><h4 id=\"ThreadLocal为什么会内存泄漏\"><a href=\"#ThreadLocal为什么会内存泄漏\" class=\"headerlink\" title=\"ThreadLocal为什么会内存泄漏\"></a>ThreadLocal为什么会内存泄漏</h4><h4 id=\"ThreadLocalMap的key为什么是弱引用\"><a href=\"#ThreadLocalMap的key为什么是弱引用\" class=\"headerlink\" title=\"ThreadLocalMap的key为什么是弱引用\"></a>ThreadLocalMap的key为什么是弱引用</h4><h4 id=\"ThreadLocalMap的value为什么是强引用\"><a href=\"#ThreadLocalMap的value为什么是强引用\" class=\"headerlink\" title=\"ThreadLocalMap的value为什么是强引用\"></a>ThreadLocalMap的value为什么是强引用</h4><h4 id=\"ThreadLocalMap为什么不用Thread做key\"><a href=\"#ThreadLocalMap为什么不用Thread做key\" class=\"headerlink\" title=\"ThreadLocalMap为什么不用Thread做key\"></a>ThreadLocalMap为什么不用Thread做key</h4><h4 id=\"ThreadLocal为什么要定义成静态变量\"><a href=\"#ThreadLocal为什么要定义成静态变量\" class=\"headerlink\" title=\"ThreadLocal为什么要定义成静态变量\"></a>ThreadLocal为什么要定义成静态变量</h4><h4 id=\"ThreadLocal和局部变量的区别\"><a href=\"#ThreadLocal和局部变量的区别\" class=\"headerlink\" title=\"ThreadLocal和局部变量的区别\"></a>ThreadLocal和局部变量的区别</h4><h3 id=\"Lock\"><a href=\"#Lock\" class=\"headerlink\" title=\"Lock\"></a>Lock</h3><h4 id=\"锁的作用\"><a href=\"#锁的作用\" class=\"headerlink\" title=\"锁的作用\"></a>锁的作用</h4><h4 id=\"锁的分类\"><a href=\"#锁的分类\" class=\"headerlink\" title=\"锁的分类\"></a>锁的分类</h4><h4 id=\"锁的原理\"><a href=\"#锁的原理\" class=\"headerlink\" title=\"锁的原理\"></a>锁的原理</h4><h4 id=\"锁的特性\"><a href=\"#锁的特性\" class=\"headerlink\" title=\"锁的特性\"></a>锁的特性</h4><h4 id=\"锁的问题\"><a href=\"#锁的问题\" class=\"headerlink\" title=\"锁的问题\"></a>锁的问题</h4><h4 id=\"synchronized同步锁\"><a href=\"#synchronized同步锁\" class=\"headerlink\" title=\"synchronized同步锁\"></a>synchronized同步锁</h4><h5 id=\"synchronized锁原理\"><a href=\"#synchronized锁原理\" class=\"headerlink\" title=\"synchronized锁原理\"></a>synchronized锁原理</h5><h5 id=\"synchronized锁膨胀\"><a href=\"#synchronized锁膨胀\" class=\"headerlink\" title=\"synchronized锁膨胀\"></a>synchronized锁膨胀</h5><h5 id=\"synchronized锁消除\"><a href=\"#synchronized锁消除\" class=\"headerlink\" title=\"synchronized锁消除\"></a>synchronized锁消除</h5><h5 id=\"synchronized锁粗化\"><a href=\"#synchronized锁粗化\" class=\"headerlink\" title=\"synchronized锁粗化\"></a>synchronized锁粗化</h5><h5 id=\"synchronized锁自旋\"><a href=\"#synchronized锁自旋\" class=\"headerlink\" title=\"synchronized锁自旋\"></a>synchronized锁自旋</h5><h5 id=\"synchronized和volatile的区别\"><a href=\"#synchronized和volatile的区别\" class=\"headerlink\" title=\"synchronized和volatile的区别\"></a>synchronized和volatile的区别</h5><h5 id=\"synchronized和Lock的区别\"><a href=\"#synchronized和Lock的区别\" class=\"headerlink\" title=\"synchronized和Lock的区别\"></a>synchronized和Lock的区别</h5><h4 id=\"ReentrantLock和ReentrantReadWriteLock\"><a href=\"#ReentrantLock和ReentrantReadWriteLock\" class=\"headerlink\" title=\"ReentrantLock和ReentrantReadWriteLock\"></a>ReentrantLock和ReentrantReadWriteLock</h4><h5 id=\"lock-lock-写在-try-代码块内部行吗\"><a href=\"#lock-lock-写在-try-代码块内部行吗\" class=\"headerlink\" title=\"lock.lock() 写在 try 代码块内部行吗\"></a>lock.lock() 写在 try 代码块内部行吗</h5><h5 id=\"如何安全的unlock\"><a href=\"#如何安全的unlock\" class=\"headerlink\" title=\"如何安全的unlock\"></a>如何安全的unlock</h5><h4 id=\"Atomic和CAS\"><a href=\"#Atomic和CAS\" class=\"headerlink\" title=\"Atomic和CAS\"></a>Atomic和CAS</h4><h4 id=\"AQS和LockSupport\"><a href=\"#AQS和LockSupport\" class=\"headerlink\" title=\"AQS和LockSupport\"></a>AQS和LockSupport</h4><h3 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h3><h4 id=\"FutureTask为什么支持传递给线程\"><a href=\"#FutureTask为什么支持传递给线程\" class=\"headerlink\" title=\"FutureTask为什么支持传递给线程\"></a>FutureTask为什么支持传递给线程</h4><h4 id=\"FutureTask的状态变化\"><a href=\"#FutureTask的状态变化\" class=\"headerlink\" title=\"FutureTask的状态变化\"></a>FutureTask的状态变化</h4><h3 id=\"Executor\"><a href=\"#Executor\" class=\"headerlink\" title=\"Executor\"></a>Executor</h3><h4 id=\"线程池的创建方式\"><a href=\"#线程池的创建方式\" class=\"headerlink\" title=\"线程池的创建方式\"></a>线程池的创建方式</h4><h4 id=\"线程池的核心参数\"><a href=\"#线程池的核心参数\" class=\"headerlink\" title=\"线程池的核心参数\"></a>线程池的核心参数</h4><h4 id=\"线程池的提交策略\"><a href=\"#线程池的提交策略\" class=\"headerlink\" title=\"线程池的提交策略\"></a>线程池的提交策略</h4><h4 id=\"线程池的饱和策略\"><a href=\"#线程池的饱和策略\" class=\"headerlink\" title=\"线程池的饱和策略\"></a>线程池的饱和策略</h4><h4 id=\"线程池的提交方式\"><a href=\"#线程池的提交方式\" class=\"headerlink\" title=\"线程池的提交方式\"></a>线程池的提交方式</h4><h5 id=\"submit和execute的区别\"><a href=\"#submit和execute的区别\" class=\"headerlink\" title=\"submit和execute的区别\"></a>submit和execute的区别</h5><h4 id=\"线程池的异常捕获\"><a href=\"#线程池的异常捕获\" class=\"headerlink\" title=\"线程池的异常捕获\"></a>线程池的异常捕获</h4><h4 id=\"线程池的关闭方式\"><a href=\"#线程池的关闭方式\" class=\"headerlink\" title=\"线程池的关闭方式\"></a>线程池的关闭方式</h4><h5 id=\"shutdown和shutdownNow的区别\"><a href=\"#shutdown和shutdownNow的区别\" class=\"headerlink\" title=\"shutdown和shutdownNow的区别\"></a>shutdown和shutdownNow的区别</h5><h4 id=\"线程池的状态变化\"><a href=\"#线程池的状态变化\" class=\"headerlink\" title=\"线程池的状态变化\"></a>线程池的状态变化</h4><h4 id=\"线程池是如何保证核心线程不被销毁的\"><a href=\"#线程池是如何保证核心线程不被销毁的\" class=\"headerlink\" title=\"线程池是如何保证核心线程不被销毁的\"></a>线程池是如何保证核心线程不被销毁的</h4><h2 id=\"IO-1\"><a href=\"#IO-1\" class=\"headerlink\" title=\"IO\"></a>IO</h2><h3 id=\"IO体系相关\"><a href=\"#IO体系相关\" class=\"headerlink\" title=\"IO体系相关\"></a>IO体系相关</h3><h3 id=\"IO模型相关\"><a href=\"#IO模型相关\" class=\"headerlink\" title=\"IO模型相关\"></a>IO模型相关</h3><h4 id=\"BIO和NIO的区别\"><a href=\"#BIO和NIO的区别\" class=\"headerlink\" title=\"BIO和NIO的区别\"></a>BIO和NIO的区别</h4><h4 id=\"Stream和Channel的区别\"><a href=\"#Stream和Channel的区别\" class=\"headerlink\" title=\"Stream和Channel的区别\"></a>Stream和Channel的区别</h4><h3 id=\"IO多路复用\"><a href=\"#IO多路复用\" class=\"headerlink\" title=\"IO多路复用\"></a>IO多路复用</h3><h4 id=\"C10K和epoll\"><a href=\"#C10K和epoll\" class=\"headerlink\" title=\"C10K和epoll\"></a>C10K和epoll</h4><h3 id=\"IO并发模型\"><a href=\"#IO并发模型\" class=\"headerlink\" title=\"IO并发模型\"></a>IO并发模型</h3><h4 id=\"Reactor和Proactor\"><a href=\"#Reactor和Proactor\" class=\"headerlink\" title=\"Reactor和Proactor\"></a>Reactor和Proactor</h4><h3 id=\"IO设计模式\"><a href=\"#IO设计模式\" class=\"headerlink\" title=\"IO设计模式\"></a>IO设计模式</h3><h2 id=\"JVM-1\"><a href=\"#JVM-1\" class=\"headerlink\" title=\"JVM\"></a>JVM</h2><h3 id=\"JVM运行数据分区\"><a href=\"#JVM运行数据分区\" class=\"headerlink\" title=\"JVM运行数据分区\"></a>JVM运行数据分区</h3><h3 id=\"JVM垃圾数据回收\"><a href=\"#JVM垃圾数据回收\" class=\"headerlink\" title=\"JVM垃圾数据回收\"></a>JVM垃圾数据回收</h3><h4 id=\"垃圾分代技术\"><a href=\"#垃圾分代技术\" class=\"headerlink\" title=\"垃圾分代技术\"></a>垃圾分代技术</h4><h4 id=\"垃圾判断算法\"><a href=\"#垃圾判断算法\" class=\"headerlink\" title=\"垃圾判断算法\"></a>垃圾判断算法</h4><h4 id=\"垃圾回收算法\"><a href=\"#垃圾回收算法\" class=\"headerlink\" title=\"垃圾回收算法\"></a>垃圾回收算法</h4><h4 id=\"垃圾回收时机\"><a href=\"#垃圾回收时机\" class=\"headerlink\" title=\"垃圾回收时机\"></a>垃圾回收时机</h4><h4 id=\"垃圾回收过程\"><a href=\"#垃圾回收过程\" class=\"headerlink\" title=\"垃圾回收过程\"></a>垃圾回收过程</h4><h4 id=\"垃圾回收器分类\"><a href=\"#垃圾回收器分类\" class=\"headerlink\" title=\"垃圾回收器分类\"></a>垃圾回收器分类</h4><h4 id=\"垃圾回收器搭配\"><a href=\"#垃圾回收器搭配\" class=\"headerlink\" title=\"垃圾回收器搭配\"></a>垃圾回收器搭配</h4><h1 id=\"java面试总结（高级篇）\"><a href=\"#java面试总结（高级篇）\" class=\"headerlink\" title=\"java面试总结（高级篇）\"></a>java面试总结（高级篇）</h1><h2 id=\"Spring-1\"><a href=\"#Spring-1\" class=\"headerlink\" title=\"Spring\"></a>Spring</h2><h3 id=\"Spring-2\"><a href=\"#Spring-2\" class=\"headerlink\" title=\"Spring\"></a>Spring</h3><h4 id=\"IOC\"><a href=\"#IOC\" class=\"headerlink\" title=\"IOC\"></a>IOC</h4><h5 id=\"Spring的bean对象的三种注册方式\"><a href=\"#Spring的bean对象的三种注册方式\" class=\"headerlink\" title=\"Spring的bean对象的三种注册方式\"></a>Spring的bean对象的三种注册方式</h5><h6 id=\"Service的和-Component区别\"><a href=\"#Service的和-Component区别\" class=\"headerlink\" title=\"@Service的和@Component区别\"></a>@Service的和@Component区别</h6><h6 id=\"Configuration和-Component的区别\"><a href=\"#Configuration和-Component的区别\" class=\"headerlink\" title=\"@Configuration和@Component的区别\"></a>@Configuration和@Component的区别</h6><h6 id=\"Bean和-Component的区别\"><a href=\"#Bean和-Component的区别\" class=\"headerlink\" title=\"@Bean和@Component的区别\"></a>@Bean和@Component的区别</h6><h5 id=\"Spring的bean依赖的三种注入方式\"><a href=\"#Spring的bean依赖的三种注入方式\" class=\"headerlink\" title=\"Spring的bean依赖的三种注入方式\"></a>Spring的bean依赖的三种注入方式</h5><h5 id=\"Spring自动装配\"><a href=\"#Spring自动装配\" class=\"headerlink\" title=\"Spring自动装配\"></a>Spring自动装配</h5><h5 id=\"Spring循环依赖\"><a href=\"#Spring循环依赖\" class=\"headerlink\" title=\"Spring循环依赖\"></a>Spring循环依赖</h5><h5 id=\"bean的作用域\"><a href=\"#bean的作用域\" class=\"headerlink\" title=\"bean的作用域\"></a>bean的作用域</h5><h5 id=\"bean的线程安全\"><a href=\"#bean的线程安全\" class=\"headerlink\" title=\"bean的线程安全\"></a>bean的线程安全</h5><h5 id=\"bean的生命周期\"><a href=\"#bean的生命周期\" class=\"headerlink\" title=\"bean的生命周期\"></a>bean的生命周期</h5><h5 id=\"IOC容器初始化过程\"><a href=\"#IOC容器初始化过程\" class=\"headerlink\" title=\"IOC容器初始化过程\"></a>IOC容器初始化过程</h5><h5 id=\"Spring设计模式\"><a href=\"#Spring设计模式\" class=\"headerlink\" title=\"Spring设计模式\"></a>Spring设计模式</h5><h4 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h4><h5 id=\"AOP的使用场景\"><a href=\"#AOP的使用场景\" class=\"headerlink\" title=\"AOP的使用场景\"></a>AOP的使用场景</h5><h5 id=\"AOP的核心概念\"><a href=\"#AOP的核心概念\" class=\"headerlink\" title=\"AOP的核心概念\"></a>AOP的核心概念</h5><h5 id=\"AOP的通知顺序\"><a href=\"#AOP的通知顺序\" class=\"headerlink\" title=\"AOP的通知顺序\"></a>AOP的通知顺序</h5><h5 id=\"AOP的失效场景\"><a href=\"#AOP的失效场景\" class=\"headerlink\" title=\"AOP的失效场景\"></a>AOP的失效场景</h5><h5 id=\"AOP的代理实现\"><a href=\"#AOP的代理实现\" class=\"headerlink\" title=\"AOP的代理实现\"></a>AOP的代理实现</h5><h3 id=\"SpringBoot\"><a href=\"#SpringBoot\" class=\"headerlink\" title=\"SpringBoot\"></a>SpringBoot</h3><h4 id=\"SpringBoot和Spring的区别\"><a href=\"#SpringBoot和Spring的区别\" class=\"headerlink\" title=\"SpringBoot和Spring的区别\"></a>SpringBoot和Spring的区别</h4><h4 id=\"SpringBootConfiguration\"><a href=\"#SpringBootConfiguration\" class=\"headerlink\" title=\"SpringBootConfiguration\"></a>SpringBootConfiguration</h4><h5 id=\"AutoConfiguration\"><a href=\"#AutoConfiguration\" class=\"headerlink\" title=\"AutoConfiguration\"></a>AutoConfiguration</h5><h4 id=\"SpringBootStarter\"><a href=\"#SpringBootStarter\" class=\"headerlink\" title=\"SpringBootStarter\"></a>SpringBootStarter</h4><h3 id=\"SpringWeb\"><a href=\"#SpringWeb\" class=\"headerlink\" title=\"SpringWeb\"></a>SpringWeb</h3><h4 id=\"SpringMvc\"><a href=\"#SpringMvc\" class=\"headerlink\" title=\"SpringMvc\"></a>SpringMvc</h4><h5 id=\"请求流程描述\"><a href=\"#请求流程描述\" class=\"headerlink\" title=\"请求流程描述\"></a>请求流程描述</h5><h5 id=\"请求过滤拦截\"><a href=\"#请求过滤拦截\" class=\"headerlink\" title=\"请求过滤拦截\"></a>请求过滤拦截</h5><h6 id=\"Filter（过滤器）和Interceptor（拦截器）对比\"><a href=\"#Filter（过滤器）和Interceptor（拦截器）对比\" class=\"headerlink\" title=\"Filter（过滤器）和Interceptor（拦截器）对比\"></a>Filter（过滤器）和Interceptor（拦截器）对比</h6><h6 id=\"Filter（过滤器）和Interceptor（拦截器）顺序\"><a href=\"#Filter（过滤器）和Interceptor（拦截器）顺序\" class=\"headerlink\" title=\"Filter（过滤器）和Interceptor（拦截器）顺序\"></a>Filter（过滤器）和Interceptor（拦截器）顺序</h6><h3 id=\"SpringData-1\"><a href=\"#SpringData-1\" class=\"headerlink\" title=\"SpringData\"></a>SpringData</h3><h4 id=\"Mybatis-1\"><a href=\"#Mybatis-1\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h4><h5 id=\"和-的区别\"><a href=\"#和-的区别\" class=\"headerlink\" title=\"${}和#{}的区别\"></a>${}和#{}的区别</h5><h5 id=\"where中的1-x3D-1的作用\"><a href=\"#where中的1-x3D-1的作用\" class=\"headerlink\" title=\"where中的1&#x3D;1的作用\"></a>where中的1&#x3D;1的作用</h5><h5 id=\"分页插件的基本原理\"><a href=\"#分页插件的基本原理\" class=\"headerlink\" title=\"分页插件的基本原理\"></a>分页插件的基本原理</h5><h4 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h4><h5 id=\"事务的实现方式\"><a href=\"#事务的实现方式\" class=\"headerlink\" title=\"事务的实现方式\"></a>事务的实现方式</h5><h5 id=\"事务的隔离级别\"><a href=\"#事务的隔离级别\" class=\"headerlink\" title=\"事务的隔离级别\"></a>事务的隔离级别</h5><h5 id=\"事务的传播特性\"><a href=\"#事务的传播特性\" class=\"headerlink\" title=\"事务的传播特性\"></a>事务的传播特性</h5><h3 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h3><h2 id=\"Mysql-1\"><a href=\"#Mysql-1\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h2><h2 id=\"Redis-1\"><a href=\"#Redis-1\" class=\"headerlink\" title=\"Redis\"></a>Redis</h2><h2 id=\"Mq\"><a href=\"#Mq\" class=\"headerlink\" title=\"Mq\"></a>Mq</h2><h2 id=\"System-1\"><a href=\"#System-1\" class=\"headerlink\" title=\"System\"></a>System</h2><h2 id=\"Network-1\"><a href=\"#Network-1\" class=\"headerlink\" title=\"Network\"></a>Network</h2><h2 id=\"Web-1\"><a href=\"#Web-1\" class=\"headerlink\" title=\"Web\"></a>Web</h2>","categories":["+ skill + interview"],"tags":["+ interview"]},{"title":"grammar","url":"/2017/07/01/lang/lang-1-java/junior/java-1-grammar/","content":"<h1 id=\"Language\"><a href=\"#Language\" class=\"headerlink\" title=\"Language\"></a>Language</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012963866/article/details/89395987\">JVM支持的语言</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42347634/article/details/114138433\">JVM语言的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28884137/article/details/129298982\">Java和JavaScript对比</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43207777/article/details/121889179\">Java和Python对比</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_70730532/article/details/126405302\">Java和Go对比</a></li>\n<li><a href=\"https://blog.csdn.net/cherrydreamsover/article/details/81835976\">C和C++的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012234115/article/details/39548729\">C和C++的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/DLQFHL/article/details/100737083\">C和C++的区别详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Specification\"><a href=\"#Specification\" class=\"headerlink\" title=\"Specification\"></a>Specification</h2><h3 id=\"Naming\"><a href=\"#Naming\" class=\"headerlink\" title=\"Naming\"></a>Naming</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u800820/article/details/119700293\">变量命名常用方式入门</a></li>\n<li><a href=\"https://blog.csdn.net/hsm_jasmine/article/details/104010909\">变量命名常用方式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39996739/article/details/111581751\">变量命名常用方式详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Syntax\"><a href=\"#Syntax\" class=\"headerlink\" title=\"Syntax\"></a>Syntax</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36193970/article/details/103066590\">java详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46075832/article/details/123630861\">java8新特性</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Pointer\"><a href=\"#Pointer\" class=\"headerlink\" title=\"Pointer\"></a>Pointer</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_52858062/article/details/116534830\">C++什么时候使用指针和引用简介</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37167788/article/details/106683376\">C++什么时候使用指针和引用入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42579072/article/details/106516727\">C++什么时候使用指针和引用进阶</a></li>\n<li><a href=\"https://blog.csdn.net/simon_2011/article/details/78119088\">C++什么时候使用指针和引用详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46657980/article/details/108855571\">C++什么时候使用指针和引用精进</a></li>\n<li><a href=\"https://blog.csdn.net/a3192048/article/details/84621775\">C++为什么有指针了还要有引用</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33757398/article/details/81259636\">空指针与野指针详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Handler\"><a href=\"#Handler\" class=\"headerlink\" title=\"Handler\"></a>Handler</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014041012/article/details/44878375\">句柄和指针的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/bigzql/article/details/111244244\">句柄和指针的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/perfectguyipeng/article/details/71189822\">句柄和指针的区别详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reference\"><a href=\"#Reference\" class=\"headerlink\" title=\"Reference\"></a>Reference</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/YL970302/article/details/86296428\">引用和指针的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41256281/article/details/90545595\">引用和指针的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weikangc/article/details/49762929\">引用和指针的区别详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Keyword\"><a href=\"#Keyword\" class=\"headerlink\" title=\"Keyword\"></a>Keyword</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45198663/article/details/126084123\">java关键字详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"final\"><a href=\"#final\" class=\"headerlink\" title=\"final\"></a>final</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jiang_wang01/article/details/118993058\">java的final关键字详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"final关键字的作用\"><a href=\"#final关键字的作用\" class=\"headerlink\" title=\"final关键字的作用\"></a>final关键字的作用</h3><ul>\n<li>修饰类：代表类不可以继承</li>\n<li>修饰字段：代表字段初始化后不能修改引用</li>\n<li>修饰方法：代表方法不可以被重写</li>\n</ul>\n<h3 id=\"final和finalize的区别\"><a href=\"#final和finalize的区别\" class=\"headerlink\" title=\"final和finalize的区别\"></a>final和finalize的区别</h3><ul>\n<li>final是一个关键字</li>\n<li>finalize是Object类的一个方法</li>\n</ul>\n<h2 id=\"this和super\"><a href=\"#this和super\" class=\"headerlink\" title=\"this和super\"></a>this和super</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jiang_wang01/article/details/119223302\">java的this和super关键字详解</a></li>\n<li><a href=\"https://blog.csdn.net/shalimu/article/details/105198961\">java的this详解</a></li>\n<li><a href=\"https://blog.csdn.net/pipizhen_/article/details/107165618\">java的super详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"implements和extends\"><a href=\"#implements和extends\" class=\"headerlink\" title=\"implements和extends\"></a>implements和extends</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39938767/article/details/80056922\">java的implements和extends详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_64089863/article/details/128008076\">内部类和匿名类基本使用和区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_51873764/article/details/129742441\">类爆炸问题详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Interface（接口）\"><a href=\"#Interface（接口）\" class=\"headerlink\" title=\"Interface（接口）\"></a>Interface（接口）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_19782019/article/details/80259836\">java接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixx3/article/details/81194499\">java8之接口新特性</a></li>\n<li><a href=\"https://blog.csdn.net/sl1992/article/details/81750599\">java8之函数式接口</a></li>\n<li><a href=\"https://blog.csdn.net/m0_38120325/article/details/89637317\">java8之接口和抽象类的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/fishbone_/article/details/85158497\">java8之接口和抽象类的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/waylon_ma/article/details/119152022\">java8之接口的默认方法冲突入门</a></li>\n<li><a href=\"https://blog.csdn.net/ld3205/article/details/83273663\">java8之接口的默认方法冲突详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Abstract-Class（抽象类）\"><a href=\"#Abstract-Class（抽象类）\" class=\"headerlink\" title=\"Abstract Class（抽象类）\"></a>Abstract Class（抽象类）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43514707/article/details/110824159\">抽象类入门</a></li>\n<li><a href=\"https://blog.csdn.net/wei_zhi/article/details/52736350\">抽象类详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Inner-Class（内部类）\"><a href=\"#Inner-Class（内部类）\" class=\"headerlink\" title=\"Inner Class（内部类）\"></a>Inner Class（内部类）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/108006609\">内部类入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhao_miao/article/details/83245816\">内部类详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Anonymous-Class（匿名类）\"><a href=\"#Anonymous-Class（匿名类）\" class=\"headerlink\" title=\"Anonymous Class（匿名类）\"></a>Anonymous Class（匿名类）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cao124383050/article/details/102862120\">匿名类入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiaotuwoaini/article/details/51542059\">匿名类详解</a></li>\n<li><a href=\"https://blog.csdn.net/tyrroo/article/details/82896662\">匿名类原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35988274/article/details/99620221\">匿名类的类名.this和this</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/124946774\">匿名类之内存泄漏详解</a></li>\n<li><a href=\"https://www.codenong.com/21009712/\">匿名类之性能问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31749835/article/details/90745384\">匿名类之性能问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/AlbenXie/article/details/109318659\">匿名类之HashMap初始化赋值的问题</a></li>\n<li><a href=\"https://blog.csdn.net/banzhuanhu/article/details/112277154\">匿名类之Lambda表达式为什么运行效率低</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Enum-Class（枚举类）\"><a href=\"#Enum-Class（枚举类）\" class=\"headerlink\" title=\"Enum Class（枚举类）\"></a>Enum Class（枚举类）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27093465/article/details/52180865\">枚举类入门</a></li>\n<li><a href=\"https://blog.csdn.net/mhmyqn/article/details/48087247\">枚举类详解</a></li>\n<li><a href=\"https://blog.csdn.net/bigfc/article/details/126389288\">枚举类之name</a></li>\n<li><a href=\"https://blog.csdn.net/lili625/article/details/44651113\">枚举类之ordinal</a></li>\n<li><a href=\"https://blog.csdn.net/m0_43401436/article/details/104130410\">枚举类之valueOf</a></li>\n<li><a href=\"https://blog.csdn.net/xgw1010/article/details/108402444\">枚举类之接口参数和返回值是使用枚举还是常量</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39010254/article/details/119535366\">枚举类之接口返回值一定不允许使用枚举类型吗</a></li>\n<li><a href=\"https://blog.csdn.net/zjcjava/article/details/78077736\">枚举类之序列化问题</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Constructor\"><a href=\"#Constructor\" class=\"headerlink\" title=\"Constructor\"></a>Constructor</h1><p>new Constructor</p>\n<h1 id=\"Field\"><a href=\"#Field\" class=\"headerlink\" title=\"Field\"></a>Field</h1><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/29643012\">java字段之能直接获取到字段的名字吗</a></li>\n<li><a href=\"https://9to5answer.com/nameof-equivalent-in-java\">java字段之获取字段名字的方法</a></li>\n<li><a href=\"http://www.javawenti.com/?post=14028\">java字段之实现nameof操作符的相关讨论入门</a></li>\n<li><a href=\"https://mobiuscode.dev/posts/NameOf-Expression-For-Java/\">java字段之实现nameof操作符的相关讨论进阶</a></li>\n<li><a href=\"https://stackoverflow.com/questions/14944333/get-name-of-a-field\">java字段之实现nameof操作符的相关讨论详解</a></li>\n<li><a href=\"https://github.com/strangeway-org/nameof\">java字段之实现nameof操作符的解决方案入门</a></li>\n<li><a href=\"https://github.com/mobiuscode-de/nameof\">java字段之实现nameof操作符的解决方案详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Variable\"><a href=\"#Variable\" class=\"headerlink\" title=\"Variable\"></a>Variable</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Kodulf_007/article/details/84098857\">变量（Variable）和字段（Field）的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/Just_keep/article/details/78860588\">变量（Variable）和字段（Field）的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45433031/article/details/109665323\">变量（Variable）和字段（Field）的区别详解</a></li>\n</ul>\n</blockquote>\n<p>类变量和实例变量是字段，其他变量不是</p>\n<p>变量分类如下</p>\n<ul>\n<li>全局变量（global variable）：全局范围，java中没有</li>\n<li>模块变量（module variable）：模块范围，java中又叫静态变量（static field）</li>\n<li>实例变量（instance variable）：实例范围，java中又叫非静态变量（ non-static field）</li>\n<li>方法变量（method variable）：方法范围</li>\n<li>局部变量（local variable）：代码块范围</li>\n</ul>\n<blockquote>\n<p>ps：java中的成员变量（member field）又叫类变量（class field），包含了静态变量（static field）和实例范围（instance variable）</p>\n</blockquote>\n<h2 id=\"Property\"><a href=\"#Property\" class=\"headerlink\" title=\"Property\"></a>Property</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zt15732625878/article/details/50696590\">属性（Property）和字段（Field）的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39916355/article/details/109935938\">属性（Property）和字段（Field）的区别进阶</a></li>\n<li><a href=\"https://www.codeproject.com/questions/1002788/what-is-the-difference-between-property-and-field\">属性（Property）和字段（Field）的区别详解</a></li>\n</ul>\n</blockquote>\n<p>支持Setter-Getter的字段叫属性</p>\n<h2 id=\"Setter-Getter\"><a href=\"#Setter-Getter\" class=\"headerlink\" title=\"Setter-Getter\"></a>Setter-Getter</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39388918/article/details/102483168\">java字段之Setter-Getter详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzeyuaaa/article/details/46649061\">java字段之Setter-Getter规则入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33252868/article/details/114053402\">java字段之Setter-Getter规则详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Setter-Getter的常用场景\"><a href=\"#Setter-Getter的常用场景\" class=\"headerlink\" title=\"Setter-Getter的常用场景\"></a>Setter-Getter的常用场景</h3><ul>\n<li>Lombok</li>\n<li>Json（Spring）</li>\n<li>Sql（Mybatis）</li>\n</ul>\n<h3 id=\"Setter-Getter的特殊情况\"><a href=\"#Setter-Getter的特殊情况\" class=\"headerlink\" title=\"Setter-Getter的特殊情况\"></a>Setter-Getter的特殊情况</h3><ul>\n<li>下划线</li>\n<li>is开头</li>\n<li>第一个字母小写和第二个字母大写</li>\n<li>第一个字母大写和第二个字母小写</li>\n<li>第一个字母大写和第二个字母大写</li>\n<li>全部的字母大写</li>\n</ul>\n<h1 id=\"Method\"><a href=\"#Method\" class=\"headerlink\" title=\"Method\"></a>Method</h1><h2 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h2><p>闭包</p>\n<h1 id=\"Creator\"><a href=\"#Creator\" class=\"headerlink\" title=\"Creator\"></a>Creator</h1><h2 id=\"Builder\"><a href=\"#Builder\" class=\"headerlink\" title=\"Builder\"></a>Builder</h2><p>Builder.build</p>\n<h2 id=\"Of\"><a href=\"#Of\" class=\"headerlink\" title=\"Of\"></a>Of</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013185349/article/details/100836333\">String.valueOf详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42575499/article/details/105067845\">Integer.valueOf详解</a></li>\n<li><a href=\"https://blog.csdn.net/MAIHCBOY/article/details/107281487\">Boolean.valueOf详解</a></li>\n<li><a href=\"https://blog.csdn.net/cumtb2009/article/details/107765612\">LocalDate.of详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_43401436/article/details/104130410\">Enum.valueOf详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40223688/article/details/104264461\">Optional.of</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43529573/article/details/105938572\">List.of详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/111151900\">Stream.of详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_50120894/article/details/124337278\">Path.of</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"proxy","url":"/2017/07/01/lang/lang-1-java/junior/java-11-proxy/","content":"<h1 id=\"Proxy\"><a href=\"#Proxy\" class=\"headerlink\" title=\"Proxy\"></a>Proxy</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43320847/article/details/82938754\">java代理详解</a></li>\n<li><a href=\"https://blog.csdn.net/jason_wang1989/article/details/115272872\">JDK动态代理和CGLIB动态代理的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46158352/article/details/130616198\">JDK动态代理和CGLIB动态代理的区别详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Scene\"><a href=\"#Scene\" class=\"headerlink\" title=\"Scene\"></a>Scene</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41633199/article/details/128360117\">监控埋点之耗时统计技术详解</a></li>\n<li><a href=\"https://blog.csdn.net/zuozewei/article/details/120928988\">监控埋点之链路追踪技术详解</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/621256349\">字节码增强技术在监控埋点场景的大规模实践落地及其他领域探索</a></li>\n</ul>\n</blockquote>\n<h2 id=\"字节码增强技术\"><a href=\"#字节码增强技术\" class=\"headerlink\" title=\"字节码增强技术\"></a>字节码增强技术</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Lee_0202/article/details/101245498\">字节码增强技术</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>ASM</li>\n<li>javassist</li>\n<li>byte-buddy</li>\n</ul>\n<h2 id=\"运行类修改技术\"><a href=\"#运行类修改技术\" class=\"headerlink\" title=\"运行类修改技术\"></a>运行类修改技术</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Lee_0202/article/details/101245505\">运行类修改技术</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Instrumentation</li>\n<li>JavaAgent</li>\n</ul>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"reflection","url":"/2017/07/01/lang/lang-1-java/junior/java-10-reflection/","content":"<h1 id=\"Reflection\"><a href=\"#Reflection\" class=\"headerlink\" title=\"Reflection\"></a>Reflection</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41262903/article/details/121958977\">java反射入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44715943/article/details/120587716\">java反射详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Class）\"><a href=\"#Reflection（Class）\" class=\"headerlink\" title=\"Reflection（Class）\"></a>Reflection（Class）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011240877/article/details/54604146\">java反射之Class详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44543551/article/details/106814391\">java反射之int.class</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_19338587/article/details/103877469\">java反射之getDeclaredClasses和getClasses的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41080067/article/details/119951755\">java反射之getDeclaredFields和getFields的区别</a></li>\n<li><a href=\"https://blog.csdn.net/GuoCong666/article/details/79131280\">java反射之getDeclaredMethods和getMethods的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36666651/article/details/81215221\">java反射之isAssignableFrom()方法与instanceof关键字的区别</a></li>\n<li><a href=\"https://blog.csdn.net/zhonglixiaobin/article/details/85710221\">java反射之isInstance()方法与instanceof关键字的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Field）\"><a href=\"#Reflection（Field）\" class=\"headerlink\" title=\"Reflection（Field）\"></a>Reflection（Field）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhibo_lv/article/details/107934980\">java反射之Field详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42069143/article/details/82119724\">java反射之PropertyDescriptor详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Method）\"><a href=\"#Reflection（Method）\" class=\"headerlink\" title=\"Reflection（Method）\"></a>Reflection（Method）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/81319528\">java反射之Method详解</a></li>\n<li><a href=\"https://blog.csdn.net/Little_jcak/article/details/124833611\">java反射之Method调用</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Array）\"><a href=\"#Reflection（Array）\" class=\"headerlink\" title=\"Reflection（Array）\"></a>Reflection（Array）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ilo114/article/details/86698141\">java反射之数组详解</a></li>\n<li><a href=\"https://blog.csdn.net/tianping168/article/details/2493172\">java反射之数组判断</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Generic）\"><a href=\"#Reflection（Generic）\" class=\"headerlink\" title=\"Reflection（Generic）\"></a>Reflection（Generic）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lkforce/article/details/82466893\">java反射之泛型入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_23049111/article/details/121106277\">java反射之泛型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/tianzhonghaoqing/article/details/119705014\">java反射之泛型详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Annotation）\"><a href=\"#Reflection（Annotation）\" class=\"headerlink\" title=\"Reflection（Annotation）\"></a>Reflection（Annotation）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011983531/article/details/70941123\">java反射之注解详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（Proxy）\"><a href=\"#Reflection（Proxy）\" class=\"headerlink\" title=\"Reflection（Proxy）\"></a>Reflection（Proxy）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42292537/article/details/113480119\">java反射之代理详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Reflection（SPI）\"><a href=\"#Reflection（SPI）\" class=\"headerlink\" title=\"Reflection（SPI）\"></a>Reflection（SPI）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bianbrother/article/details/129403902\">java反射之SPI机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/118751857\">java反射之SPI机制进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lukabruce/article/details/124671361\">java反射之SPI机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41377858/article/details/121486600\">java反射之SPI机制精进</a></li>\n<li><a href=\"https://blog.csdn.net/nianqrzhanghw/article/details/124965891\">java反射之SPI使用场景</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><blockquote>\n<ul>\n<li><a href=\"https://www.bookstack.cn/read/hutool/567f1944215621a9.md\">Apache Commons TypeUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/dy051107/article/details/105751198\">Apache Commons ClassUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104629934\">Apache Commons ClassPathUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104629808\">Apache Commons ConstructorUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104589484\">Apache Commons MethodUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104589241\">Apache Commons FieldUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"jvm","url":"/2017/07/01/lang/lang-1-java/junior/java-12-jvm/","content":"<h1 id=\"JVM\"><a href=\"#JVM\" class=\"headerlink\" title=\"JVM\"></a>JVM</h1><h2 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41570658/article/details/121470685\">JVM详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44203158/article/details/111464523\">java8中JVM的变化</a></li>\n<li><a href=\"https://blog.csdn.net/wo541075754/article/details/102679905\">java8中JVM内存区域的变化</a></li>\n</ul>\n</blockquote>\n<p>JVM核心功能简介</p>\n<ul>\n<li>执行指令：解释和执行字节码（解释器和执行引擎）</li>\n<li>内存管理：分配和回收内存块（内存管理器）</li>\n<li>垃圾回收：回收不再使用的内存块（垃圾回收器）</li>\n</ul>\n<h2 id=\"Advanced\"><a href=\"#Advanced\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Region\"><a href=\"#Region\" class=\"headerlink\" title=\"Region\"></a>Region</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_32755757/article/details/85259133\">JVM运行数据分区详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41376740/article/details/80338158\">JVM运行数据分区之常量池详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45969711/article/details/121198469\">JVM运行数据分区之方法区详解</a></li>\n<li><a href=\"https://blog.csdn.net/ytsydmx/article/details/117911948\">JVM运行数据分区之堆区详解</a></li>\n<li><a href=\"https://blog.csdn.net/Ethan_199402/article/details/111942061\">JVM运行数据分区之虚拟机栈详解</a></li>\n<li><a href=\"https://blog.csdn.net/phg739436146/article/details/108412116\">JVM运行数据分区之本地方法栈详解</a></li>\n<li><a href=\"https://blog.csdn.net/leaf_0303/article/details/78953669\">JVM运行数据分区之程序计数器详解</a></li>\n</ul>\n</blockquote>\n<p>JVM运行数据分区（内存 + 寄存器）</p>\n<ul>\n<li>线程共享<ul>\n<li>方法区：包含常量池和类的元数据（放在永久代或者元空间中）</li>\n<li>堆区：包含对象的数据</li>\n</ul>\n</li>\n<li>线程私有<ul>\n<li>虚拟机栈：包含局部变量和对象的引用</li>\n<li>本地方法栈：</li>\n<li>程序计数器：</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Allocate\"><a href=\"#Allocate\" class=\"headerlink\" title=\"Allocate\"></a>Allocate</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zuishengmengsi1990/article/details/120092466\">JVM内存分配策略详解</a></li>\n</ul>\n</blockquote>\n<p>JVM内存分配策略</p>\n<ul>\n<li>堆上分配</li>\n<li>TLAB上分配</li>\n<li>栈上分配</li>\n</ul>\n<h1 id=\"JMM\"><a href=\"#JMM\" class=\"headerlink\" title=\"JMM\"></a>JMM</h1><h2 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LYQ20010417/article/details/124138635\">JMM入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51431003/article/details/127702972\">JMM进阶</a></li>\n<li><a href=\"https://blog.csdn.net/c15158032319/article/details/117361782\">JMM详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Advanced-1\"><a href=\"#Advanced-1\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Feature\"><a href=\"#Feature\" class=\"headerlink\" title=\"Feature\"></a>Feature</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cy973071263/article/details/104318355\">JMM三大特性入门</a></li>\n<li><a href=\"https://blog.csdn.net/gd_yuzhe/article/details/119031820\">JMM三大特性详解</a></li>\n<li><a href=\"https://blog.csdn.net/wyttRain/article/details/114520547\">JMM三大特性之可见性和内存屏障</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42092787/article/details/108102891\">JMM三大特性之有序性和指令重排</a></li>\n<li><a href=\"https://blog.csdn.net/zhujiangtaotaise/article/details/122493682\">JMM三大特性之volatile入门</a></li>\n<li><a href=\"https://blog.csdn.net/mashaokang1314/article/details/96571818\">JMM三大特性之volatile详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Principle\"><a href=\"#Principle\" class=\"headerlink\" title=\"Principle\"></a>Principle</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/102074107\">JMM之as-if-serial详解</a></li>\n<li><a href=\"https://blog.csdn.net/yuanchangliang/article/details/108036886\">JMM之happens-before入门</a></li>\n<li><a href=\"https://blog.csdn.net/A_art_xiang/article/details/126266711\">JMM之happens-before详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangnanwlw/article/details/86476189\">JMM之happens-before的8大原则入门</a></li>\n<li><a href=\"https://blog.csdn.net/hanghangaidoudou/article/details/113141278\">JMM之happens-before的8大原则进阶</a></li>\n<li><a href=\"https://blog.csdn.net/huyongl1989/article/details/91636049\">JMM之happens-before的8大原则详解</a></li>\n</ul>\n</blockquote>\n<p>as-if-serial：不管怎么重排序，排序后的执行的结果必须和顺序执行时的结果一样<br>happens-before：不管怎么重排序，前一个操作的结果在后续操作中必须是已完成并可见的</p>\n<h1 id=\"Garbage\"><a href=\"#Garbage\" class=\"headerlink\" title=\"Garbage\"></a>Garbage</h1><h2 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/itcast_cn/article/details/124747346\">JVM垃圾回收入门</a></li>\n<li><a href=\"https://blog.csdn.net/baiknow/article/details/122817356\">JVM垃圾回收详解</a></li>\n<li><a href=\"https://blog.csdn.net/tolmanlau/article/details/107398449\">JVM垃圾回收之控制参数</a></li>\n<li><a href=\"https://blog.csdn.net/h16407/article/details/121612236\">JVM垃圾回收之STW（停顿时间）和ThroughPut（吞吐量）</a></li>\n<li><a href=\"https://blog.csdn.net/yj_58585858/article/details/118567138\">JVM垃圾回收之Parallel（并行）和Concurrent（并发）</a></li>\n</ul>\n</blockquote>\n<h3 id=\"垃圾分代技术\"><a href=\"#垃圾分代技术\" class=\"headerlink\" title=\"垃圾分代技术\"></a>垃圾分代技术</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zs18753479279/article/details/119341774\">JVM垃圾分代技术入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34680763/article/details/100018892\">JVM垃圾分代技术详解</a></li>\n<li><a href=\"https://blog.csdn.net/mocas_wang/article/details/109287417\">JVM垃圾分代技术之永久代（PermGen）</a></li>\n<li><a href=\"https://blog.csdn.net/wdquan19851029/article/details/121223952\">JVM垃圾分代技术之元空间（Metaspace）</a></li>\n<li><a href=\"https://blog.csdn.net/xiaojin21cen/article/details/104267301\">JVM垃圾分代技术之元空间和永久代对比</a></li>\n<li><a href=\"https://blog.csdn.net/antony9118/article/details/51425581\">为什么新生代内存需要有两个Survivor区</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>新生代（Young Generation）：属于内存中的堆区，包含1个 <code>Eden</code> 区和2个 <code>Survivor</code> 区</li>\n<li>老年代（Old Generation）：属于内存中的堆区</li>\n<li>永久代（Permanent Generation）：属于内存中的方法区（java8中已经被元空间（Metaspace）取代）</li>\n</ul>\n<h3 id=\"垃圾判断算法\"><a href=\"#垃圾判断算法\" class=\"headerlink\" title=\"垃圾判断算法\"></a>垃圾判断算法</h3><ul>\n<li>引用计数算法：不能解决循环引用的问题</li>\n<li>可达性分析算法：可以解决循环引用的问题</li>\n</ul>\n<h3 id=\"垃圾回收算法\"><a href=\"#垃圾回收算法\" class=\"headerlink\" title=\"垃圾回收算法\"></a>垃圾回收算法</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41286145/article/details/120801246\">JVM垃圾回收算法</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>标记清除算法（MarkSweep）：清除对应的内存块，有内存碎片</li>\n<li>标记复制算法（MarkCopy）：复制到另一个区域，适合新生代使用</li>\n<li>标记整理算法（MarkCompact）：移动到区域的一端，适合老年代使用</li>\n</ul>\n<h3 id=\"垃圾回收时机\"><a href=\"#垃圾回收时机\" class=\"headerlink\" title=\"垃圾回收时机\"></a>垃圾回收时机</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43012792/article/details/107367734\">JVM垃圾回收时机</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47794376/article/details/115468294\">JVM垃圾回收时机之静态变量什么时候被回收</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Minor GC：回收新生代的垃圾，Eden区空间不足时会触发（Survivor区空间不足不会触发）</li>\n<li>Major GC：回收老年代的垃圾，老年代空间不足时触发</li>\n<li>Full GC：Minor GC + Major GC</li>\n</ul>\n<p>Full GC的触发条件</p>\n<ul>\n<li>调用System.gc时，建议系统执行Full GC，但是不一定要执行</li>\n<li>老年代空间不足</li>\n<li>方法区空间不足</li>\n</ul>\n<h3 id=\"垃圾回收过程\"><a href=\"#垃圾回收过程\" class=\"headerlink\" title=\"垃圾回收过程\"></a>垃圾回收过程</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42615068/article/details/102813947\">JVM垃圾回收过程</a></li>\n</ul>\n</blockquote>\n<h3 id=\"垃圾回收器分类\"><a href=\"#垃圾回收器分类\" class=\"headerlink\" title=\"垃圾回收器分类\"></a>垃圾回收器分类</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiaoai1994/article/details/109644578\">JVM垃圾回收器分类</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>新生代<ul>\n<li>Serial：<code>串行回收器</code>，使用<code>标记复制算法</code></li>\n<li>ParNew：<code>并行回收器</code>，Serial的多线程版本，使用<code>标记复制算法</code></li>\n<li>PS（Parallel Scavenge）：<code>并行回收器</code>，最求<code>最大吞吐量</code>，使用<code>标记复制算法</code></li>\n</ul>\n</li>\n<li>老年代<ul>\n<li>Serial Old：<code>串行回收器</code>，Serial的老年代版本，使用<code>标记整理算法</code></li>\n<li>Parallel Old：<code>并行回收器</code>，PS的老年代版本，使用<code>标记整理算法</code></li>\n<li>CMS（Concurrent Mark Sweep）：<code>并发回收器</code>，追求<code>最短停顿时间</code>，使用<code>标记清除算法</code></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：G1垃圾回收器已经不使用分代回收技术了</p>\n</blockquote>\n<h3 id=\"垃圾回收器搭配\"><a href=\"#垃圾回收器搭配\" class=\"headerlink\" title=\"垃圾回收器搭配\"></a>垃圾回收器搭配</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42709262/article/details/85092208\">JVM垃圾回收器搭配</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Serial Old可以和Serial、ParNew、PS搭配</li>\n<li>Parallel Old只能和PS搭配</li>\n<li>CMS可以和Serial和ParNew搭配</li>\n</ul>\n<h2 id=\"Advanced-2\"><a href=\"#Advanced-2\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Serial\"><a href=\"#Serial\" class=\"headerlink\" title=\"Serial\"></a>Serial</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/119392187\">JVM垃圾回收器之Serial详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ParNew\"><a href=\"#ParNew\" class=\"headerlink\" title=\"ParNew\"></a>ParNew</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/119392345\">JVM垃圾回收器之ParNew详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Parallel-Scavenge\"><a href=\"#Parallel-Scavenge\" class=\"headerlink\" title=\"Parallel Scavenge\"></a>Parallel Scavenge</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Hao_JunJie/article/details/124230542\">JVM垃圾回收器之Parallel Scavenge详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Serial-Old\"><a href=\"#Serial-Old\" class=\"headerlink\" title=\"Serial Old\"></a>Serial Old</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xylitolz/article/details/115470869\">JVM垃圾回收器之Serial Old详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Parallel-Old\"><a href=\"#Parallel-Old\" class=\"headerlink\" title=\"Parallel Old\"></a>Parallel Old</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xylitolz/article/details/115471468\">JVM垃圾回收器之Parallel Old详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"CMS\"><a href=\"#CMS\" class=\"headerlink\" title=\"CMS\"></a>CMS</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pontuss/article/details/117082703\">JVM垃圾回收器之CMS详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"G1\"><a href=\"#G1\" class=\"headerlink\" title=\"G1\"></a>G1</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41982594/article/details/105143961\">JVM垃圾回收器之G1详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h1><h2 id=\"ClassLoader\"><a href=\"#ClassLoader\" class=\"headerlink\" title=\"ClassLoader\"></a>ClassLoader</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41812379/article/details/124107027\">JVM类加载机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/promsing/article/details/126200633\">JVM类加载机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/briblue/article/details/54973413\">JVM类加载机制原理</a></li>\n<li><a href=\"https://blog.csdn.net/zxh1991811/article/details/107981268\">JVM类加载之自定义类加载器</a></li>\n<li><a href=\"https://blog.csdn.net/liubenlong007/article/details/88574544\">JVM类加载之能不能加载自己自定义的java.lang. String类</a></li>\n</ul>\n</blockquote>\n<h3 id=\"加载器分类\"><a href=\"#加载器分类\" class=\"headerlink\" title=\"加载器分类\"></a>加载器分类</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33583322/article/details/81239508\">JVM类加载器入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33626996/article/details/112847648\">JVM类加载器详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>自举加载器：Bootstrap ClassLoader，负责加载<code>JAVA_HOME/jre/lib</code>目录中的jar包（rt.jar）</li>\n<li>扩展加载器：Extension ClassLoader，负责加载 <code>JAVA_HOME/jre/lib/ext</code>目录中的jar包</li>\n<li>应用加载器：Application ClassLoader，负责加载<code>classpath</code>目录中的jar包</li>\n<li>自定义加载器：Custom ClassLoader，可以自己定义加载逻辑</li>\n</ul>\n<h3 id=\"类加载过程\"><a href=\"#类加载过程\" class=\"headerlink\" title=\"类加载过程\"></a>类加载过程</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jarvan5/article/details/106141558\">JVM类加载过程入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41563912/article/details/116642556\">JVM类加载过程详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>加载（load）：将类文件的数据加载到内存中</li>\n<li>链接（link）：<ul>\n<li>验证（verify）：检查类文件数据是否符合规范和要求</li>\n<li>准备（prepare）：为类成员分配内存和设置默认值</li>\n<li>解析（resolve）：将符号引用替换为地址引用</li>\n</ul>\n</li>\n<li>初始化（initiate）：静态变量初始化和静态代码块初始化</li>\n<li>使用（use）：使用</li>\n<li>卸载（unload）：将类文件的数据从内存中卸载</li>\n</ul>\n<blockquote>\n<p>ps： <code>默认值（default）</code> 和 <code>初始值（initial）</code> 不是同一个概念，比如int的 <code>默认值</code> 为 <code>0</code> ， <code>初始值</code> 可以为 <code>100</code></p>\n</blockquote>\n<h3 id=\"对象创建过程\"><a href=\"#对象创建过程\" class=\"headerlink\" title=\"对象创建过程\"></a>对象创建过程</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Kern_/article/details/115673129\">对象创建过程入门</a></li>\n<li><a href=\"https://blog.csdn.net/w1196726224/article/details/56529615\">对象创建过程详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42603181/article/details/115510344\">java构造函数和析构函数详解</a></li>\n</ul>\n</blockquote>\n<p>对象创建过程</p>\n<ol>\n<li>父类静态</li>\n<li>子类静态</li>\n<li>父类非静态</li>\n<li>父类构造函数</li>\n<li>子类非静态</li>\n<li>子类构造函数</li>\n</ol>\n<p>对象生命周期</p>\n<ul>\n<li>实例化（Instantiation）</li>\n<li>初始化（Initialization）</li>\n<li>构造（Constrction）</li>\n<li>析构（Destruction）</li>\n</ul>\n<blockquote>\n<p>ps： <code>实例化（instantiation）</code> 和 <code>初始化（initialization）</code> 不是同一个概念，实例化会 <code>分配内存</code> 和设置 <code>默认值</code> ，初始化会设置 <code>初始值</code></p>\n</blockquote>\n<h2 id=\"Delegate\"><a href=\"#Delegate\" class=\"headerlink\" title=\"Delegate\"></a>Delegate</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44299027/article/details/127954385\">JVM双亲委派机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/Ecilipse/article/details/122256795\">JVM双亲委派机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43884884/article/details/107719529\">JVM双亲委派机制打破</a></li>\n</ul>\n</blockquote>\n<h3 id=\"双亲委派机制的作用\"><a href=\"#双亲委派机制的作用\" class=\"headerlink\" title=\"双亲委派机制的作用\"></a>双亲委派机制的作用</h3><ul>\n<li>保证系统类先加载，避免攻击者替换系统类进行破坏活动</li>\n<li>避免重复加载，双亲加载后就不需要自己加载了</li>\n</ul>\n<h3 id=\"如何打破双亲委派机制\"><a href=\"#如何打破双亲委派机制\" class=\"headerlink\" title=\"如何打破双亲委派机制\"></a>如何打破双亲委派机制</h3><ul>\n<li>利用Thread.currentThread().getContextClassLoader()返回的ClassLoader加载</li>\n<li>重写ClassLoader的loadClass方法自定义加载过程</li>\n</ul>\n<h1 id=\"Compile\"><a href=\"#Compile\" class=\"headerlink\" title=\"Compile\"></a>Compile</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sunboylife/article/details/129260972\">java编译器详解</a></li>\n<li><a href=\"https://blog.csdn.net/hello_yang213/article/details/50556859\">javac详解</a></li>\n<li><a href=\"https://blog.csdn.net/Java_cola/article/details/119281600\">JIT入门</a></li>\n<li><a href=\"https://blog.csdn.net/Genmer/article/details/119355224\">JIT详解</a></li>\n<li><a href=\"https://blog.csdn.net/wdays83892469/article/details/126216765\">AOT详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhuoxiuwu/article/details/78619645\">ASM详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis\"></a>Analysis</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wdays83892469/article/details/127151239\">JVM问题排查思路</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Diagnosis\"><a href=\"#Diagnosis\" class=\"headerlink\" title=\"Diagnosis\"></a>Diagnosis</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41822345/article/details/105523832\">JDK自带诊断工具</a></li>\n<li><a href=\"https://blog.csdn.net/liaoyue11/article/details/110875466\">JDK内存诊断工具</a></li>\n<li><a href=\"https://blog.csdn.net/asd136912/article/details/103224757\">JDK线程诊断工具</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhaofuqiangmycomm/article/details/114919403\">JDK自带监控工具</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39387856/article/details/108513440\">Arthas入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_14996421/article/details/115982546\">Arthas详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><blockquote>\n<ul>\n<li><a href=\"https://linux.cn/article-4481-1.html\">Linux系统相关工具</a></li>\n<li><a href=\"https://blog.csdn.net/ArtAndLife/article/details/120637502\">Linux系统工具大全</a></li>\n<li><a href=\"https://blog.csdn.net/Moo_Lavender/article/details/106104401\">Linux系统诊断工具</a></li>\n<li><a href=\"https://blog.csdn.net/jack1liu/article/details/95101723\">Linux系统负载工具</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43072797/article/details/105552803\">Linux系统状态工具</a></li>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/120874936\">Linux系统性能工具</a></li>\n<li><a href=\"https://blog.csdn.net/xiaochong0302/article/details/127205969\">Linux系统监控工具</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39983912/article/details/111801137\">Linux进程查找工具</a></li>\n<li><a href=\"https://blog.csdn.net/qiu_zhi_world/article/details/106204736\">Linux进程分析工具</a></li>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/113697346\">Linux线程分析工具</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"lang","url":"/2017/07/01/lang/lang-1-java/junior/java-2-lang/","content":"<h1 id=\"Lang\"><a href=\"#Lang\" class=\"headerlink\" title=\"Lang\"></a>Lang</h1><h2 id=\"基础类型详解\"><a href=\"#基础类型详解\" class=\"headerlink\" title=\"基础类型详解\"></a>基础类型详解</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42225047/article/details/107094715\">java基础类型详解</a></li>\n<li><a href=\"https://blog.csdn.net/Awt_FuDongLai/article/details/106631220\">java各种数据之间的转换</a></li>\n<li><a href=\"https://blog.csdn.net/bigtree_3721/article/details/51435185\">java数字char和int之间的转换</a></li>\n</ul>\n</blockquote>\n<p>基础数据类型（Basic Type）</p>\n<ul>\n<li>原始数据类型（Primitive Type）：char、byte、short、int、long、float、double、boolean</li>\n<li>包装数据类型（Wrapper Type）：Character、Byte、Short、Integer、Long、Float、Double、Boolean</li>\n<li>复杂数据类型（Complex Type）：String、Date、Enum</li>\n</ul>\n<h3 id=\"8种原始数据类型（Primitive）\"><a href=\"#8种原始数据类型（Primitive）\" class=\"headerlink\" title=\"8种原始数据类型（Primitive）\"></a>8种原始数据类型（Primitive）</h3><p>char、byte、short、int、long、float、double、boolean</p>\n<h3 id=\"8种包装数据类型（Wrapper）\"><a href=\"#8种包装数据类型（Wrapper）\" class=\"headerlink\" title=\"8种包装数据类型（Wrapper）\"></a>8种包装数据类型（Wrapper）</h3><p>Character、Byte、Short、Integer、Long、Float、Double、Boolean</p>\n<h2 id=\"包装类缓存详解\"><a href=\"#包装类缓存详解\" class=\"headerlink\" title=\"包装类缓存详解\"></a>包装类缓存详解</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tracydragonlxy/article/details/108829406\">包装类缓存详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"包装类等值比较时的缓存问题\"><a href=\"#包装类等值比较时的缓存问题\" class=\"headerlink\" title=\"包装类等值比较时的缓存问题\"></a>包装类等值比较时的缓存问题</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26287435/article/details/107852241\">包装类等值比较时的缓存问题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"装箱和拆箱详解\"><a href=\"#装箱和拆箱详解\" class=\"headerlink\" title=\"装箱和拆箱详解\"></a>装箱和拆箱详解</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/belongtocode/article/details/102967678\">装箱和拆箱详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"拆箱时的NullPointerException问题\"><a href=\"#拆箱时的NullPointerException问题\" class=\"headerlink\" title=\"拆箱时的NullPointerException问题\"></a>拆箱时的NullPointerException问题</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lfq88/article/details/113174300\">拆箱时的NullPointerException问题</a></li>\n</ul>\n</blockquote>\n<h1 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h1><h2 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45270751/article/details/121374130\">String详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concat\"><a href=\"#Concat\" class=\"headerlink\" title=\"Concat\"></a>Concat</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/JeremyTsai/article/details/109267783\">String的拼接方法</a></li>\n<li><a href=\"https://blog.csdn.net/u012337114/article/details/81317992\">String的拼接原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"StringBuilder\"><a href=\"#StringBuilder\" class=\"headerlink\" title=\"StringBuilder\"></a>StringBuilder</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41076531/article/details/115727937\">StringBuilder和StringBuffer详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Format\"><a href=\"#Format\" class=\"headerlink\" title=\"Format\"></a>Format</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lonely_fireworks/article/details/7962171\">String格式化详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Character\"><a href=\"#Character\" class=\"headerlink\" title=\"Character\"></a>Character</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/79253470\">CharSequence详解</a></li>\n<li><a href=\"https://blog.csdn.net/boyinnju/article/details/6877087\">String之空白符详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"String和StringBuilder、StringBuffer的区别\"><a href=\"#String和StringBuilder、StringBuffer的区别\" class=\"headerlink\" title=\"String和StringBuilder、StringBuffer的区别\"></a>String和StringBuilder、StringBuffer的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43682323/article/details/128036953\">String和StringBuilder、StringBuffer的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>String是不可变的，StringBuilder、StringBuffer是可变的</li>\n<li>String和StringBuffer是线程安全的，StringBuilder是线程不安全的</li>\n</ul>\n<h3 id=\"String为什么是不可变的\"><a href=\"#String为什么是不可变的\" class=\"headerlink\" title=\"String为什么是不可变的\"></a>String为什么是不可变的</h3><ul>\n<li>字符数组私有且被final修饰，并且没有提供修改的方法，保证不可修改</li>\n<li>类被final修饰，使得不可被继承，保证不会被子类修改</li>\n</ul>\n<h3 id=\"String-valueOf和String-toString的区别\"><a href=\"#String-valueOf和String-toString的区别\" class=\"headerlink\" title=\"String.valueOf和String.toString的区别\"></a>String.valueOf和String.toString的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/itmyhome1990/article/details/77879653\">String.valueOf和String.toString的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"String-valueOf和Object-toString的区别\"><a href=\"#String-valueOf和Object-toString的区别\" class=\"headerlink\" title=\"String.valueOf和Object.toString的区别\"></a>String.valueOf和Object.toString的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33218097/article/details/96998201\">String.valueOf和Object.toString的区别</a></li>\n<li><a href=\"https://blog.csdn.net/dnc8371/article/details/106701637\">String.valueOf和Objects.toString的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"String之isBlank与isEmpty的区别\"><a href=\"#String之isBlank与isEmpty的区别\" class=\"headerlink\" title=\"String之isBlank与isEmpty的区别\"></a>String之isBlank与isEmpty的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ARPOSPF/article/details/102713892\">String之isBlank与isEmpty的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"String之拼接是线程安全的吗\"><a href=\"#String之拼接是线程安全的吗\" class=\"headerlink\" title=\"String之拼接是线程安全的吗\"></a>String之拼接是线程安全的吗</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42946376/article/details/119235443\">String的线程安全性</a></li>\n</ul>\n</blockquote>\n<p>String拼接是线程安全的，因为是返回的是新对象，而不是原地修改</p>\n<blockquote>\n<p>String的加号拼接编译后是通过StringBuilder实现的，不是操作符重载<br>虽然StringBuilder不是线程安全的，但是线程在使用String的加号拼接时每次都会创建新的StringBuilder局部变量<br>即每个线程用的StringBuilder都是独立的（不共享），所以使用String的加号拼接时不存在线程安全问题</p>\n</blockquote>\n<h1 id=\"Number\"><a href=\"#Number\" class=\"headerlink\" title=\"Number\"></a>Number</h1><h2 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45666660/article/details/124483414\">Number详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44712386/article/details/104713478\">浮点数和定点数详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43627631/article/details/106633246\">浮点数和定点数原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Float\"><a href=\"#Float\" class=\"headerlink\" title=\"Float\"></a>Float</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41860358/article/details/110432015\">浮点数的精度入门</a></li>\n<li><a href=\"https://blog.csdn.net/xywworld/article/details/3946605\">浮点数的精度进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_50934744/article/details/112675491\">浮点数的精度详解</a></li>\n<li><a href=\"https://blog.csdn.net/nanhuaibeian/article/details/120689019\">浮点数的精度精进</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45863060/article/details/125054244\">浮点数的底层原理</a></li>\n<li><a href=\"https://blog.csdn.net/freud_lv/article/details/106698335\">浮点数比较入门</a></li>\n<li><a href=\"https://blog.csdn.net/ddqqdq/article/details/120485418\">浮点数比较进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39131699/article/details/83449400\">浮点数比较详解</a></li>\n<li><a href=\"https://blog.csdn.net/TroyeSivanlp/article/details/121439928\">为什么 0.1 + 0.2 不等于0.3入门</a></li>\n<li><a href=\"https://blog.csdn.net/Fighting0923/article/details/129871554\">为什么 0.1 + 0.2 不等于0.3进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47450807/article/details/123195174\">为什么 0.1 + 0.2 不等于0.3详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Decimal\"><a href=\"#Decimal\" class=\"headerlink\" title=\"Decimal\"></a>Decimal</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Xin_101/article/details/116781620\">java定点数（BigDecimal）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"BigInteger\"><a href=\"#BigInteger\" class=\"headerlink\" title=\"BigInteger\"></a>BigInteger</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44259720/article/details/87002816\">java超大数（BigInteger）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"Integer-valueOf和Integer-parseInt的区别\"><a href=\"#Integer-valueOf和Integer-parseInt的区别\" class=\"headerlink\" title=\"Integer.valueOf和Integer.parseInt的区别\"></a>Integer.valueOf和Integer.parseInt的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jerry11112/article/details/107003036\">Integer.valueOf和Integer.parseInt的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Integer-toString和String-valueOf的区别\"><a href=\"#Integer-toString和String-valueOf的区别\" class=\"headerlink\" title=\"Integer.toString和String.valueOf的区别\"></a>Integer.toString和String.valueOf的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whp1473/article/details/79935082\">Integer.toString和String.valueOf的区别</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Boolean\"><a href=\"#Boolean\" class=\"headerlink\" title=\"Boolean\"></a>Boolean</h1><h2 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39647499/article/details/114033025\">Boolean详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h1><h2 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><h3 id=\"DateTime（new）\"><a href=\"#DateTime（new）\" class=\"headerlink\" title=\"DateTime（new）\"></a>DateTime（new）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/y_k_y/article/details/84633119\">java8时间入门</a></li>\n<li><a href=\"https://blog.csdn.net/wufagang/article/details/115061218\">java8时间详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Date（old）\"><a href=\"#Date（old）\" class=\"headerlink\" title=\"Date（old）\"></a>Date（old）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_63395068/article/details/127944197\">Date详解</a></li>\n<li><a href=\"https://blog.csdn.net/a1439775520/article/details/98442556\">Calendar详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Format-1\"><a href=\"#Format-1\" class=\"headerlink\" title=\"Format\"></a>Format</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/enthan809882/article/details/103946177\">时间格式之T的作用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"DateTimeFormatter（new）\"><a href=\"#DateTimeFormatter（new）\" class=\"headerlink\" title=\"DateTimeFormatter（new）\"></a>DateTimeFormatter（new）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/117703509\">DateTimeFormatter入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/120132776\">DateTimeFormatter详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SimpleDateFormat（old）\"><a href=\"#SimpleDateFormat（old）\" class=\"headerlink\" title=\"SimpleDateFormat（old）\"></a>SimpleDateFormat（old）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Pilipilip233/article/details/106940897\">SimpleDateFormat入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45970945/article/details/120812963\">SimpleDateFormat详解</a></li>\n<li><a href=\"https://blog.csdn.net/l1028386804/article/details/104397090\">SimpleDateFormat之线程安全</a></li>\n<li><a href=\"https://blog.csdn.net/mqdxiaoxiao/article/details/90317330\">SimpleDateFormat之指定时区</a></li>\n<li><a href=\"https://blog.csdn.net/xldancer/article/details/43453593\">SimpleDateFormat之解析异常</a></li>\n<li><a href=\"https://blog.csdn.net/xuerong_zhu/article/details/103773166\">SimpleDateFormat之解析模式</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Timezone\"><a href=\"#Timezone\" class=\"headerlink\" title=\"Timezone\"></a>Timezone</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sunrj_niu/article/details/122983421\">TimeZone详解</a></li>\n<li><a href=\"https://blog.csdn.net/lxy1740/article/details/104307100\">时区入门</a></li>\n<li><a href=\"https://blog.csdn.net/xuxu120/article/details/70146075\">时区进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zgdwxp/article/details/102728563\">时区详解</a></li>\n<li><a href=\"https://blog.csdn.net/whatday/article/details/109856495\">时区简写</a></li>\n<li><a href=\"https://blog.csdn.net/lynmison/article/details/122959071\">时区大全</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45968493/article/details/126679782\">时区之UTC和GMT的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_23994787/article/details/120767859\">时区之UTC和GMT的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/h4241778/article/details/122958943\">时区之Z时区是什么时区</a></li>\n<li><a href=\"https://blog.csdn.net/taozi40248887/article/details/112650060\">时区之CST时区是什么时区</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Enum\"><a href=\"#Enum\" class=\"headerlink\" title=\"Enum\"></a>Enum</h1><h2 id=\"Basic-4\"><a href=\"#Basic-4\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/121175711\">Enum详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h1><h2 id=\"Basic-5\"><a href=\"#Basic-5\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42570601/article/details/104049532\">Object详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-2\"><a href=\"#Question-2\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"Object的基本方法\"><a href=\"#Object的基本方法\" class=\"headerlink\" title=\"Object的基本方法\"></a>Object的基本方法</h3><p>getClass、hashCode、equals、toString、clone、wait、notify、notifyAll、finalize</p>\n<h3 id=\"equals和-x3D-x3D-的区别\"><a href=\"#equals和-x3D-x3D-的区别\" class=\"headerlink\" title=\"equals和&#x3D;&#x3D;的区别\"></a>equals和&#x3D;&#x3D;的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/meism5/article/details/89029475\">equals和&#x3D;&#x3D;的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>equals：逻辑相等，比较对象是否是相同的对象</li>\n<li>&#x3D;&#x3D;：引用相等，比较对象是否是同一个对象</li>\n</ul>\n<blockquote>\n<p>注意：数值类对象比较使用 equals 可以避免以下问题</p>\n<ul>\n<li>用&#x3D;&#x3D;比较时，值相同但地址不同，带来的逻辑判断错误的问题</li>\n<li>用&#x3D;&#x3D;比较时，包装类缓存，带来的逻辑判断错误的问题</li>\n<li>用&#x3D;&#x3D;比较时，包装类拆箱，带来的空指针异常问题</li>\n</ul>\n</blockquote>\n<h3 id=\"浅拷贝和深拷贝\"><a href=\"#浅拷贝和深拷贝\" class=\"headerlink\" title=\"浅拷贝和深拷贝\"></a>浅拷贝和深拷贝</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/87217229\">java浅拷贝和深拷贝详解</a></li>\n<li><a href=\"https://blog.csdn.net/Revivedsun/article/details/108219274\">java深拷贝的几种方法</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_34976604/article/details/80970933\">java深拷贝之super.clone()</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Optional\"><a href=\"#Optional\" class=\"headerlink\" title=\"Optional\"></a>Optional</h2><h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yy339452689/article/details/110670282\">Optional详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_35196909/article/details/114660655\">Either详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35634181/article/details/101109300\">Optional之map和flatMap的区别</a></li>\n<li><a href=\"https://blog.csdn.net/u012881904/article/details/68935009\">Google Guava Optional详解</a></li>\n<li><a href=\"https://blog.csdn.net/dnc8371/article/details/107267792\">Optional和函数式编程</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37604985/article/details/119122673\">Optional的使用会导致性能下降吗</a></li>\n</ul>\n</blockquote>\n<h3 id=\"scala\"><a href=\"#scala\" class=\"headerlink\" title=\"scala\"></a>scala</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jasonding1354/article/details/46822417\">scala Optional、Either和Try详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"kotlin\"><a href=\"#kotlin\" class=\"headerlink\" title=\"kotlin\"></a>kotlin</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rikkatheworld/article/details/123040617\">kotlin Optional、Either和Result详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Entry\"><a href=\"#Entry\" class=\"headerlink\" title=\"Entry\"></a>Entry</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44874132/article/details/113367441\">Entry详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Pair\"><a href=\"#Pair\" class=\"headerlink\" title=\"Pair\"></a>Pair</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/allway2/article/details/117630517\">Pair详解</a></li>\n<li><a href=\"https://blog.csdn.net/swadian2008/article/details/126468437\">Apache Commons Pair详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45819587/article/details/119488460\">Math详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Random\"><a href=\"#Random\" class=\"headerlink\" title=\"Random\"></a>Random</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Braveyjc/article/details/124224855\">Random入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44852126/article/details/124261644\">Random详解</a></li>\n<li><a href=\"https://blog.csdn.net/hustspy1990/article/details/93364805\">Random原理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gyp0307/article/details/79616615\">System入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37964379/article/details/112706393\">System进阶</a></li>\n<li><a href=\"https://blog.csdn.net/mmd_Jason/article/details/111479808\">System详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/han12398766/category_8743850.html\">常用工具类汇总</a></li>\n<li><a href=\"https://blog.csdn.net/huwei2003/article/details/113741096\">Apache Commons工具类汇总</a></li>\n<li><a href=\"https://blog.csdn.net/yyychyzzzz/article/details/54983574\">Google Guava工具类汇总</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>Objects</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41758106/article/details/109264060\">Objects详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><p>ClassUtils、ObjectUtils、StringUtils、NumberUtils、BooleanUtils、DateUtils、EnumUtils、RandomUtils、RandomStringUtils、SystemUtils</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/102488632\">Apache Commons Lang详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104029224\">Apache Commons ClassUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104029981\">Apache Commons ObjectUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/yuzheh521/article/details/110633425\">Apache Commons StringUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/dy051107/article/details/105614788\">Apache Commons StringEscapeUtils详解</a></li>\n<li><a href=\"https://commons.apache.org/proper/commons-text/apidocs/org/apache/commons/text/CaseUtils.html\">Apache Commons CaseUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104356444\">Apache Commons WordUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104605389\">Apache Commons NumberUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104030223\">Apache Commons BooleanUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42869574/article/details/103406459\">Apache Commons DateUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/92214380\">Apache Commons DateFormatUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104356371\">Apache Commons EnumUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/toxie6415176/article/details/90146760\">Apache Commons RandomUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/dy051107/article/details/105641916\">Apache Commons RandomStringUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/79137910\">Apache Commons SystemUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2><p>Optional、Objects、Joiner、Spilter、CharMatcher、CaseFormat、Preconditions</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012881904/article/details/69864532\">Google Guava Primitive详解</a></li>\n<li><a href=\"https://blog.csdn.net/hupengfei_shenyang/article/details/107022394\">Google Guava Objects详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_38039437/article/details/105709205\">Google Guava Joiner</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20597479/article/details/69950732\">Google Guava Spilter详解</a></li>\n<li><a href=\"https://blog.csdn.net/Allen_Heng/article/details/120556386\">Google Guava CharMatcher详解</a></li>\n<li><a href=\"https://blog.csdn.net/hupengfei_shenyang/article/details/107179717\">Google Guava CaseFormat详解</a></li>\n<li><a href=\"https://blog.csdn.net/csdnlijingran/article/details/97684429\">Google Guava Preconditions详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"other","url":"/2017/07/01/lang/lang-1-java/junior/java-13-other/","content":"<h1 id=\"Sdk\"><a href=\"#Sdk\" class=\"headerlink\" title=\"Sdk\"></a>Sdk</h1><h2 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35067322/article/details/103193762\">java多版本管理工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/nklinsirui/article/details/117263817\">java多版本管理工具之sdkman</a></li>\n<li><a href=\"https://blog.csdn.net/u013015301/article/details/128953048\">java多版本管理工具之jenv</a></li>\n</ul>\n</blockquote>\n<h3 id=\"script\"><a href=\"#script\" class=\"headerlink\" title=\"script\"></a>script</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013617144/article/details/79770667\">windows中使用脚本支持多版本java入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40460909/article/details/80681047\">linux中使用脚本支持多版本java入门</a></li>\n</ul>\n</blockquote>\n<h3 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jxpxlinkui/article/details/79649204\">linux支持多版本java入门</a></li>\n<li><a href=\"https://blog.csdn.net/huanglu0314/article/details/109099746\">linux支持多版本java进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36670734/article/details/123836164\">linux支持多版本java详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"windows\"><a href=\"#windows\" class=\"headerlink\" title=\"windows\"></a>windows</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_32265069/article/details/114612043\">windows支持多版本java入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44072270/article/details/117897967\">windows支持多版本java进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21808961/article/details/102217844\">windows支持多版本java详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010104435/article/details/79633p67\">python多版本管理工具pyenv</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h1><h2 id=\"java-1\"><a href=\"#java-1\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_52170926/article/details/114647858\">JAVA_HOME和CLASSPATH的作用</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44652781/article/details/99666495\">java5后不需要配置CLASSPATH环境变量了</a></li>\n<li><a href=\"https://blog.csdn.net/yklovejava/article/details/84321509\">java在ide和terminal中运行的差异</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python-1\"><a href=\"#python-1\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HD243608836/article/detaips/120746985\">python多环境管理工具virtualenv</a></li>\n<li><a href=\"https://blog.csdn.net/u011159821/article/details/11519p060\">python多环境管理工具venv</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51971452/article/details/113618588\">python多环境管理工具pipenv</a></li>\n<li><a href=\"https://blog.csdn.net/qianghaohao/article/details/79681p87\">python之pyenv和virtualenv</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37926734/article/details/123478506\">python之virtualenv、venv、pipenv</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h1><h2 id=\"java-2\"><a href=\"#java-2\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/spark_guo/article/details/102497521\">java自带工具</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python-2\"><a href=\"#python-2\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/a1024271896/article/details/104491501\">python自带工具</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Project\"><a href=\"#Project\" class=\"headerlink\" title=\"Project\"></a>Project</h1><h2 id=\"java-3\"><a href=\"#java-3\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44044929/article/details/115623405\">java项目结构详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python-3\"><a href=\"#python-3\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/captain5339/article/details/128017400\">python项目结构详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Module\"><a href=\"#Module\" class=\"headerlink\" title=\"Module\"></a>Module</h1><h2 id=\"java-4\"><a href=\"#java-4\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/thanksm1/article/details/103973180\">java多模块开发之Maven子模块</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python-4\"><a href=\"#python-4\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mzl87/article/details/103843611\">python多模块开发之Git子模块</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Package\"><a href=\"#Package\" class=\"headerlink\" title=\"Package\"></a>Package</h1><h2 id=\"java-5\"><a href=\"#java-5\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/allenwells/article/details/46649145\">jar详解</a></li>\n<li><a href=\"https://blog.csdn.net/ddnj15797768089/article/details/109144728\">java包管理工具maven</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python-5\"><a href=\"#python-5\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Dome_/article/details/89763579\">python包管理工具pip</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42096901/articpe/details/89299017\">python包管理工具之requirements.txt</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33431368/article/details/12358p593\">python包管理工具之setup.py</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Library\"><a href=\"#Library\" class=\"headerlink\" title=\"Library\"></a>Library</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/leaderway/article/details/52387925\">Apache Commons详解</a></li>\n<li><a href=\"https://blog.csdn.net/chuyouyinghe/article/details/123393220\">Google Guava详解</a></li>\n<li><a href=\"https://blog.csdn.net/MrRight000/article/details/121822291\">Hutool详解</a></li>\n<li><a href=\"https://blog.csdn.net/gening4014/article/details/124326753\">Vavr</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/122948536\">Lombok详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Lombok\"><a href=\"#Lombok\" class=\"headerlink\" title=\"Lombok\"></a>Lombok</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39863155/article/details/110299466\">Lombok入门</a></li>\n<li><a href=\"https://blog.csdn.net/MHGeek/article/details/100155398\">Lombok进阶</a></li>\n<li><a href=\"https://blog.csdn.net/monokai/article/details/109029102\">Lombok详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Data\"><a href=\"#Data\" class=\"headerlink\" title=\"Data\"></a>Data</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/122123278\">Lombok之Field默认值（Default）详解</a></li>\n<li><a href=\"https://blog.csdn.net/feinifi/article/details/85275280\">Lombok之Data继承（Inherit）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Setter-Getter\"><a href=\"#Setter-Getter\" class=\"headerlink\" title=\"Setter-Getter\"></a>Setter-Getter</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cauchy6317/article/details/102499709\">Lombok之Setter-Getter使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35794202/article/details/81166469\">Lombok之Setter-Getter自定义详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_20689109/article/details/80474808\">Lombok之Setter-Getter的坑之下划线</a></li>\n<li><a href=\"https://blog.csdn.net/KeepLearnZhangXiaoBo/article/details/118153694\">Lombok之Setter-Getter的坑之is开头</a></li>\n<li><a href=\"https://blog.csdn.net/xiaokunzong/article/details/110713067\">Lombok之Setter-Getter的坑之第二个字母大写</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Constructor\"><a href=\"#Constructor\" class=\"headerlink\" title=\"Constructor\"></a>Constructor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37192800/article/details/79785906\">Lombok之构造器（Constructor）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Builder\"><a href=\"#Builder\" class=\"headerlink\" title=\"Builder\"></a>Builder</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44461217/article/details/122473178\">Lombok之Builder默认值（Default）详解</a></li>\n<li><a href=\"https://blog.csdn.net/shichen2010/article/details/110082130\">Lombok之Builder继承（Inherit）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhanggonglalala/article/details/108869608\">Lombok之日志（Log）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Null\"><a href=\"#Null\" class=\"headerlink\" title=\"Null\"></a>Null</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cauchy6317/article/details/102567195\">Lombok之空值（Null）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Exception\"><a href=\"#Exception\" class=\"headerlink\" title=\"Exception\"></a>Exception</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/csdnjiamin/article/details/109668426\">Lombok之异常（Exception）详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"container","url":"/2017/07/01/lang/lang-1-java/junior/java-3-container/","content":"<h1 id=\"Container\"><a href=\"#Container\" class=\"headerlink\" title=\"Container\"></a>Container</h1><h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_67322837/article/details/124322953\">java普通容器详解</a></li>\n<li><a href=\"https://blog.csdn.net/c1776167012/article/details/109351903\">java同步容器详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43472474/article/details/110885281\">java安全容器详解</a></li>\n<li><a href=\"https://blog.csdn.net/xing123456jl/article/details/108044431\">Collection接口和实现类方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/kubiderenya/article/details/105276261\">Collection接口方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/kubiderenya/article/details/105277593\">List接口方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/kubiderenya/article/details/105280785\">Set接口方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/kubiderenya/article/details/105289741\">Queue接口方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/kubiderenya/article/details/105291408\">Deque接口方法详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46853673/article/details/123066973\">BlockingQueue接口方法详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>不推荐的类：Vector、Stack、Hashtable</p>\n</blockquote>\n<h3 id=\"普通容器类（线程不安全）\"><a href=\"#普通容器类（线程不安全）\" class=\"headerlink\" title=\"普通容器类（线程不安全）\"></a>普通容器类（线程不安全）</h3><ul>\n<li>Array：T[]</li>\n<li>List<ul>\n<li>ArrayList：基于数组实现</li>\n<li>LinkedList：基于链表实现</li>\n</ul>\n</li>\n<li>Set<ul>\n<li>HashSet：最常用的Set</li>\n<li>LinkedHashSet：支持按照插入顺序（默认）或者访问顺序迭代</li>\n<li>SortedSet<ul>\n<li>NavigableSet<ul>\n<li>TreeSet：支持排序</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Map<ul>\n<li>HashMap：最常用的Map</li>\n<li>LinkedHashMap：支持按照插入顺序（默认）或者访问顺序迭代</li>\n<li>SortedMap<ul>\n<li>NavigableMap<ul>\n<li>TreeMap：支持排序，基于堆实现</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Queue<ul>\n<li>Deque<ul>\n<li>ArrayDeque：基于数组实现</li>\n<li>LinkedList：基于链表实现</li>\n</ul>\n</li>\n<li>PriorityQueue：支持优先级</li>\n</ul>\n</li>\n<li>Stack：LinkedList</li>\n</ul>\n<blockquote>\n<p>Set是基于Map实现的</p>\n</blockquote>\n<h3 id=\"同步容器类（线程安全）\"><a href=\"#同步容器类（线程安全）\" class=\"headerlink\" title=\"同步容器类（线程安全）\"></a>同步容器类（线程安全）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Jacabe/article/details/82929159\">Collections.synchronizedXXX详解</a></li>\n<li><a href=\"https://blog.csdn.net/javawubo/article/details/103807386\">Collections.synchronizedXXX的坑入门</a></li>\n<li><a href=\"https://blog.csdn.net/yuanlaijike/article/details/104591250\">Collections.synchronizedXXX的坑详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>List：Vector</li>\n<li>Map：Hashtable</li>\n<li>Stack：Stack</li>\n</ul>\n<blockquote>\n<p>还可以使用Collections.synchronizedXXX包装返回的同步容器<br>Collections.synchronizedXXX包装类返回的迭代器没有保证安全，需要使用者自己保证</p>\n</blockquote>\n<h3 id=\"并发容器类（线程安全）\"><a href=\"#并发容器类（线程安全）\" class=\"headerlink\" title=\"并发容器类（线程安全）\"></a>并发容器类（线程安全）</h3><ul>\n<li>List<ul>\n<li>CopyOnWriteArrayList：写时复制</li>\n</ul>\n</li>\n<li>Set<ul>\n<li>CopyOnWriteArraySet：写时复制</li>\n<li>SortedSet<ul>\n<li>NavigableSet<ul>\n<li>ConcurrentSkipListSet：安全版TreeSet</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Map<ul>\n<li>ConcurrentHashMap：Segment + Lock （java7）、CAS + synchronized（java8）</li>\n<li>SortedMap<ul>\n<li>NavigableMap<ul>\n<li>ConcurrentSkipListMap：安全版TreeMap，基于跳表实现</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Queue：<ul>\n<li>BlockingQueue：<ul>\n<li>ArrayBlockingQueue：有界</li>\n<li>LinkedBlockingQueue：默认无界，但边界可配</li>\n<li>SynchronousQueue：有界，容量为0，不存储元素直接交付（handoff）的阻塞队列</li>\n<li>TransferQueue<ul>\n<li>LinkedTransferQueue：无界，支持Transfer操作</li>\n</ul>\n</li>\n<li>PriorityBlockingQueue：无界，支持优先级</li>\n<li>DelayQueue：无界，支持延时，是<code>延时消息队列</code></li>\n<li>DelayedWorkQueue：无界，支持延时，是<code>延时任务队列</code></li>\n</ul>\n</li>\n<li>BlockingDeque：<ul>\n<li>LinkedBlockingDeque：默认无界，但边界可配</li>\n</ul>\n</li>\n<li>ConcurrentLinkedQueue：无界</li>\n<li>ConcurrentLinkedDeque：无界</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h2><h3 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56079407/article/details/119062757\">java数组详解</a></li>\n<li><a href=\"https://blog.csdn.net/kqZhu/article/details/104216549\">java动态数组详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43200566/article/details/128118293\">java列表详解</a></li>\n<li><a href=\"https://blog.csdn.net/lpq374606827/article/details/93203927\">java列表之List和Array转换详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43864727/article/details/88384142\">java列表之ArrayList和LinkedList增删查时间复杂度分析</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33312725/article/details/128783014\">java列表之CopyOnWriteArrayList的适用场景详解</a></li>\n<li><a href=\"https://blog.csdn.net/lck_csdn/article/details/120708374\">java列表之去重</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"Array和ArrayList的区别\"><a href=\"#Array和ArrayList的区别\" class=\"headerlink\" title=\"Array和ArrayList的区别\"></a>Array和ArrayList的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/senxu_/article/details/126272908\">Array和LinkedList的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Array的占用空间是固定的，ArrayList的占用空间是动态的</li>\n<li>Array支持原始类型，ArrayList只支持对象类型</li>\n<li>Array的元素可以直接使用子类，ArrayList的元素需要使用类型通配符才能使用子类</li>\n<li>Array获取大小是通过length属性，ArrayList获取大小是通过size方法</li>\n<li>Array没有删除元素的方法，ArrayList有删除元素的方法</li>\n</ul>\n<h4 id=\"ArrayList和LinkedList的区别\"><a href=\"#ArrayList和LinkedList的区别\" class=\"headerlink\" title=\"ArrayList和LinkedList的区别\"></a>ArrayList和LinkedList的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46728644/article/details/122553804\">ArrayList和LinkedList的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>结构：<ul>\n<li>ArrayList是基于数组实现的</li>\n<li>LinkedList是基于链表实现的</li>\n</ul>\n</li>\n<li>性能：<ul>\n<li>ArrayList读取时使用索引直接定位，所以读取（随机访问）较快，写入时需要移动元素，所以写入（插入和删除）较慢</li>\n<li>LinkedList读取时需从头开始遍历，所以读取（随机访问）较慢，写入时不需要移动元素，所以写入（插入和删除）较快</li>\n</ul>\n</li>\n<li>空间：<ul>\n<li>LinkedList使用Node结构还需要存储前指针和后指针，比ArrayList更占内存</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ArrayList和Vector的区别\"><a href=\"#ArrayList和Vector的区别\" class=\"headerlink\" title=\"ArrayList和Vector的区别\"></a>ArrayList和Vector的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Think_and_work/article/details/124349102\">ArrayList和Vector的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Collections-synchronizedList和Vector的区别\"><a href=\"#Collections-synchronizedList和Vector的区别\" class=\"headerlink\" title=\"Collections.synchronizedList和Vector的区别\"></a>Collections.synchronizedList和Vector的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/DViewer/article/details/52970896\">Collections.synchronizedList和Vector的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"CopyOnWriteArrayList和Vector的区别\"><a href=\"#CopyOnWriteArrayList和Vector的区别\" class=\"headerlink\" title=\"CopyOnWriteArrayList和Vector的区别\"></a>CopyOnWriteArrayList和Vector的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41317495/article/details/110368573\">CopyOnWriteArrayList和Vector的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"CopyOnWriteArrayList和Collections-synchronizedList的区别\"><a href=\"#CopyOnWriteArrayList和Collections-synchronizedList的区别\" class=\"headerlink\" title=\"CopyOnWriteArrayList和Collections.synchronizedList的区别\"></a>CopyOnWriteArrayList和Collections.synchronizedList的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zljjava/article/details/48139465\">CopyOnWriteArrayList和Collections.synchronizedList的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>结构：<ul>\n<li>CopyOnWriteArrayList是基于写时拷贝技术保证安全的</li>\n<li>Collections.synchronizedList返回的包装类是基于synchronized锁机制保证安全的</li>\n</ul>\n</li>\n<li>性能：<ul>\n<li>CopyOnWriteArrayList适合读多写少的安全场景</li>\n<li>Collections.synchronizedList适合常规读写的安全场景</li>\n</ul>\n</li>\n<li>空间：<ul>\n<li>CopyOnWriteArrayList修改时需要拷贝一份数据，比Collections.synchronizedList更占内存</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"为什么ArrayList实现了RandomAccess接口而LinkedList却没有\"><a href=\"#为什么ArrayList实现了RandomAccess接口而LinkedList却没有\" class=\"headerlink\" title=\"为什么ArrayList实现了RandomAccess接口而LinkedList却没有\"></a>为什么ArrayList实现了RandomAccess接口而LinkedList却没有</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37967783/article/details/105234540\">为什么ArrayList实现了RandomAccess接口而LinkedList却没有</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h2><h3 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43200566/article/details/128152710\">java集合详解</a></li>\n<li><a href=\"https://blog.csdn.net/beautiful_huang/article/details/105010030\">java集合类型之TreeSet详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhaojie181711/article/details/80510129\">java集合类型之LinkedHashSet详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Map\"><a href=\"#Map\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h3 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/p312011150/article/details/89251565\">java映射详解</a></li>\n<li><a href=\"https://blog.csdn.net/whc888666/article/details/108990090\">java映射类型之TreeMap详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41969790/article/details/106154225\">java映射类型之LinkedHashMap详解</a></li>\n<li><a href=\"https://blog.csdn.net/haoweng4800/article/details/118592875\">java映射类型之IdentityHashMap详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19922839/article/details/114654573\">java映射类型之BidiMap和MultiMap详解</a></li>\n<li><a href=\"https://blog.csdn.net/wbb9019/article/details/90642922\">java8之映射新特性入门</a></li>\n<li><a href=\"https://blog.csdn.net/AnoiaDream/article/details/109213714\">java8之映射新特性详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37811638/article/details/103223880\">java映射操作之put详解</a></li>\n<li><a href=\"https://blog.csdn.net/wo415415/article/details/87469226\">java映射操作之put与compute详解</a></li>\n<li><a href=\"https://blog.csdn.net/cnds123321/article/details/113793574\">java映射操作之put和putIfAbsent详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24082175/article/details/119157022\">java映射操作之putIfAbsent和computeIfAbsent详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39723544/article/details/91359302\">java映射操作之compute入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/120330979\">java映射操作之compute详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42815754/article/details/104798709\">java映射操作之computeIfAbsent和computeIfPresent详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"HashMap和ConcurrentHashMap的区别\"><a href=\"#HashMap和ConcurrentHashMap的区别\" class=\"headerlink\" title=\"HashMap和ConcurrentHashMap的区别\"></a>HashMap和ConcurrentHashMap的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42949615/article/details/124109063\">HashMap和ConcurrentHashMap的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"HashMap和Hashtable的区别\"><a href=\"#HashMap和Hashtable的区别\" class=\"headerlink\" title=\"HashMap和Hashtable的区别\"></a>HashMap和Hashtable的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xuhuaabc/article/details/91475761\">HashMap和Hashtable的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Collections-synchronizedMap和Hashtable的区别\"><a href=\"#Collections-synchronizedMap和Hashtable的区别\" class=\"headerlink\" title=\"Collections.synchronizedMap和Hashtable的区别\"></a>Collections.synchronizedMap和Hashtable的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43561914/article/details/115268360\">Collections.synchronizedMap和Hashtable的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentHashMap和Hashtable的区别\"><a href=\"#ConcurrentHashMap和Hashtable的区别\" class=\"headerlink\" title=\"ConcurrentHashMap和Hashtable的区别\"></a>ConcurrentHashMap和Hashtable的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/asad21654864/article/details/130070461\">ConcurrentHashMap和Hashtable的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentHashMap和Collections-synchronizedMap的区别\"><a href=\"#ConcurrentHashMap和Collections-synchronizedMap的区别\" class=\"headerlink\" title=\"ConcurrentHashMap和Collections.synchronizedMap的区别\"></a>ConcurrentHashMap和Collections.synchronizedMap的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhu_fangyuan/article/details/110455386\">ConcurrentHashMap和Collections.synchronizedMap的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Queue\"><a href=\"#Queue\" class=\"headerlink\" title=\"Queue\"></a>Queue</h2><h3 id=\"Basic-4\"><a href=\"#Basic-4\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Archiea/article/details/122512483\">java队列详解</a></li>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/110195517\">BlockingQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/zmx729618/article/details/52980158\">SynchronousQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/inthat/article/details/108360964\">TransferQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010675669/article/details/86503464\">PriorityQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/leaderFLY/article/details/115344174\">DelayQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/daliucheng/article/details/120472938\">DelayQueue之延时元素接口(Delayed)</a></li>\n<li><a href=\"https://blog.csdn.net/qq15887345/article/details/109563771\">DelayQueue之实现延时任务</a></li>\n<li><a href=\"https://blog.csdn.net/LeoHan163/article/details/122667781\">DelayQueue之和PriorityQueue的关系</a></li>\n<li><a href=\"https://blog.csdn.net/w13485673086/article/details/88538826\">DelayedWorkQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013011866/article/details/100590705\">消息队列和任务队列的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39397165/article/details/109481226\">消息队列和任务队列的区别详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>消息队列：消息处理耗时短，所以需要并发较高（不会阻塞）的队列<ul>\n<li>普通消息队列：ConcurrentLinkedQueue</li>\n<li>延时消息队列：DelayQueue</li>\n</ul>\n</li>\n<li>任务队列：任务处理耗时长，所以需要支持阻塞（并发较低）的队列<ul>\n<li>普通任务队列：LinkedBlockingqueue</li>\n<li>延时任务队列：DelayedWorkQueue</li>\n</ul>\n</li>\n</ul>\n<p>双端队列的作用</p>\n<ul>\n<li>模拟栈</li>\n<li>实现消费失败回退功能</li>\n</ul>\n<h3 id=\"Question-2\"><a href=\"#Question-2\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"Queue方法的区别\"><a href=\"#Queue方法的区别\" class=\"headerlink\" title=\"Queue方法的区别\"></a>Queue方法的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012745499/article/details/108331888\">Queue方法的区别</a></li>\n</ul>\n</blockquote>\n<p>按照操作分</p>\n<ul>\n<li>add&#x2F;offer&#x2F;put：添加尾部元素</li>\n<li>remove&#x2F;poll&#x2F;take：移除头部元素</li>\n<li>element&#x2F;peek：查询头部元素</li>\n</ul>\n<p>按照结果分</p>\n<ul>\n<li>add&#x2F;remove&#x2F;element：操作元素失败的时候抛出异常</li>\n<li>offer&#x2F;poll&#x2F;peek：操作元素失败的时候会返回值</li>\n<li>put&#x2F;take：操作元素失败的时候会阻塞</li>\n</ul>\n<blockquote>\n<p>put&#x2F;take是BlockingQueue接口特有的阻塞方法，Queue接口里没有</p>\n</blockquote>\n<h4 id=\"ArrayDeque和LinkedList的区别\"><a href=\"#ArrayDeque和LinkedList的区别\" class=\"headerlink\" title=\"ArrayDeque和LinkedList的区别\"></a>ArrayDeque和LinkedList的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45465895/article/details/106834528\">ArrayDeque和LinkedList的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>结构：<ul>\n<li>ArrayDeque是基于数组实现的</li>\n<li>LinkedList是基于链表实现的</li>\n</ul>\n</li>\n<li>性能：<ul>\n<li>ArrayDeque读取时使用索引直接定位，所以读取（随机访问）较快，写入时需要移动元素，所以写入（插入和删除）较慢</li>\n<li>LinkedList读取时需从头开始遍历，所以读取（随机访问）较慢，写入时不需要移动元素，所以写入（插入和删除）较快</li>\n</ul>\n</li>\n<li>空间：<ul>\n<li>LinkedList使用Node结构还需要存储前指针和后指针，比ArrayDeque更占内存</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ArrayBlockingQueue和LinkedBlockingQueue的区别\"><a href=\"#ArrayBlockingQueue和LinkedBlockingQueue的区别\" class=\"headerlink\" title=\"ArrayBlockingQueue和LinkedBlockingQueue的区别\"></a>ArrayBlockingQueue和LinkedBlockingQueue的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/silyvin/article/details/79482941\">ArrayBlockingQueue和LinkedBlockingQueue的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>结构：<ul>\n<li>ArrayBlockingQueue是基于循环数组实现的，LinkedBlockingQueue基于链表实现的</li>\n<li>ArrayBlockingQueue必须设置边界，LinkedBlockingQueue默认无界，但边界可配</li>\n</ul>\n</li>\n<li>性能：<ul>\n<li>ArrayBlockingQueue出队和入队使用同一把锁，LinkedBlockingQueue出队和入队使用不同的锁，因此LinkedBlockingQueue的并发支持更高</li>\n</ul>\n</li>\n<li>空间：<ul>\n<li>ArrayBlockingQueue因为使用循环数组会分配固定的内存，LinkedBlockingQueue按需使用内存，因此ArrayBlockingQueue在滞留元素较少时容易浪费空间</li>\n<li>LinkedBlockingQueue使用Node结构还需要存储指针，比ArrayBlockingQueue更占内存</li>\n<li>LinkedBlockingQueue会频繁的创建和销毁额外的Node对象，对GC存在较大影响</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"LinkedBlockingQueue和ConcurrentLinkedQueue的区别\"><a href=\"#LinkedBlockingQueue和ConcurrentLinkedQueue的区别\" class=\"headerlink\" title=\"LinkedBlockingQueue和ConcurrentLinkedQueue的区别\"></a>LinkedBlockingQueue和ConcurrentLinkedQueue的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Andrew_Chenwq/article/details/124139334\">LinkedBlockingQueue和ConcurrentLinkedQueue的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/a303549861/article/details/90641143\">LinkedBlockingQueue和ConcurrentLinkedQueue的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Developlee/article/details/108099933\">LinkedBlockingQueue和ConcurrentLinkedQueue的区别详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>ConcurrentLinkedQueue：并发较高（不会阻塞），适合<code>普通消息队列</code></li>\n<li>LinkedBlockingqueue：支持阻塞（并发较低），适合<code>普通任务队列</code></li>\n</ul>\n<h4 id=\"SynchronousQueue和TransferQueue的区别\"><a href=\"#SynchronousQueue和TransferQueue的区别\" class=\"headerlink\" title=\"SynchronousQueue和TransferQueue的区别\"></a>SynchronousQueue和TransferQueue的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_29860591/article/details/113726069\">SynchronousQueue和TransferQueue的区别</a></li>\n</ul>\n</blockquote>\n<h4 id=\"DelayQueue和DelayedWorkQueue的区别\"><a href=\"#DelayQueue和DelayedWorkQueue的区别\" class=\"headerlink\" title=\"DelayQueue和DelayedWorkQueue的区别\"></a>DelayQueue和DelayedWorkQueue的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_30570101/article/details/95353221\">DelayQueue和DelayedWorkQueue的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>DelayQueue是 <code>延时消息队列</code> （基于PriorityQueue实现的），支持的元素的类型是 <code>Delayed</code></li>\n<li>DelayedWorkQueue是 <code>延时任务队列</code> （ScheduledThreadPoolExecutor的内部类），支持的元素类型是 <code>RunnableScheduledFuture</code></li>\n</ul>\n<h2 id=\"Stack\"><a href=\"#Stack\" class=\"headerlink\" title=\"Stack\"></a>Stack</h2><h3 id=\"Basic-5\"><a href=\"#Basic-5\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingyuli/article/details/119064618\">java栈列详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Traverse\"><a href=\"#Traverse\" class=\"headerlink\" title=\"Traverse\"></a>Traverse</h1><p>Traverse：遍历</p>\n<h2 id=\"Basic-6\"><a href=\"#Basic-6\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lishuoboy/article/details/124932806\">java容器遍历方式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Iterator\"><a href=\"#Iterator\" class=\"headerlink\" title=\"Iterator\"></a>Iterator</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/syc0616/article/details/116122418\">java容器遍历之迭代器（Iterator）入门</a></li>\n<li><a href=\"https://blog.csdn.net/sheng0113/article/details/122712947\">java容器遍历之迭代器（Iterator）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Fail\"><a href=\"#Fail\" class=\"headerlink\" title=\"Fail\"></a>Fail</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/striner/article/details/86375684\">java容器遍历之快速失败（fail-fast）和安全失败（fail-safe）入门</a></li>\n<li><a href=\"https://blog.csdn.net/MCQ1999/article/details/108907295\">java容器遍历之快速失败（fail-fast）和安全失败（fail-safe）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-3\"><a href=\"#Question-3\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"Iterator和Itreable的区别\"><a href=\"#Iterator和Itreable的区别\" class=\"headerlink\" title=\"Iterator和Itreable的区别\"></a>Iterator和Itreable的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011523796/article/details/79018718\">Iterator和Itreable的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Iterator：迭代器，负责进行遍历</li>\n<li>Itreable：可迭代，负责返回Iterator</li>\n</ul>\n<h3 id=\"Iterator和ListIterator的区别\"><a href=\"#Iterator和ListIterator的区别\" class=\"headerlink\" title=\"Iterator和ListIterator的区别\"></a>Iterator和ListIterator的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39017359/article/details/89293748\">Iterator和ListIterator的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Iterator只能向后遍历</li>\n<li>ListIterator还可以向前遍历</li>\n</ul>\n<h3 id=\"List遍历时怎么安全的删除元素\"><a href=\"#List遍历时怎么安全的删除元素\" class=\"headerlink\" title=\"List遍历时怎么安全的删除元素\"></a>List遍历时怎么安全的删除元素</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36412715/article/details/84071160\">List遍历时怎么删除元素</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Sorting\"><a href=\"#Sorting\" class=\"headerlink\" title=\"Sorting\"></a>Sorting</h1><p>Sorting：排序</p>\n<h2 id=\"Basic-7\"><a href=\"#Basic-7\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Vici__/article/details/85293896\">java容器排序详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Comparator\"><a href=\"#Comparator\" class=\"headerlink\" title=\"Comparator\"></a>Comparator</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Madoka_Homura/article/details/107382799\">java容器排序之比较器（Comparator）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Comparable\"><a href=\"#Comparable\" class=\"headerlink\" title=\"Comparable\"></a>Comparable</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41474648/article/details/105182845\">java容器排序之可排序（Comparable）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Collation\"><a href=\"#Collation\" class=\"headerlink\" title=\"Collation\"></a>Collation</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HappyRocking/article/details/83619392\">字典序详解</a></li>\n<li><a href=\"https://blog.csdn.net/luo381821/article/details/114097237\">字典序之java</a></li>\n<li><a href=\"https://blog.csdn.net/gymaisyl/article/details/83039279\">字典序之python</a></li>\n<li><a href=\"https://blog.csdn.net/zzy123654321/article/details/78886696\">字典序之javascript</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43669007/article/details/106584558\">字典序之linux</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-4\"><a href=\"#Question-4\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"Comparator和Comparable的区别\"><a href=\"#Comparator和Comparable的区别\" class=\"headerlink\" title=\"Comparator和Comparable的区别\"></a>Comparator和Comparable的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45559536/article/details/106091870\">Comparator和Comparable的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Comparator：比较器，负责对任意两个对象进行比较</li>\n<li>Comparable：可比较，负责比较当前对象和其他对象</li>\n</ul>\n<h3 id=\"Collections-sort和Arrays-sort的区别\"><a href=\"#Collections-sort和Arrays-sort的区别\" class=\"headerlink\" title=\"Collections.sort和Arrays.sort的区别\"></a>Collections.sort和Arrays.sort的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42110638/article/details/85636367\">Collections.sort和Arrays.sort的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Collections-sort和Stream-sorted的区别\"><a href=\"#Collections-sort和Stream-sorted的区别\" class=\"headerlink\" title=\"Collections.sort和Stream.sorted的区别\"></a>Collections.sort和Stream.sorted的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/123738861\">Collections.sort和stream().sorted的区别</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Nullable\"><a href=\"#Nullable\" class=\"headerlink\" title=\"Nullable\"></a>Nullable</h1><p>Nullable：可空</p>\n<h2 id=\"Basic-8\"><a href=\"#Basic-8\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/CodingNO1/article/details/105642365\">java容器空值入门</a></li>\n<li><a href=\"https://blog.csdn.net/TsuiXh/article/details/123505243\">java容器空值详解</a></li>\n</ul>\n</blockquote>\n<p>空值支持情况总结如下：</p>\n<ol>\n<li>list都允许空值</li>\n<li>除了CopyOnWriteArraySet的set都是基于map实现的，所以和map一样</li>\n<li>其他安全容器、支持排序、支持优先级的容器不允许空值</li>\n</ol>\n<h2 id=\"Question-5\"><a href=\"#Question-5\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"ConcurrentHashMap为什么key和value不能为null\"><a href=\"#ConcurrentHashMap为什么key和value不能为null\" class=\"headerlink\" title=\"ConcurrentHashMap为什么key和value不能为null\"></a>ConcurrentHashMap为什么key和value不能为null</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010979642/article/details/117333313\">ConcurrentHashMap为什么key和value不能为null</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Stream\"><a href=\"#Stream\" class=\"headerlink\" title=\"Stream\"></a>Stream</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yy339452689/article/details/110956119\">Stream详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/122136492\">Collectors详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhuweifeng/article/details/117411385\">Collectors.toCollection详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/111553400\">Collectors.toList详解</a></li>\n<li><a href=\"https://blog.csdn.net/L_fly_J/article/details/120100016\">Collectors.toSet详解</a></li>\n<li><a href=\"https://blog.csdn.net/yuxiangdeming/article/details/128901450\">Collectors.toMap详解</a></li>\n<li><a href=\"https://blog.csdn.net/kingmax54212008/article/details/98489696\">Collectors.toMap之重复的key</a></li>\n<li><a href=\"https://blog.csdn.net/wysnxzm/article/details/81260073\">Collectors.toMap之NullPointerException</a></li>\n<li><a href=\"https://blog.csdn.net/wangmuming/article/details/72747183\">Collectors之去掉null</a></li>\n<li><a href=\"https://blog.csdn.net/winterking3/article/details/116268407\">Collectors之去重</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39940674/article/details/122075526\">Stream之函数式编程详解</a></li>\n<li><a href=\"https://blog.csdn.net/li0978/article/details/113853900\">Stream之流式编程详解</a></li>\n<li><a href=\"https://blog.csdn.net/li0978/article/details/113921324\">Stream之流式编程原理</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/119947671\">Stream之修改并行度</a></li>\n</ul>\n</blockquote>\n<h2 id=\"FP（Functional-Programming-函数式编程）\"><a href=\"#FP（Functional-Programming-函数式编程）\" class=\"headerlink\" title=\"FP（Functional Programming 函数式编程）\"></a>FP（Functional Programming 函数式编程）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/li0978/article/details/113836970\">lambda表达式入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51545690/article/details/129298954\">lambda表达式详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38718258/article/details/105053475\">java函数式编程入门</a></li>\n<li><a href=\"https://blog.csdn.net/icarusliu/article/details/79495534\">java函数式编程详解</a></li>\n<li><a href=\"https://blog.csdn.net/hbdhaj/article/details/119564310\">java函数式接口入门</a></li>\n<li><a href=\"https://blog.csdn.net/atu1111/article/details/104799866\">java函数式接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/116930647\">java函数式接口之UnaryOperator和BinaryOperator</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/116985000\">java函数式接口之Function.apply详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41378597/article/details/103942253\">java函数式接口之Function.identity详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SP（Stream-Programming-流式编程）\"><a href=\"#SP（Stream-Programming-流式编程）\" class=\"headerlink\" title=\"SP（Stream Programming 流式编程）\"></a>SP（Stream Programming 流式编程）</h2><p>计算核心：Map（映射和转换）、Reduce（归并和聚合）、Filter（过滤和筛选）<br>并行核心：Parallelism（并行度）、Partition（分区）、Merge（合并）</p>\n<h3 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yy339452689/article/details/110956119\">Stream操作符详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h4><p>Storm、Spark Stream、Flink</p>\n<h5 id=\"spark\"><a href=\"#spark\" class=\"headerlink\" title=\"spark\"></a>spark</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BigData_Hobert/article/details/108762358\">Spark算子详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"flink\"><a href=\"#flink\" class=\"headerlink\" title=\"flink\"></a>flink</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuwei0376/article/details/123496301\">Flink算子详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"RP（Reactive-Programming-响应式编程）\"><a href=\"#RP（Reactive-Programming-响应式编程）\" class=\"headerlink\" title=\"RP（Reactive Programming 响应式编程）\"></a>RP（Reactive Programming 响应式编程）</h2><h3 id=\"RxJava\"><a href=\"#RxJava\" class=\"headerlink\" title=\"RxJava\"></a>RxJava</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jiduochou963/article/details/115044605\">Rxjava入门</a></li>\n<li><a href=\"https://blog.csdn.net/jdsjlzx/article/details/51485778\">Rxjava详解</a></li>\n<li><a href=\"https://blog.csdn.net/jdsjlzx/article/details/51534504\">Rxjava核心</a></li>\n<li><a href=\"https://blog.csdn.net/Gdeer/article/details/97802092\">RxJava操作符详解</a></li>\n<li><a href=\"https://blog.csdn.net/AndroidAlvin/article/details/103159576\">Rxjava链式调用原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/y1962475006/article/details/79098820\">Rxjava链式调用原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/Wengwuhua/article/details/105893242\">Rxjava链式调用和线程切换原理</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Rxjava链式调用原理\"><a href=\"#Rxjava链式调用原理\" class=\"headerlink\" title=\"Rxjava链式调用原理\"></a>Rxjava链式调用原理</h4><p>基于观察者模式实现的，并运用了责任链模式和装饰器模式</p>\n<h5 id=\"数据流转的实现\"><a href=\"#数据流转的实现\" class=\"headerlink\" title=\"数据流转的实现\"></a>数据流转的实现</h5><blockquote>\n<ol>\n<li>Rxjava的Observable. OnSubscribe的作用类似于Producer（生产者）</li>\n<li>Rxjava的Subscriber的作用类似于Consumer（消费者）</li>\n<li>Rxjava的Observable. OnSubscribe（Producer）会通过lift操作或者subcribe操作生成Subscriber（Consumer）并在调用Observable. OnSubscribe的call方法时将Subscriber传递给Observable. OnSubscribe</li>\n<li>当Observable. OnSubscribe的call方法执行时，Subscriber就会被调用</li>\n<li>这样生产者和消费者模型就形成了，数据的流转就实现了</li>\n</ol>\n</blockquote>\n<h5 id=\"生产链的建立\"><a href=\"#生产链的建立\" class=\"headerlink\" title=\"生产链的建立\"></a>生产链的建立</h5><blockquote>\n<ol>\n<li>Observable会通过create操作创建第一个Observable. OnSubscribe</li>\n<li>之后调用操作符函数时会通过lift操作创建一个新的Observable和Observable. OnSubscribe</li>\n<li>新的Observable. OnSubscribe（通过内部类的方式）引用了上一个Observable. OnSubscribe</li>\n<li>这样Observable. OnSubscribe通过Observable的创建从前到后的建立了依赖关系</li>\n<li>生产链依赖就形成了</li>\n</ol>\n</blockquote>\n<h5 id=\"生产链的触发\"><a href=\"#生产链的触发\" class=\"headerlink\" title=\"生产链的触发\"></a>生产链的触发</h5><blockquote>\n<ol>\n<li>当Observable.subcribe方法调用时，最后那个Observable. OnSubscribe的call方法就会被调用</li>\n<li>当每个Observable. OnSubscribe的call方法调用时，都会触发上一个Observable. OnSubscribe的call方法被调用</li>\n<li>这样Observable. OnSubscribe通过从后到前的递归调用，生产链调用就触发了</li>\n</ol>\n</blockquote>\n<h5 id=\"消费链的建立\"><a href=\"#消费链的建立\" class=\"headerlink\" title=\"消费链的建立\"></a>消费链的建立</h5><blockquote>\n<ol>\n<li>Observable会通过subcribe操作创建最后一个Subscriber</li>\n<li>之后subcribe操作触发Observable. OnSubscribe的call方法执行时会创建一个新的Subscriber</li>\n<li>新的Subscriber引用了当前Observable使用的Subscriber，并被传递给了上一个Observable使用</li>\n<li>这样Subscriber通过Observable的执行从后到前建立了依赖关系</li>\n<li>消费链依赖就形成了</li>\n</ol>\n</blockquote>\n<h5 id=\"消费链的触发\"><a href=\"#消费链的触发\" class=\"headerlink\" title=\"消费链的触发\"></a>消费链的触发</h5><blockquote>\n<ol>\n<li>当Observable. OnSubscribe的call方法执行时，Subscriber的onNext方法就会执行</li>\n<li>映射操作时Subscriber的onNext方法执行时会直接触发下一个Subscriber的onNext方法，聚合操作时Subscriber的onNext方法执行时会将数据缓存起来等到onCompleted方法执行时再依次触发下一个Subscriber的onNext方法</li>\n<li>这样Subscriber通过从前到后的顺序执行，消费链执行就触发了</li>\n</ol>\n</blockquote>\n<h1 id=\"Safe\"><a href=\"#Safe\" class=\"headerlink\" title=\"Safe\"></a>Safe</h1><h2 id=\"Basic-9\"><a href=\"#Basic-9\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43494882/article/details/119615153\">容器的线程安全性详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Advanced\"><a href=\"#Advanced\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Solution\"><a href=\"#Solution\" class=\"headerlink\" title=\"Solution\"></a>Solution</h3><p>线程安全容器的实现方式通常有3种</p>\n<blockquote>\n<ol>\n<li>悲观锁（LOCK）：适合 <code>低并发</code> 、 <code>常规读写</code> 、 <code>强一致性</code> 的场景，比如Blocking系列中的BlockingQueue、BlockingDeque</li>\n<li>乐观锁（CAS ）：适合 <code>高并发</code> 、 <code>读多写少</code> 、 <code>弱一致性</code> 的场景，比如Concurrent系列中的ConcurrentHashMap，ConcurrentLinkedQueue、ConcurrentLinkedDeque</li>\n<li>写时复制（COW）：适合 <code>高并发</code> 、 <code>读多写少</code> 、 <code>弱一致性</code> 的场景，比如CopyOnWrite系列中的CopyOnWriteArrayList、CopyOnWriteArraySet</li>\n</ol>\n</blockquote>\n<h3 id=\"Consistency\"><a href=\"#Consistency\" class=\"headerlink\" title=\"Consistency\"></a>Consistency</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/a3125504x/article/details/109407748\">一致性详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45506590/article/details/118498045\">顺序一致性详解</a></li>\n<li><a href=\"https://blog.csdn.net/soinice/article/details/97614793\">弱一致性和最终一致性的区别</a></li>\n</ul>\n</blockquote>\n<p>一致性有以下几个概念</p>\n<ul>\n<li>强一致性（strict consistency）<ul>\n<li>顺序一致性（sequential consistency）</li>\n</ul>\n</li>\n<li>弱一致性（weak consistency）<ul>\n<li>最终一致性（eventual consistency）</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"ConcurrentHashMap\"><a href=\"#ConcurrentHashMap\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_28605513/article/details/84992262\">ConcurrentHashMap的弱一致性入门</a></li>\n<li><a href=\"https://blog.csdn.net/yu757371316/article/details/81389867\">ConcurrentHashMap的弱一致性详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41634872/article/details/110246465\">ConcurrentHashMap之get的弱一致性</a></li>\n<li><a href=\"https://blog.csdn.net/Qgwperfect/article/details/88706891\">ConcurrentHashMap之size的弱一致性</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43327091/article/details/104208440\">ConcurrentHashMap之iterator的弱一致性</a></li>\n</ul>\n</blockquote>\n<h4 id=\"CopyOnWriteArrayList\"><a href=\"#CopyOnWriteArrayList\" class=\"headerlink\" title=\"CopyOnWriteArrayList\"></a>CopyOnWriteArrayList</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35159279/article/details/119998687\">CopyOnWriteArrayList的弱一致性</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq877728715/article/details/103063830\">容器初始容量、加载因子、扩容增量</a></li>\n</ul>\n</blockquote>\n<p>容器用到的数据结构和算法可以参考这里（原创） <a href=\"/2017/03/01/dsa/dsa/\" title=\"dsa\">dsa</a></p>\n<blockquote>\n<p>优先级队列实现：堆<br>可排序字典实现：红黑树或者跳表</p>\n</blockquote>\n<h2 id=\"List-1\"><a href=\"#List-1\" class=\"headerlink\" title=\"List\"></a>List</h2><h3 id=\"Basic-10\"><a href=\"#Basic-10\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><h4 id=\"ArrayList\"><a href=\"#ArrayList\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46726346/article/details/107562529\">ArrayList实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/fighterandknight/article/details/61240861\">ArrayList实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedList\"><a href=\"#LinkedList\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jianyuerensheng/article/details/51204598\">LinkedList实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/fighterandknight/article/details/61476335\">LinkedList实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"CopyOnWriteArrayList-1\"><a href=\"#CopyOnWriteArrayList-1\" class=\"headerlink\" title=\"CopyOnWriteArrayList\"></a>CopyOnWriteArrayList</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010002184/article/details/90452918\">CopyOnWriteArrayList实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43799161/article/details/123029380\">CopyOnWriteArrayList实现原理详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question-6\"><a href=\"#Question-6\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"ArrayList-1\"><a href=\"#ArrayList-1\" class=\"headerlink\" title=\"ArrayList\"></a>ArrayList</h4><h5 id=\"ArrayList是如何扩容的\"><a href=\"#ArrayList是如何扩容的\" class=\"headerlink\" title=\"ArrayList是如何扩容的\"></a>ArrayList是如何扩容的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/penriver/article/details/117447113\">ArrayList扩容详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Set-1\"><a href=\"#Set-1\" class=\"headerlink\" title=\"Set\"></a>Set</h2><h3 id=\"Basic-11\"><a href=\"#Basic-11\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><h4 id=\"HashSet\"><a href=\"#HashSet\" class=\"headerlink\" title=\"HashSet\"></a>HashSet</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/guoweimelon/article/details/50804799\">HashSet实现原理详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>HashSet基于HashMap实现</p>\n</blockquote>\n<h4 id=\"LinkedHashSet\"><a href=\"#LinkedHashSet\" class=\"headerlink\" title=\"LinkedHashSet\"></a>LinkedHashSet</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baidu_37366055/article/details/78367170\">LinkedHashSet实现原理详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>LinkedHashSet基于LinkedHashMap实现</p>\n</blockquote>\n<h4 id=\"TreeSet\"><a href=\"#TreeSet\" class=\"headerlink\" title=\"TreeSet\"></a>TreeSet</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/csdnlijingran/article/details/89886433\">TreeSet实现原理详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>TreeSet基于TreeMap实现</p>\n</blockquote>\n<h4 id=\"CopyOnWriteArraySet\"><a href=\"#CopyOnWriteArraySet\" class=\"headerlink\" title=\"CopyOnWriteArraySet\"></a>CopyOnWriteArraySet</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Dax1n/article/details/69950901\">CopyOnWriteArraySet实现原理详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>CopyOnWriteArraySet基于CopyOnWriteArrayList实现</p>\n</blockquote>\n<h4 id=\"ConcurrentSkipListSet\"><a href=\"#ConcurrentSkipListSet\" class=\"headerlink\" title=\"ConcurrentSkipListSet\"></a>ConcurrentSkipListSet</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hbtj_1216/article/details/114908080\">ConcurrentSkipListSet实现原理详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ConcurrentSkipListSet基于ConcurrentSkipListMap实现</p>\n</blockquote>\n<h2 id=\"Map-1\"><a href=\"#Map-1\" class=\"headerlink\" title=\"Map\"></a>Map</h2><h3 id=\"Basic-12\"><a href=\"#Basic-12\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ysz171360154/article/details/108983642\">Map之equals和hashCode详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41864321/article/details/93920730\">Map之hash冲突详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"HashMap\"><a href=\"#HashMap\" class=\"headerlink\" title=\"HashMap\"></a>HashMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qghurt/article/details/107323702\">HashMap知识点</a></li>\n<li><a href=\"https://blog.csdn.net/fst438060684/article/details/86499840\">java7和java8的HashMap区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_49263647/article/details/115740392\">java7和java8的HashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/centrl/article/details/115910463\">java7的HashMap实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/Youth_lql/article/details/110005072\">java7的HashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/lj402159806/article/details/103925779\">java8的HashMap实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/fighterandknight/article/details/61624150\">java8的HashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/jx520/article/details/127948707\">HashMap之hash方法为何要进行异或和位移</a></li>\n<li><a href=\"https://blog.csdn.net/cy973071263/article/details/122869277\">HashMap之tableSizeFor方法原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedHashMap\"><a href=\"#LinkedHashMap\" class=\"headerlink\" title=\"LinkedHashMap\"></a>LinkedHashMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40634846/article/details/106085066\">LinkedHashMap实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"TreeMap\"><a href=\"#TreeMap\" class=\"headerlink\" title=\"TreeMap\"></a>TreeMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26222859/article/details/80661053\">TreeMap实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentHashMap-1\"><a href=\"#ConcurrentHashMap-1\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40826814/article/details/115328565\">ConcurrentHashMap知识点</a></li>\n<li><a href=\"https://blog.csdn.net/u013374645/article/details/88700927\">java7和java8的ConcurrentHashMap区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32224047/article/details/108990363\">java7和java8的ConcurrentHashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/LightOfMiracle/article/details/73235252\">java7的ConcurrentHashMap实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36942720/article/details/114030517\">java7的ConcurrentHashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/lj402159806/article/details/104009846\">java8的ConcurrentHashMap实现原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/fighterandknight/article/details/68936902\">java8的ConcurrentHashMap实现原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/pmdream/article/details/120038495\">java8的ConcurrentHashMap实现原理之cas</a></li>\n<li><a href=\"https://blog.csdn.net/willlu10/article/details/106721364\">java8的ConcurrentHashMap实现原理之synchronized</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentSkipListMap\"><a href=\"#ConcurrentSkipListMap\" class=\"headerlink\" title=\"ConcurrentSkipListMap\"></a>ConcurrentSkipListMap</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/coslay/article/details/44819823\">ConcurrentSkipListMap实现原理详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question-7\"><a href=\"#Question-7\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"Map-2\"><a href=\"#Map-2\" class=\"headerlink\" title=\"Map\"></a>Map</h4><h5 id=\"为什么重写equals要重写hashCode\"><a href=\"#为什么重写equals要重写hashCode\" class=\"headerlink\" title=\"为什么重写equals要重写hashCode\"></a>为什么重写equals要重写hashCode</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45427600/article/details/113484445\">为什么重写equals要重写hashCode</a></li>\n</ul>\n</blockquote>\n<h5 id=\"hash冲突如何解决\"><a href=\"#hash冲突如何解决\" class=\"headerlink\" title=\"hash冲突如何解决\"></a>hash冲突如何解决</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_48241564/article/details/118613312\">hash冲突如何解决</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Map是如何扩容的\"><a href=\"#Map是如何扩容的\" class=\"headerlink\" title=\"Map是如何扩容的\"></a>Map是如何扩容的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39736597/article/details/113726067\">Map是如何扩容的</a></li>\n</ul>\n</blockquote>\n<h4 id=\"HashMap-1\"><a href=\"#HashMap-1\" class=\"headerlink\" title=\"HashMap\"></a>HashMap</h4><h5 id=\"HashMap的核心逻辑\"><a href=\"#HashMap的核心逻辑\" class=\"headerlink\" title=\"HashMap的核心逻辑\"></a>HashMap的核心逻辑</h5><p>关键点</p>\n<ul>\n<li>constructor：构造过程<ul>\n<li>initialCapacity：初始容量</li>\n<li>loadFactor：加载因子</li>\n<li>threshold：扩容阈值</li>\n</ul>\n</li>\n<li>put：写入元素过程<ul>\n<li>hash：求哈希（高低位进行与操作减少hash碰撞）</li>\n<li>indexFor：求下标（容量为2的n次方时使用与操作代替求余操作更快）</li>\n<li>resize：扩容<ul>\n<li>rehash：重新求哈希（容量为2的n次方时通过原hash的第n+1位判断是否需要移动）</li>\n<li>transfer：移动元素（新位置要么是原位置，要么是原位置加原容量的长度）</li>\n</ul>\n</li>\n<li>update：用equals判断是否存在相同的元素，存在则覆盖，不存在则创建并插入</li>\n<li>create：创建并插入（头插法和尾插法）</li>\n</ul>\n</li>\n<li>get：获取元素过程</li>\n<li>size：获取大小过程</li>\n<li>safe<ul>\n<li>put：java7使用Reentrantlock锁住segment，java8使用CAS + synchronized锁住头结点</li>\n<li>get：不加锁，使用volatile</li>\n<li>iterate：弱一致性和modCount</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"java7和java8的HashMap区别\"><a href=\"#java7和java8的HashMap区别\" class=\"headerlink\" title=\"java7和java8的HashMap区别\"></a>java7和java8的HashMap区别</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fst438060684/article/details/86499840\">java7和java8的HashMap区别</a></li>\n</ul>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>区别点</th>\n<th>jdk7</th>\n<th>jdk8</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>存储结构</td>\n<td>数组 + 链表</td>\n<td>数组 + 链表 + 红黑树</td>\n</tr>\n<tr>\n<td>逻辑结构</td>\n<td>Entry</td>\n<td>Node</td>\n</tr>\n<tr>\n<td>结点插法</td>\n<td>头插法</td>\n<td>尾插法</td>\n</tr>\n<tr>\n<td>哈希（hash）算法</td>\n<td>较复杂</td>\n<td>较简单（冲突了可以树化）</td>\n</tr>\n<tr>\n<td>索引（index）算法</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>扩容判断</td>\n<td>除了size&gt;threshold，还需要有hash冲突才扩容</td>\n<td>size&gt;threshold时直接扩容</td>\n</tr>\n<tr>\n<td>扩容迁移</td>\n<td>所有元素重新hash后迁移</td>\n<td>判断容量的新增高位来决定是否需要迁移，并且迁移时 新索引&#x3D;原索引+原容量</td>\n</tr>\n</tbody></table>\n<h5 id=\"java8的HashMap为什么要用红黑树\"><a href=\"#java8的HashMap为什么要用红黑树\" class=\"headerlink\" title=\"java8的HashMap为什么要用红黑树\"></a>java8的HashMap为什么要用红黑树</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/it_qingfengzhuimeng/article/details/103308308\">java8的HashMap为什么要用红黑树</a></li>\n</ul>\n</blockquote>\n<h5 id=\"java8的HashMap中的红黑树是如何排序的\"><a href=\"#java8的HashMap中的红黑树是如何排序的\" class=\"headerlink\" title=\"java8的HashMap中的红黑树是如何排序的\"></a>java8的HashMap中的红黑树是如何排序的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43842467/article/details/105909380\">java8的HashMap中的红黑树是如何排序的</a></li>\n</ul>\n</blockquote>\n<h5 id=\"java8的HashMap中链表和红黑树的转换条件\"><a href=\"#java8的HashMap中链表和红黑树的转换条件\" class=\"headerlink\" title=\"java8的HashMap中链表和红黑树的转换条件\"></a>java8的HashMap中链表和红黑树的转换条件</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40728490/article/details/105702394\">java8的HashMap中链表和红黑树的转换条件</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42949615/article/details/124519812\">java8的HashMap中链表和红黑树的转换依据</a></li>\n</ul>\n</blockquote>\n<h5 id=\"java8的HashMap容量大小为什么必须是2的幂次方\"><a href=\"#java8的HashMap容量大小为什么必须是2的幂次方\" class=\"headerlink\" title=\"java8的HashMap容量大小为什么必须是2的幂次方\"></a>java8的HashMap容量大小为什么必须是2的幂次方</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39380192/article/details/104588207\">java8的HashMap容量大小为什么必须是2的幂次方入门</a></li>\n<li><a href=\"https://blog.csdn.net/yuanchangliang/article/details/108044976\">java8的HashMap容量大小为什么必须是2的幂次方详解</a></li>\n</ul>\n</blockquote>\n<ol>\n<li>加快索引计算：计算索引时可以使用按位与运算代替求余运算，加快运算速度</li>\n<li>减少哈希冲突：按位与运算时其中一个数都是1，增大了hash分布范围，减少了hash冲突</li>\n</ol>\n<h5 id=\"HashMap是如何扩容的\"><a href=\"#HashMap是如何扩容的\" class=\"headerlink\" title=\"HashMap是如何扩容的\"></a>HashMap是如何扩容的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012191627/article/details/106927867\">HashMap扩容详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"HashMap有哪些并发问题\"><a href=\"#HashMap有哪些并发问题\" class=\"headerlink\" title=\"HashMap有哪些并发问题\"></a>HashMap有哪些并发问题</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lx853771701/article/details/124251534\">HashMap并发问题</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentHashMap-2\"><a href=\"#ConcurrentHashMap-2\" class=\"headerlink\" title=\"ConcurrentHashMap\"></a>ConcurrentHashMap</h4><h5 id=\"ConcurrentHashMap的核心逻辑\"><a href=\"#ConcurrentHashMap的核心逻辑\" class=\"headerlink\" title=\"ConcurrentHashMap的核心逻辑\"></a>ConcurrentHashMap的核心逻辑</h5><h5 id=\"java7和java8的ConcurrentHashMap区别\"><a href=\"#java7和java8的ConcurrentHashMap区别\" class=\"headerlink\" title=\"java7和java8的ConcurrentHashMap区别\"></a>java7和java8的ConcurrentHashMap区别</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013374645/article/details/88700927\">java7和java8的ConcurrentHashMap区别</a></li>\n</ul>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>区别点</th>\n<th>jdk7</th>\n<th>jdk8</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>存储结构</td>\n<td>数组 + 链表</td>\n<td>数组 + 链表 + 红黑树</td>\n</tr>\n<tr>\n<td>逻辑结构</td>\n<td>Segment + HashEntry + lock（segment）</td>\n<td>Node + cas + synchronized（head）</td>\n</tr>\n<tr>\n<td>结点插法</td>\n<td>头插法</td>\n<td>尾插法</td>\n</tr>\n<tr>\n<td>哈希（hash）算法</td>\n<td>需要hash两次</td>\n<td>只需要hash一次</td>\n</tr>\n<tr>\n<td>索引（index）算法</td>\n<td>需要index两次</td>\n<td>只需要index一次</td>\n</tr>\n<tr>\n<td>扩容判断</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>扩容迁移</td>\n<td>单线程扩容</td>\n<td>并发扩容</td>\n</tr>\n<tr>\n<td>大小计算</td>\n<td>先无锁计算三次，如果结果一样则返回计算结果，否则就会锁住所有的Segment求和</td>\n<td>直接存储size</td>\n</tr>\n</tbody></table>\n<h5 id=\"java7的ConcurrentHashMap的并发度是什么\"><a href=\"#java7的ConcurrentHashMap的并发度是什么\" class=\"headerlink\" title=\"java7的ConcurrentHashMap的并发度是什么\"></a>java7的ConcurrentHashMap的并发度是什么</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jaryle/article/details/78284291\">java7的ConcurrentHashMap的并发度是什么</a></li>\n</ul>\n</blockquote>\n<h5 id=\"java8的ConcurrentHashMap为什么放弃了分段锁\"><a href=\"#java8的ConcurrentHashMap为什么放弃了分段锁\" class=\"headerlink\" title=\"java8的ConcurrentHashMap为什么放弃了分段锁\"></a>java8的ConcurrentHashMap为什么放弃了分段锁</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sufu1065/article/details/120465782\">ConcurrentHashMap为什么放弃了分段锁详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"ConcurrentHashMap是如何计算size的\"><a href=\"#ConcurrentHashMap是如何计算size的\" class=\"headerlink\" title=\"ConcurrentHashMap是如何计算size的\"></a>ConcurrentHashMap是如何计算size的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27037443/article/details/94441885\">java7和java8的ConcurrentHashMap的size计算详解</a></li>\n<li><a href=\"https://blog.csdn.net/windy46/article/details/107545767\">java7的ConcurrentHashMap的size计算详解</a></li>\n<li><a href=\"https://blog.csdn.net/Saintmm/article/details/121311201\">java8的ConcurrentHashMap的size计算详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"ConcurrentHashMap是如何扩容的\"><a href=\"#ConcurrentHashMap是如何扩容的\" class=\"headerlink\" title=\"ConcurrentHashMap是如何扩容的\"></a>ConcurrentHashMap是如何扩容的</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rod0320/article/details/123034307\">java7和java8的ConcurrentHashMap扩容详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41384351/article/details/89578165\">java7的ConcurrentHashMap扩容详解</a></li>\n<li><a href=\"https://blog.csdn.net/zzu_seu/article/details/106698150\">java8的ConcurrentHashMap扩容详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"ConcurrentHashMap还有并发问题吗\"><a href=\"#ConcurrentHashMap还有并发问题吗\" class=\"headerlink\" title=\"ConcurrentHashMap还有并发问题吗\"></a>ConcurrentHashMap还有并发问题吗</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/beijiuyizui/article/details/109383328\">ConcurrentHashMap还有并发问题吗</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Queue-1\"><a href=\"#Queue-1\" class=\"headerlink\" title=\"Queue\"></a>Queue</h2><h3 id=\"Basic-13\"><a href=\"#Basic-13\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><h4 id=\"ArrayDeque\"><a href=\"#ArrayDeque\" class=\"headerlink\" title=\"ArrayDeque\"></a>ArrayDeque</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37627646/article/details/121859848\">ArrayDeque实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedList-1\"><a href=\"#LinkedList-1\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h4><p><a href=\"#LinkedList\">参考List部分的LinkedList</a></p>\n<h4 id=\"PriorityQueue\"><a href=\"#PriorityQueue\" class=\"headerlink\" title=\"PriorityQueue\"></a>PriorityQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37627646/article/details/121382025\">PriorityQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ArrayBlockingQueue\"><a href=\"#ArrayBlockingQueue\" class=\"headerlink\" title=\"ArrayBlockingQueue\"></a>ArrayBlockingQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109791013\">ArrayBlockingQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedBlockingQueue\"><a href=\"#LinkedBlockingQueue\" class=\"headerlink\" title=\"LinkedBlockingQueue\"></a>LinkedBlockingQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109820895\">LinkedBlockingQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"SynchronousQueue\"><a href=\"#SynchronousQueue\" class=\"headerlink\" title=\"SynchronousQueue\"></a>SynchronousQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109955522\">SynchronousQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedTransferQueue\"><a href=\"#LinkedTransferQueue\" class=\"headerlink\" title=\"LinkedTransferQueue\"></a>LinkedTransferQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109983915\">LinkedTransferQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"PriorityBlockingQueue\"><a href=\"#PriorityBlockingQueue\" class=\"headerlink\" title=\"PriorityBlockingQueue\"></a>PriorityBlockingQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109855381\">PriorityBlockingQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"DelayQueue\"><a href=\"#DelayQueue\" class=\"headerlink\" title=\"DelayQueue\"></a>DelayQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/109900500\">DelayQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"DelayedWorkQueue\"><a href=\"#DelayedWorkQueue\" class=\"headerlink\" title=\"DelayedWorkQueue\"></a>DelayedWorkQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/110101184\">DelayedWorkQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LinkedBlockingDeque\"><a href=\"#LinkedBlockingDeque\" class=\"headerlink\" title=\"LinkedBlockingDeque\"></a>LinkedBlockingDeque</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/org_hjh/article/details/110056223\">LinkedBlockingDeque实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentLinkedQueue\"><a href=\"#ConcurrentLinkedQueue\" class=\"headerlink\" title=\"ConcurrentLinkedQueue\"></a>ConcurrentLinkedQueue</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37627646/article/details/121427364\">ConcurrentLinkedQueue实现原理详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ConcurrentLinkedDeque\"><a href=\"#ConcurrentLinkedDeque\" class=\"headerlink\" title=\"ConcurrentLinkedDeque\"></a>ConcurrentLinkedDeque</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37627646/article/details/121684096\">ConcurrentLinkedDeque实现原理详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Stack-1\"><a href=\"#Stack-1\" class=\"headerlink\" title=\"Stack\"></a>Stack</h2><h3 id=\"Basic-14\"><a href=\"#Basic-14\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><h4 id=\"LinkedList-2\"><a href=\"#LinkedList-2\" class=\"headerlink\" title=\"LinkedList\"></a>LinkedList</h4><p><a href=\"#LinkedList\">参考List部分的LinkedList</a></p>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"为什么没有ConcurrentArrayList\"><a href=\"#为什么没有ConcurrentArrayList\" class=\"headerlink\" title=\"为什么没有ConcurrentArrayList\"></a>为什么没有ConcurrentArrayList</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39673037/article/details/111760888\">为什么没有ConcurrentArrayList</a></li>\n</ul>\n</blockquote>\n<h2 id=\"为什么没有ConcurrentHashSet\"><a href=\"#为什么没有ConcurrentHashSet\" class=\"headerlink\" title=\"为什么没有ConcurrentHashSet\"></a>为什么没有ConcurrentHashSet</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/p15097962069/article/details/105877038\">为什么没有ConcurrentHashSet</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>Arrays、Collections、Comparator</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_52519008/article/details/124654579\">Arrays详解</a></li>\n<li><a href=\"https://blog.csdn.net/xiangqian0721/article/details/120170736\">Collections详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/120269813\">Comparator详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><p>ArrayUtils、CollectionUtils、ListUtils、SetUtils、MapUtils、ComparatorUtils</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40722604/article/details/114698079\">Apache Commons Container详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010979642/article/details/106339345\">Apache Commons Collections详解</a></li>\n<li><a href=\"https://blog.csdn.net/wysnxzm/article/details/82425047\">Apache Commons ComparatorUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2><p>Lists、Sets、Maps、Ordering、Range、RangeSet、RangeMap、Table、Tables</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wuyuxing24/article/details/100594173\">Google Guava Container详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhiwenganyong/article/details/122770670\">Google Guava Collections详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/117391657\">Google Guava Ordering详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18671415/article/details/113128590\">Google Guava Range详解</a></li>\n<li><a href=\"https://blog.csdn.net/neweastsun/article/details/84996250\">Google Guava Table详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"exception","url":"/2017/07/01/lang/lang-1-java/junior/java-4-exception/","content":"<h1 id=\"Exception\"><a href=\"#Exception\" class=\"headerlink\" title=\"Exception\"></a>Exception</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_29229567/article/details/80773970\">java异常详解</a></li>\n<li><a href=\"https://blog.csdn.net/pipizhen_/article/details/107387343\">java异常体系</a></li>\n<li><a href=\"https://blog.csdn.net/Regino/article/details/104621439\">java异常分类</a></li>\n<li><a href=\"https://blog.csdn.net/mccand1234/article/details/51579425\">java异常时捕获Throwable还是Exception</a></li>\n<li><a href=\"https://blog.csdn.net/W601486757/article/details/101610967\">java异常之关闭资源</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45759791/article/details/107687466\">java异常之返回值</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/121093876\">java异常之全局捕获</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Object\"><a href=\"#Object\" class=\"headerlink\" title=\"Object\"></a>Object</h2><h3 id=\"Null\"><a href=\"#Null\" class=\"headerlink\" title=\"Null\"></a>Null</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44543508/article/details/94589868\">java.lang. NullPointerException</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Class\"><a href=\"#Class\" class=\"headerlink\" title=\"Class\"></a>Class</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/i_m_jack/article/details/90320717\">java.lang. ClassCastException</a></li>\n<li><a href=\"https://blog.csdn.net/dnc8371/article/details/106706472\">java.lang. ClassNotFoundException</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43947094/article/details/123835365\">java.lang. NoClassDefFoundError</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37888382/article/details/103106103\">ClassNotFoundException和NoClassDefFoundError的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41606477/article/details/108496966\">ClassNotFoundException和NoClassDefFoundError的区别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Array\"><a href=\"#Array\" class=\"headerlink\" title=\"Array\"></a>Array</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34646449/article/details/76146659\">java.lang. ArrayIndexOutOfBoundsException</a></li>\n<li><a href=\"https://blog.csdn.net/chen_kai_fa/article/details/123458535\">java.lang. NegativeArraySizeException</a></li>\n<li><a href=\"https://blog.csdn.net/li843679400/article/details/108348935\">java.lang. ArrayStoreException</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Arithmetic\"><a href=\"#Arithmetic\" class=\"headerlink\" title=\"Arithmetic\"></a>Arithmetic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_31279347/article/details/82597868\">java.lang. ArithmeticException</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Reflection\"><a href=\"#Reflection\" class=\"headerlink\" title=\"Reflection\"></a>Reflection</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/AriesTina/article/details/100516127\">java.lang. IllegalAccessException</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Parse\"><a href=\"#Parse\" class=\"headerlink\" title=\"Parse\"></a>Parse</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41798450/article/details/82855257\">java.text. ParseException</a></li>\n<li><a href=\"https://blog.csdn.net/kuailebuzhidao/article/details/118465230\">java.time.format. DateTimeParseException</a></li>\n<li><a href=\"https://blog.csdn.net/bingleihenshang/article/details/84838150\">java.lang. NumberFormatException</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Check\"><a href=\"#Check\" class=\"headerlink\" title=\"Check\"></a>Check</h2><h3 id=\"Argument\"><a href=\"#Argument\" class=\"headerlink\" title=\"Argument\"></a>Argument</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_61016066/article/details/122196148\">java.lang. IllegalArgumentException</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/han949417140/article/details/107683415\">java.lang. UnsupportedOperationException</a></li>\n</ul>\n</blockquote>\n<h3 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"State\"></a>State</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/evilcry2012/article/details/78864528\">java.lang. IllegalStateException</a></li>\n</ul>\n</blockquote>\n<h2 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LVSONGTAO1225/article/details/130895681\">java.io. IOException</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Net\"><a href=\"#Net\" class=\"headerlink\" title=\"Net\"></a>Net</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hzp666/article/details/96854876\">java.net. SocketException</a></li>\n<li><a href=\"https://blog.csdn.net/jiangyu1013/article/details/80926682\">java.net. ConnectException</a></li>\n<li><a href=\"https://blog.csdn.net/Melo_FengZhi/article/details/122903143\">java.net. SocketTimeoutException</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42747210/article/details/121512118\">网络超时之connect、read、write入门</a></li>\n<li><a href=\"https://www.baeldung.com/java-socket-connection-read-timeout\">网络超时之connect、read、write详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangjun5159/article/details/78140648\">网络超时之HttpClient入门</a></li>\n<li><a href=\"https://www.baeldung.com/java-httpclient-timeout\">网络超时之HttpClient详解</a></li>\n<li><a href=\"https://blog.csdn.net/Vincent2014Linux/article/details/98881462\">网络超时之OkHttp详解</a></li>\n<li><a href=\"https://www.baeldung.com/okhttp-timeouts\">网络超时之OkHttp详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>IOException<ul>\n<li>SocketException<ul>\n<li>ConnectException：<code>Connection refused: connect</code> 或者 <code>Connection timed out: connect</code></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SocketTimeoutException<ul>\n<li>connect：<code>Connect timed out</code></li>\n<li>read：<code>Read timed out</code></li>\n<li>write：<code>Write timed out</code></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_36731461/article/details/90287420\">java.util.concurrent. TimeoutException</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_71777195/article/details/129142106\">扯什么try-catch性能问题</a></li>\n<li><a href=\"https://blog.csdn.net/lylwo317/article/details/51869893\">try-catch性能问题测试</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43871678/article/details/106490756\">try-catch发生异常时性能损耗的原因</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><p>ExceptionUtils</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42685053/article/details/123605516\">Apache Commons ExceptionUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2><p>Throwables</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Alan_Mathison_Turing/article/details/79447161\">Google Guava Throwables详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"concurrency","url":"/2017/07/01/lang/lang-1-java/junior/java-5-concurrency/","content":"<h1 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h1><h2 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38721537/article/details/124581201\">Thread详解</a></li>\n<li><a href=\"https://blog.csdn.net/alex_xfboy/article/details/90722654\">线程上下文切换详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>线程（Thread）是执行任务的基本单位</li>\n<li>进程（Process）是分配资源的基本单位</li>\n</ul>\n<h3 id=\"Create\"><a href=\"#Create\" class=\"headerlink\" title=\"Create\"></a>Create</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yangyechi/article/details/88079983\">Thread之线程的创建方式详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>继承Thread，并实现run方法，然后调用start启动</li>\n<li>实现Runnable，并作为target传递给线程进行启动</li>\n<li>实现Callable，并用FutureTask包装后作为target传递给线程进行启动</li>\n</ul>\n<h3 id=\"Priority\"><a href=\"#Priority\" class=\"headerlink\" title=\"Priority\"></a>Priority</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37139197/article/details/81989749\">Thread之线程的优先级详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Daemon\"><a href=\"#Daemon\" class=\"headerlink\" title=\"Daemon\"></a>Daemon</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40087231/article/details/90031253\">Thread之守护线程入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41063141/article/details/91939540\">Thread之守护线程详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"State\"><a href=\"#State\" class=\"headerlink\" title=\"State\"></a>State</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/muzhixi/article/details/105197446\">Thread之线程状态入门</a></li>\n<li><a href=\"https://blog.csdn.net/Elephant_King/article/details/122559577\">Thread之线程状态详解</a></li>\n</ul>\n</blockquote>\n<p>NEW、READY、RUNNING、WAITING、TIMED_WAITING、BLOCKED、TERMINATED</p>\n<ul>\n<li>NEW（新建）：创建线程后进入此状态</li>\n<li>READY（就绪）：创建后调用Thread.start或者运行时调用Thread.yield进入此状态</li>\n<li>RUNNING（运行）：获取资源（cpu和lock）成功后进入此状态</li>\n<li>WAITING（等待）：调用Thread.join、Object.wait、LockSupport.park的非超时方法后进入此状态</li>\n<li>TIMED_WAITING（超时等待）：调用Thread.sleep、Thread.join、Object.wait、LockSupport.park的超时方法后进入此状态</li>\n<li>BLOCKED（阻塞）：获取lock失败后进入此状态</li>\n<li>TERMINATED（死亡）：结束线程后进入此状态</li>\n</ul>\n<h3 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lbh199466/article/details/104691252\">Thread之线程资源详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>cpu：中央处理器资源</li>\n<li>lock：锁资源</li>\n</ul>\n<h3 id=\"Control\"><a href=\"#Control\" class=\"headerlink\" title=\"Control\"></a>Control</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41540362/article/details/102809420\">Thread之线程控制入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011047968/article/details/106954649\">Thread之线程控制详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_29384657/article/details/52228578\">Thread之线程控制之join详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010983881/article/details/80257703\">Thread之线程控制之join原理</a></li>\n<li><a href=\"https://blog.csdn.net/shangguoli/article/details/108453551\">Thread之线程控制之join唤醒</a></li>\n<li><a href=\"https://blog.csdn.net/succing/article/details/123023851\">Thread之线程控制之join和锁</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Thread.yield：让出cpu资源并进入<code>就绪状态</code>，<code>不释放锁资源</code></li>\n<li>Thread.sleep：让出cpu资源并进入<code>等待状态</code>，<code>不释放锁资源</code></li>\n<li>Thread.join：让出cpu资源并进入<code>等待状态</code>，<code>会释放锁资源</code>，作用是调用线程等待线程t结束后继续运行，内部是基于wait实现的，JVM会在线程t结束后自动notify在t上等待的线程</li>\n</ul>\n<h3 id=\"Interrupt\"><a href=\"#Interrupt\" class=\"headerlink\" title=\"Interrupt\"></a>Interrupt</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41512783/article/details/108943193\">Thread之线程中断入门</a></li>\n<li><a href=\"https://blog.csdn.net/hl_java/article/details/79162097\">Thread之线程中断详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40378837/article/details/116503069\">Thread之InterruptedException详解</a></li>\n<li><a href=\"https://blog.csdn.net/yytree123/article/details/108896876\">Thread之interrupt和interrupted的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39682377/article/details/81449451\">Thread之interrupted和isInterrupted的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34167819/article/details/85629990\">Thread之阻塞IO如何中断</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps： <code>interrupt</code> 可以中断 <code>sleep</code> 、 <code>join</code> 、 <code>wait</code> 等那些判断了 <code>isInterrupted</code> 的操作</p>\n</blockquote>\n<h3 id=\"Terminate\"><a href=\"#Terminate\" class=\"headerlink\" title=\"Terminate\"></a>Terminate</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26482855/article/details/118676625\">Thread之线程终止入门</a></li>\n<li><a href=\"https://blog.csdn.net/x541211190/article/details/109428620\">Thread之线程终止详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44715697/article/details/114494899\">Thread之不推荐使用volatile修饰的标记终止线程</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Deprecated\"><a href=\"#Deprecated\" class=\"headerlink\" title=\"Deprecated\"></a>Deprecated</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gediseer/article/details/53835295\">Thread之废弃的方法入门</a></li>\n<li><a href=\"https://blog.csdn.net/hchaoh/article/details/103907661\">Thread之废弃的方法详解</a></li>\n</ul>\n</blockquote>\n<p>suspend&#x2F;resume、stop、destroy</p>\n<ul>\n<li>suspend：不会释放锁，会导致死锁问题</li>\n<li>stop：会立即终止线程，导致操作被中断，会导致数据不一致和资源未释放等问题</li>\n<li>destroy：从来都没有被实现过，且已经被废弃了（相当于suspend且没有后续的resume）</li>\n</ul>\n<h2 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"线程和进程的区别\"><a href=\"#线程和进程的区别\" class=\"headerlink\" title=\"线程和进程的区别\"></a>线程和进程的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/102021274\">线程和进程的区别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Runnable和Callable的区别\"><a href=\"#Runnable和Callable的区别\" class=\"headerlink\" title=\"Runnable和Callable的区别\"></a>Runnable和Callable的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sinat_39634657/article/details/81456810\">Runnable和Callable的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Runnable不能获取返回值</li>\n<li>Callable和Future、FutureTask配合可以获取返回值</li>\n</ul>\n<h3 id=\"Thread的start和run的区别\"><a href=\"#Thread的start和run的区别\" class=\"headerlink\" title=\"Thread的start和run的区别\"></a>Thread的start和run的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Mypromise_TFS/article/details/81096007\">run和start的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>start是本地方法，会启动线程</li>\n<li>run是普通方法，不会启动线程</li>\n</ul>\n<blockquote>\n<p>start调用了start0，start0是本地方法</p>\n</blockquote>\n<h3 id=\"Thread的start能调用多次吗\"><a href=\"#Thread的start能调用多次吗\" class=\"headerlink\" title=\"Thread的start能调用多次吗\"></a>Thread的start能调用多次吗</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Vae023/article/details/106985222\">Thread的start能调用多次吗</a></li>\n</ul>\n</blockquote>\n<p>不能，再次调用时会检测到状态变化后抛出 <code>IllegalThreadStateException</code> 异常</p>\n<h3 id=\"Thread的sleep和yield的区别\"><a href=\"#Thread的sleep和yield的区别\" class=\"headerlink\" title=\"Thread的sleep和yield的区别\"></a>Thread的sleep和yield的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rod0320/article/details/123167174\">sleep和yield的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>方法：都是Thread的静态方法</li>\n<li>锁：都不释放锁</li>\n<li>状态：sleep进入到等待状态，yield进入到就绪状态</li>\n</ul>\n<h3 id=\"Thread的sleep和join的区别\"><a href=\"#Thread的sleep和join的区别\" class=\"headerlink\" title=\"Thread的sleep和join的区别\"></a>Thread的sleep和join的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rod0320/article/details/123167174\">sleep和join的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>方法：sleep是Thread的静态方法，join是Thread的实例方法</li>\n<li>锁：sleep不释放锁，join释放锁</li>\n<li>状态：都是进入到等待状态</li>\n</ul>\n<h3 id=\"Thread的join和wait的区别\"><a href=\"#Thread的join和wait的区别\" class=\"headerlink\" title=\"Thread的join和wait的区别\"></a>Thread的join和wait的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rod0320/article/details/123167174\">join和wait的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>方法：join是Thread的实例方法，wait是Object的实例方法</li>\n<li>锁：都会释放锁</li>\n<li>使用：join是基于wait实现的线程通信快捷方式，join调用时jvm会在线程结束后自动notify</li>\n</ul>\n<h1 id=\"ThreadLocal\"><a href=\"#ThreadLocal\" class=\"headerlink\" title=\"ThreadLocal\"></a>ThreadLocal</h1><h2 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lisheng19870305/article/details/110100947\">ThreadLocal入门</a></li>\n<li><a href=\"https://blog.csdn.net/u010445301/article/details/111322569\">ThreadLocal进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wangnanwlw/article/details/108866086\">ThreadLocal详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42285585/article/details/119035982\">ThreadLocal精进</a></li>\n<li><a href=\"https://blog.csdn.net/meism5/article/details/90413860\">ThreadLocal原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38293564/article/details/80459827\">ThreadLocal原理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44377709/article/details/105962734\">ThreadLocal原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39192827/article/details/85611873\">ThreadLocal之强弱引用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Scene\"><a href=\"#Scene\" class=\"headerlink\" title=\"Scene\"></a>Scene</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/CSDN2497242041/article/details/120192343\">ThreadLocal使用场景</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37609060/article/details/122410302\">ThreadLocal保证DateFormat的线程安全</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Leak\"><a href=\"#Leak\" class=\"headerlink\" title=\"Leak\"></a>Leak</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u022812849/article/details/107513876\">ThreadLocal内存泄漏入门</a></li>\n<li><a href=\"https://blog.csdn.net/y5492853/article/details/123984840\">ThreadLocal内存泄漏详解</a></li>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/120351275\">内存泄漏详解</a></li>\n<li><a href=\"https://blog.csdn.net/sushuiyuzhou/article/details/108463530\">内存溢出详解</a></li>\n<li><a href=\"https://blog.csdn.net/golden_zhj/article/details/86574481\">内存泄漏和内存溢出的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44798288/article/details/119641944\">内存泄漏和内存溢出的区别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Inherit\"><a href=\"#Inherit\" class=\"headerlink\" title=\"Inherit\"></a>Inherit</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/a837199685/article/details/52712547\">ThreadLocal之子线程</a></li>\n<li><a href=\"https://blog.csdn.net/liubenlong007/article/details/107050929\">ThreadLocal之线程池</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"ThreadLocal为什么会内存泄漏\"><a href=\"#ThreadLocal为什么会内存泄漏\" class=\"headerlink\" title=\"ThreadLocal为什么会内存泄漏\"></a>ThreadLocal为什么会内存泄漏</h3><ol>\n<li>ThreadLocal是基于ThreadLocalMap实现的</li>\n<li>Thread引用了ThreadLocalMap</li>\n<li>ThreadLocalMap引用了key和value</li>\n<li>key弱引用了ThreadLocal</li>\n<li>当ThreadLocal不在使用时，即没有强引用时</li>\n<li>由于key是弱引用，所以ThreadLocal会被回收</li>\n<li>此时无法通过ThreadLocal访问value，value应该被回收</li>\n<li>由于Thread间接强引用了value，所以要先回收Thread</li>\n<li>但是如果Thread是线程池时，Thread不能被回收，所以value不能回收</li>\n<li>此时value既不能访问又不能回收，就造成了内存泄漏</li>\n</ol>\n<blockquote>\n<p>ps：ThreadLocal在get和set时会自动检测哪些key指向null的entry并清除，可以一定程度减轻内存泄漏的影响</p>\n</blockquote>\n<h3 id=\"ThreadLocalMap的key为什么是弱引用\"><a href=\"#ThreadLocalMap的key为什么是弱引用\" class=\"headerlink\" title=\"ThreadLocalMap的key为什么是弱引用\"></a>ThreadLocalMap的key为什么是弱引用</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BruceLiu_code/article/details/118518148\">ThreadLocalMap的key为什么是弱引用</a></li>\n</ul>\n</blockquote>\n<p>当ThreadLocal不再使用时，即没有强引用时，key为弱引用可以保证ThreadLocal被回收来避免内存泄漏</p>\n<h3 id=\"ThreadLocalMap的value为什么是强引用\"><a href=\"#ThreadLocalMap的value为什么是强引用\" class=\"headerlink\" title=\"ThreadLocalMap的value为什么是强引用\"></a>ThreadLocalMap的value为什么是强引用</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/foxException/article/details/123496254\">ThreadLocalMap的value为什么是强引用</a></li>\n</ul>\n</blockquote>\n<p>如果value是弱引用，垃圾回收后value指向了null，此时ThreadLocal还活着却获取不到value对象就不符合逻辑</p>\n<h3 id=\"ThreadLocalMap为什么不用Thread做key\"><a href=\"#ThreadLocalMap为什么不用Thread做key\" class=\"headerlink\" title=\"ThreadLocalMap为什么不用Thread做key\"></a>ThreadLocalMap为什么不用Thread做key</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_72088858/article/details/126699225\">ThreadLocalMap为什么不用Thread做key</a></li>\n<li><a href=\"https://blog.csdn.net/trayvonnn/article/details/112524314\">HashMap线程不安全导致的死循环和数据丢失</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>如果用ThreadLocalMap做key（此时ThreadLocalMap就会是ThreadLocal的实例），就会有多个线程访问map，就需要保证线程安全，复杂性会提高，并且并发性也会降低</li>\n<li>如果用ThreadLocal做key（此时ThreadLocalMap就会是Thread的实例），那么访问map的线程都是持有map的那一个线程，就不需要保证线程安全，复杂性会降低，并且并发性也会提高</li>\n<li>如果是用二级map，那就会和ThreadLocalMap做key一样，就会有多个线程访问map，就需要保证线程安全，还需要两次寻址，复杂性会更高，并且并发性也会更低</li>\n</ul>\n<h3 id=\"ThreadLocal为什么要定义成静态变量\"><a href=\"#ThreadLocal为什么要定义成静态变量\" class=\"headerlink\" title=\"ThreadLocal为什么要定义成静态变量\"></a>ThreadLocal为什么要定义成静态变量</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/justlpf/article/details/106097539\">ThreadLocal为什么要定义成静态变量</a></li>\n</ul>\n</blockquote>\n<p>定义成实例变量，容易重复创建，造成内存浪费</p>\n<h3 id=\"ThreadLocal和局部变量的区别\"><a href=\"#ThreadLocal和局部变量的区别\" class=\"headerlink\" title=\"ThreadLocal和局部变量的区别\"></a>ThreadLocal和局部变量的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yk20091201/article/details/88844954\">ThreadLocal和局部变量的区别</a></li>\n</ul>\n</blockquote>\n<p>ThreadLocal是线程（隔离）变量，局部变量是方法（隔离）或者代码块（隔离）变量</p>\n<h1 id=\"Safe\"><a href=\"#Safe\" class=\"headerlink\" title=\"Safe\"></a>Safe</h1><h2 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/q669239799/article/details/90614077\">线程安全详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>不可变：不可变对象一定是安全的</li>\n<li>绝对安全：对象的单个操作和复合操作都是安全的</li>\n<li>相对安全：对象的单个操作是安全的，复合操作需要额外的同步措施来保证安全</li>\n<li>兼容安全：对象的所有操作都不安全，但可以通过额外的同步措施来保证安全</li>\n<li>安全对立：即使采取了额外的同步措施也无法保证安全</li>\n</ul>\n<h2 id=\"Advanced\"><a href=\"#Advanced\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"线程安全之基本原则\"><a href=\"#线程安全之基本原则\" class=\"headerlink\" title=\"线程安全之基本原则\"></a>线程安全之基本原则</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/songzi1228/article/details/102506136\">线程安全之基本原则入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58196614/article/details/126257857\">线程安全之基本原则详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014191624/article/details/118991744\">线程安全之基本原则之volatile</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>原子性：某个操作不可被中断（synchronized、lock、atomic）</li>\n<li>可见性：对主存的修改可以及时地被其他线程看到（synchronized、lock、volatile）</li>\n<li>有序性：指令没有被重新排列（synchronized、lock、volatile）</li>\n</ul>\n<blockquote>\n<p>ps：volatile只能保证可见性和有序性，atomic只能保证原子性<br>所以volatile只能修饰哪些已经保证了原子性的操作，比如 <code>flag读写</code> 、 <code>atomic类</code> 、 <code>cas操作</code></p>\n</blockquote>\n<h3 id=\"线程安全之实现方案\"><a href=\"#线程安全之实现方案\" class=\"headerlink\" title=\"线程安全之实现方案\"></a>线程安全之实现方案</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lililuni/article/details/86534388\">线程安全之实现方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014454538/article/details/98515807\">线程安全之实现方案详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>共享<ul>\n<li>不可变<ul>\n<li>不可变对象（Immutable）：通过对象不可变机制实现</li>\n</ul>\n</li>\n<li>访问控制<ul>\n<li>悲观锁（LOCK）：通过Mutex机制实现</li>\n<li>乐观锁（CAS）：通过CAS机制实现</li>\n</ul>\n</li>\n<li>读写分离<ul>\n<li>写时复制（COW）：通过COW机制实现</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>私有<ul>\n<li>方法局部对象（LocalVariable）：通过方法私有机制实现</li>\n<li>线程隔离对象（ThreadLocal）：通过线程私有机制实现</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"线程安全之对象安全\"><a href=\"#线程安全之对象安全\" class=\"headerlink\" title=\"线程安全之对象安全\"></a>线程安全之对象安全</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tiandao321/article/details/81300489\">线程安全之对象安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22701869/article/details/107271921\">线程安全之对象安全进阶</a></li>\n<li><a href=\"https://blog.csdn.net/CsWarmSun/article/details/122050509\">线程安全之对象安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/songzi1228/article/details/90714122\">线程安全之单例模式和volatile入门</a></li>\n<li><a href=\"https://blog.csdn.net/java_1996/article/details/87472644\">线程安全之单例模式和volatile详解</a></li>\n</ul>\n</blockquote>\n<p>单例模式中volatile的作用</p>\n<ul>\n<li>保证可见性：volatile保证可见性，避免双重判断时没有读到最新的状态从而重复创建对象</li>\n<li>保证有序性：volatile禁止指令重排，避免对象创建时还没有构造完成就交付引用从而错误的使用不完整的对象</li>\n</ul>\n<h3 id=\"线程安全之变量安全\"><a href=\"#线程安全之变量安全\" class=\"headerlink\" title=\"线程安全之变量安全\"></a>线程安全之变量安全</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42924666/article/details/121293321\">线程安全之静态变量详解</a></li>\n<li><a href=\"https://blog.csdn.net/nihui123/article/details/102824471\">线程安全之实例变量详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45950109/article/details/116723700\">线程安全之局部变量详解</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/104573489\">线程安全之线程变量详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>可共享变量：静态变量、实例变量</li>\n<li>只私有变量：局部变量、线程变量</li>\n</ul>\n<blockquote>\n<p>ps：可共享变量需要安全控制，只私有变量不需要安全控制，但是局部变量返回给外面后就需要安全控制</p>\n</blockquote>\n<h3 id=\"线程安全之内存安全\"><a href=\"#线程安全之内存安全\" class=\"headerlink\" title=\"线程安全之内存安全\"></a>线程安全之内存安全</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChineseSoftware/article/details/118356699\">线程安全之内存安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/115353065\">线程安全之内存安全详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Lock\"><a href=\"#Lock\" class=\"headerlink\" title=\"Lock\"></a>Lock</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_50370837/article/details/124471888\">Lock详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38004638/article/details/114736314\">Lock分类</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><h3 id=\"锁的作用\"><a href=\"#锁的作用\" class=\"headerlink\" title=\"锁的作用\"></a>锁的作用</h3><p>对并发操作进行安全控制</p>\n<ul>\n<li>保证原子性：通过Mutex机制保证同时只有一个操作者使用资源</li>\n<li>保证可见性：加锁时触发Load屏障，解锁时触发Store屏障</li>\n<li>保证有序性：禁止指令重排</li>\n</ul>\n<h4 id=\"并发操作的控制方式\"><a href=\"#并发操作的控制方式\" class=\"headerlink\" title=\"并发操作的控制方式\"></a>并发操作的控制方式</h4><blockquote>\n<ol>\n<li>悲观锁（LOCK）：适合 <code>低并发</code> 、 <code>常规读写</code> 、 <code>强一致性</code> 的场景</li>\n<li>乐观锁（CAS ）：适合 <code>高并发</code> 、 <code>读多写少</code> 、 <code>弱一致性</code> 的场景</li>\n<li>写时复制（COW）：适合 <code>高并发</code> 、 <code>读多写少</code> 、 <code>弱一致性</code> 的场景</li>\n</ol>\n</blockquote>\n<blockquote>\n<p>ps：CAS如果写多的话，竞争激烈时大量的操作失败会浪费cpu资源<br>ps：COW如果写多的话，频繁分配内存时来不及回收会造成内存占用过高</p>\n</blockquote>\n<h4 id=\"并发操作的互斥机制\"><a href=\"#并发操作的互斥机制\" class=\"headerlink\" title=\"并发操作的互斥机制\"></a>并发操作的互斥机制</h4><blockquote>\n<ol>\n<li>悲观锁（LOCK）：写写互斥，读写互斥，读读不互斥</li>\n<li>乐观锁（CAS ）：写写互斥，读写不互斥，读读不互斥</li>\n<li>写时复制（COW）：写写互斥，读写不互斥，读读不互斥</li>\n</ol>\n</blockquote>\n<h3 id=\"锁的分类\"><a href=\"#锁的分类\" class=\"headerlink\" title=\"锁的分类\"></a>锁的分类</h3><h4 id=\"锁的类型分类\"><a href=\"#锁的类型分类\" class=\"headerlink\" title=\"锁的类型分类\"></a>锁的类型分类</h4><ul>\n<li>是否锁住资源：悲观锁（锁住资源）、乐观锁（不锁住资源）</li>\n<li>是否独占资源：排他锁（独占资源）、共享锁（共享资源）、读写锁（读共享和写独占）</li>\n<li>是否阻塞线程：同步锁（阻塞）、自旋锁（不阻塞）、读写锁（读写之间互斥时阻塞）</li>\n</ul>\n<h4 id=\"锁的实现分类\"><a href=\"#锁的实现分类\" class=\"headerlink\" title=\"锁的实现分类\"></a>锁的实现分类</h4><ul>\n<li>是否锁住资源：悲观锁（synchronized、ReentrantLock）、乐观锁（ReentrantReadWriteLock、StampedLock）</li>\n<li>是否共享资源：排他锁（synchronized、ReentrantLock）、共享锁（Semaphore）、读写锁（ReentrantReadWriteLock、StampedLock）</li>\n<li>是否阻塞线程：同步锁（synchronized、ReentrantLock）、自旋锁（SpinLock）、读写锁（ReentrantReadWriteLock、StampedLock）</li>\n</ul>\n<h4 id=\"锁的范围分类\"><a href=\"#锁的范围分类\" class=\"headerlink\" title=\"锁的范围分类\"></a>锁的范围分类</h4><ul>\n<li>线程锁</li>\n<li>进程锁</li>\n<li>分布式锁</li>\n</ul>\n<blockquote>\n<p>ps：数据库锁</p>\n</blockquote>\n<h3 id=\"锁的原理\"><a href=\"#锁的原理\" class=\"headerlink\" title=\"锁的原理\"></a>锁的原理</h3><ul>\n<li>悲观锁：Mutex + 阻塞 + 唤醒</li>\n<li>乐观锁：CAS + 自旋 + 重试</li>\n<li>读写锁：COW</li>\n</ul>\n<h3 id=\"锁的特性\"><a href=\"#锁的特性\" class=\"headerlink\" title=\"锁的特性\"></a>锁的特性</h3><ul>\n<li>是否支持重入：同一个线程是否可以多次获取锁</li>\n<li>是否支持中断：线程是否可以响应中断请求</li>\n<li>是否支持公平：线程是否能够公平的处理请求</li>\n</ul>\n<blockquote>\n<p>ps：公平（排队且先进先出）、非公平（先插队，如果失败后再排队）</p>\n</blockquote>\n<h3 id=\"锁的问题\"><a href=\"#锁的问题\" class=\"headerlink\" title=\"锁的问题\"></a>锁的问题</h3><h4 id=\"DeadLock（死锁）\"><a href=\"#DeadLock（死锁）\" class=\"headerlink\" title=\"DeadLock（死锁）\"></a>DeadLock（死锁）</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SUKI547/article/details/102678560\">死锁问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/chow__zh/article/details/123968286\">死锁问题详解</a></li>\n</ul>\n</blockquote>\n<p>死锁的产生必要的条件</p>\n<ul>\n<li>互斥使用：即当资源被一个线程占用时，别的线程不能使用</li>\n<li>不可抢占：资源请求者不能强制从资源占有者手中抢夺资源，资源只能由占有者主动释放</li>\n<li>资源保持：当资源请求者在请求其他资源的同时保持对现有资源的占有</li>\n<li>循环等待：多个线程存在环路的锁依赖关系而永远等待下去（例如T1占有T2需要的资源，T2占有T3需要的资源，T3占有T1需要的资源，这种情况可能会形成一个等待环路）</li>\n</ul>\n<h4 id=\"Starvation（饥饿）\"><a href=\"#Starvation（饥饿）\" class=\"headerlink\" title=\"Starvation（饥饿）\"></a>Starvation（饥饿）</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37734042/article/details/108417432\">饥饿和公平问题详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h3 id=\"synchronized\"><a href=\"#synchronized\" class=\"headerlink\" title=\"synchronized\"></a>synchronized</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zgcy123456/article/details/124231957\">synchronized锁入门</a></li>\n<li><a href=\"https://blog.csdn.net/chenzengnian123/article/details/122686371\">synchronized锁详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>修饰类和静态方法，锁是当前类的Class对象</li>\n<li>修饰实例方法，锁是当前实例对象</li>\n<li>修饰代码块，锁是括号里面的对象</li>\n</ul>\n<h4 id=\"synchronized锁原理\"><a href=\"#synchronized锁原理\" class=\"headerlink\" title=\"synchronized锁原理\"></a>synchronized锁原理</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/javazejian/article/details/72828483\">synchronized锁原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41590779/article/details/107821829\">synchronized锁原理详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>锁方法：通过方法的<code>ACC_SYNCHRONIZED</code>标识实现</li>\n<li>锁代码块：通过<code>monitorenter</code>和<code>monitorexit</code>指令实现</li>\n</ul>\n<h4 id=\"synchronized锁膨胀\"><a href=\"#synchronized锁膨胀\" class=\"headerlink\" title=\"synchronized锁膨胀\"></a>synchronized锁膨胀</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41477034/article/details/119775535\">synchronized锁膨胀</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>无锁：没有线程获取锁</li>\n<li>偏向锁：只有一个线程获取锁时进入此状态（通过CAS对象的标记头获取锁）</li>\n<li>轻量级锁：多个线程获取锁时进入此状态（通过CAS对象的标记头获取锁，获取锁失败的线程需进行自旋）</li>\n<li>重量级锁：多个线程获取锁并且有线程自旋失败（10次且可配置）时进入此状态（通过操作系统的Mutex机制获取锁）</li>\n</ul>\n<h4 id=\"synchronized锁消除\"><a href=\"#synchronized锁消除\" class=\"headerlink\" title=\"synchronized锁消除\"></a>synchronized锁消除</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yuan_qh/article/details/100195185\">synchronized锁消除</a></li>\n</ul>\n</blockquote>\n<h4 id=\"synchronized锁粗化\"><a href=\"#synchronized锁粗化\" class=\"headerlink\" title=\"synchronized锁粗化\"></a>synchronized锁粗化</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27471405/article/details/115410412\">synchronized锁粗化</a></li>\n</ul>\n</blockquote>\n<h4 id=\"synchronized锁自旋\"><a href=\"#synchronized锁自旋\" class=\"headerlink\" title=\"synchronized锁自旋\"></a>synchronized锁自旋</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yzpbright/article/details/105483620\">synchronized锁自旋</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ReentrantLock\"><a href=\"#ReentrantLock\" class=\"headerlink\" title=\"ReentrantLock\"></a>ReentrantLock</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42411214/article/details/105100303\">ReentrantLock详解</a></li>\n<li><a href=\"https://blog.csdn.net/every__day/article/details/108818343\">ReentrantLock原理</a></li>\n</ul>\n</blockquote>\n<h4 id=\"lock-lock-写在-try-代码块内部行吗？\"><a href=\"#lock-lock-写在-try-代码块内部行吗？\" class=\"headerlink\" title=\"lock.lock() 写在 try 代码块内部行吗？\"></a>lock.lock() 写在 try 代码块内部行吗？</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013568373/article/details/98480603\">lock.lock() 写在 try 代码块内部行吗？</a></li>\n</ul>\n</blockquote>\n<p>不能，如果写在try里面，当lock异常时，finally会执行unlock，unlock的时候检测到线程没有先持有锁会抛出 <code>IllegalMonitorStateException</code> 异常</p>\n<h4 id=\"如何安全的unlock\"><a href=\"#如何安全的unlock\" class=\"headerlink\" title=\"如何安全的unlock\"></a>如何安全的unlock</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/115608666\">如何安全的unlock</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ReentrantReadWriteLock\"><a href=\"#ReentrantReadWriteLock\" class=\"headerlink\" title=\"ReentrantReadWriteLock\"></a>ReentrantReadWriteLock</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wtopps/article/details/106202418\">读写锁之ReentrantReadWriteLock和StampedLock入门</a></li>\n<li><a href=\"https://blog.csdn.net/Longstar_L/article/details/112241559\">读写锁之ReentrantReadWriteLock和StampedLock详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43631716/article/details/121492528\">ReentrantReadWriteLock详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123181145\">ReentrantReadWriteLock原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40276626/article/details/119873114\">StampedLock详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangnanwlw/article/details/109848035\">StampedLock原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38737992/article/details/92796403\">读写锁之锁降级和锁升级入门</a></li>\n<li><a href=\"https://blog.csdn.net/GDUT_Trim/article/details/120796255\">读写锁之锁降级和锁升级详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>ReentrantReadWriteLock：写写互斥，<code>读写互斥</code>，读读不互斥</li>\n<li>StampedLock：写写互斥，<code>读写不互斥</code>，读读不互斥</li>\n</ul>\n<h3 id=\"Atomic\"><a href=\"#Atomic\" class=\"headerlink\" title=\"Atomic\"></a>Atomic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40276626/article/details/119900143\">Atomic详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"CAS\"><a href=\"#CAS\" class=\"headerlink\" title=\"CAS\"></a>CAS</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lwang_IT/article/details/121638089\">CAS入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43232955/article/details/107452893\">CAS进阶</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_41632451/article/details/124754457\">CAS详解</a></li>\n<li><a href=\"https://blog.csdn.net/hl_java/article/details/90520405\">CAS存在的问题以及解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/rekingman/article/details/89464001\">CAS和volatile配合使用保证线程安全</a></li>\n</ul>\n</blockquote>\n<p>CAS的问题</p>\n<ul>\n<li>ABA问题：可以加版本号解决</li>\n<li>竞争激烈时大量的操作失败会浪费cpu资源：需要限制失败次数</li>\n<li>自旋循环时间长的话会占用和浪费cpu资源：需要控制循环次数</li>\n<li>只能保证单个变量操作的原子性：可以合并多个变量的操作为单个操作</li>\n</ul>\n<h4 id=\"OptimisticLock（乐观锁）\"><a href=\"#OptimisticLock（乐观锁）\" class=\"headerlink\" title=\"OptimisticLock（乐观锁）\"></a>OptimisticLock（乐观锁）</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LyySwx/article/details/125634783\">乐观锁详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_32421529/article/details/104992791\">乐观锁的优点和缺点</a></li>\n</ul>\n</blockquote>\n<p>乐观锁的优点和缺点</p>\n<ul>\n<li>优点：避免冲突时等待造成的耗时</li>\n<li>缺点：竞争激烈时大量的操作失败会浪费cpu资源</li>\n</ul>\n<h4 id=\"SpinLock（自旋锁）\"><a href=\"#SpinLock（自旋锁）\" class=\"headerlink\" title=\"SpinLock（自旋锁）\"></a>SpinLock（自旋锁）</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46146718/article/details/120647711\">自旋锁详解</a></li>\n<li><a href=\"https://blog.csdn.net/vincent_wen0766/article/details/108558656\">自旋锁的优点和缺点</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46311811/article/details/122354855\">自旋锁和单核处理器</a></li>\n<li><a href=\"https://blog.csdn.net/fengyuyeguirenenen/article/details/122554553\">CAS和自旋到底是一个概念吗</a></li>\n<li><a href=\"https://blog.csdn.net/wodetongnian/article/details/104044865\">CAS自旋实现样例</a></li>\n</ul>\n</blockquote>\n<p>自旋锁的优点和缺点</p>\n<ul>\n<li>优点：避免上下文切换带来的耗时</li>\n<li>缺点：自旋循环时间长的话会占用和浪费cpu资源</li>\n</ul>\n<h3 id=\"AQS\"><a href=\"#AQS\" class=\"headerlink\" title=\"AQS\"></a>AQS</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/long199366/article/details/112506704\">AQS详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>isHeldExclusively()：该线程是否正在独占资源（只有用到Condition时才需要去实现它）</li>\n<li>tryAcquire(int)：独占方式，成功则返回true，失败则返回false</li>\n<li>tryRelease(int)：独占方式，成功则返回true，失败则返回false</li>\n<li>tryAcquireShared(int)：共享方式，负数表示失败，0表示成功但没有剩余资源，正数表示成功且有剩余资源</li>\n<li>tryReleaseShared(int)：共享方式，如果释放后允许唤醒后续等待结点返回true，否则返回false</li>\n</ul>\n<h3 id=\"LockSupport\"><a href=\"#LockSupport\" class=\"headerlink\" title=\"LockSupport\"></a>LockSupport</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangliangluang/article/details/123033352\">LockSupport详解</a></li>\n</ul>\n</blockquote>\n<p>LockSupport.park可以实现 <code>阻塞</code> 功能但不能实现 <code>互斥</code> 功能</p>\n<h2 id=\"Question-2\"><a href=\"#Question-2\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"synchronized和volatile的区别\"><a href=\"#synchronized和volatile的区别\" class=\"headerlink\" title=\"synchronized和volatile的区别\"></a>synchronized和volatile的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/z123456789XDW/article/details/100031621\">synchronized和volatile的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>synchronized可以修饰类、字段、方法，volatile只能修饰字段</li>\n<li>synchronized保证原子性、可见性、有序性，volatile只保证可见性、有序性</li>\n<li>synchronized会阻塞线程，volatile不会阻塞线程</li>\n</ul>\n<h3 id=\"synchronized和Lock的区别\"><a href=\"#synchronized和Lock的区别\" class=\"headerlink\" title=\"synchronized和Lock的区别\"></a>synchronized和Lock的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/drrzh/article/details/119519455\">synchronized和Lock的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>位置：<ul>\n<li>synchronized是java关键字，Lock是java类</li>\n</ul>\n</li>\n<li>实现：<ul>\n<li>synchronized基于操作系统mutex机制实现，Lock基于java的AQS机制实现</li>\n</ul>\n</li>\n<li>操作：<ul>\n<li>synchronized会自动释放锁，Lock需要手动释放</li>\n</ul>\n</li>\n<li>超时：<ul>\n<li>synchronized不能设置等待超时时间，Lock可以设置等待超时时间</li>\n</ul>\n</li>\n<li>状态：<ul>\n<li>synchronized无法判断是否获取了锁，Lock可以判断是否获取了锁</li>\n</ul>\n</li>\n<li>特性：<ul>\n<li>synchronized支持重入，Lock也支持重入</li>\n<li>synchronized不支持中断，Lock可支持中断（也支持不可中断）</li>\n<li>synchronized不支持公平锁，Lock可支持公平锁（也支持非公平）</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Task\"><a href=\"#Task\" class=\"headerlink\" title=\"Task\"></a>Task</h1><h2 id=\"Basic-4\"><a href=\"#Basic-4\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChenRui_yz/article/details/126926950\">java异步编程入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_73493267/article/details/126611222\">java异步编程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/afreon/article/details/128825831\">java异步编程详解</a></li>\n<li><a href=\"https://blog.csdn.net/a321123b/article/details/123389278\">java并发编程入门</a></li>\n<li><a href=\"https://blog.csdn.net/a321123b/article/details/123482491\">java并发编程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/a321123b/article/details/123482812\">java并发编程详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Future：普通任务的接口，核心实现类为FutureTask</li>\n<li>RunnableFuture：对Runnable进行包装的Future</li>\n<li>FutureTask：Future的实现类</li>\n<li>ScheduledFuture：调度任务的接口，核心实现类为ScheduledFutureTask</li>\n<li>RunnableScheduledFuture：对Runnable进行包装的ScheduledFuture</li>\n<li>ScheduledFutureTask：ScheduledFuture的实现类</li>\n<li>Delayed：延迟任务的接口，继承了Comparable</li>\n<li>ExecutorService：普通任务执行器，核心实现类为ThreadPoolExecutor</li>\n<li>ScheduledExecutorService：调度任务执行器，核心实现类为ScheduledThreadPoolExecutor</li>\n<li>CompletionStage：异步任务调度和计算的接口</li>\n<li>CompletableFuture：异步任务调度和计算的实现类</li>\n</ul>\n<h3 id=\"任务的运行方式\"><a href=\"#任务的运行方式\" class=\"headerlink\" title=\"任务的运行方式\"></a>任务的运行方式</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013288190/article/details/114257211\">任务的运行方式</a></li>\n</ul>\n</blockquote>\n<p><code>任务（Task）</code> 的 <code>控制</code> 方式如下</p>\n<ul>\n<li>顺序：sequential</li>\n<li>并发：concurrent</li>\n</ul>\n<p><code>执行器（Executor）</code> 的 <code>执行</code> 方式如下</p>\n<ul>\n<li>串行：serial</li>\n<li>并行：parallel</li>\n</ul>\n<blockquote>\n<p>ps：顺序和并发描述的是任务能否同时 <code>开始</code> ，串行和并行描述的是任务能否同时 <code>执行</code></p>\n</blockquote>\n<h4 id=\"并发和并行的区别\"><a href=\"#并发和并行的区别\" class=\"headerlink\" title=\"并发和并行的区别\"></a>并发和并行的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kevin_mails/article/details/80251234\">并发和并行的区别</a></li>\n<li><a href=\"https://blog.csdn.net/Cai_deLong/article/details/108302842\">并发和并行图解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>并发（Concurrency）：一个人<code>分时</code>干多件事</li>\n<li>并行（Parallelism）：多个人<code>分工</code>干一件事</li>\n</ul>\n<h4 id=\"集群和分布式的区别\"><a href=\"#集群和分布式的区别\" class=\"headerlink\" title=\"集群和分布式的区别\"></a>集群和分布式的区别</h4><ul>\n<li>集群（Cluster）：多个人<code>轮流</code>干一件事</li>\n<li>分布式（Distributed）：多个人<code>分工</code>干一件事</li>\n</ul>\n<h4 id=\"同步和异步的区别\"><a href=\"#同步和异步的区别\" class=\"headerlink\" title=\"同步和异步的区别\"></a>同步和异步的区别</h4><ul>\n<li>同步（Synchronization）：<code>主动</code>获取结果，不一定<code>阻塞</code>的（轮询获取结果就不是阻塞的）</li>\n<li>异步（Asynchronization）：<code>被动</code>获取结果，一般是<code>非阻塞</code>的</li>\n</ul>\n<h3 id=\"任务的调度方式\"><a href=\"#任务的调度方式\" class=\"headerlink\" title=\"任务的调度方式\"></a>任务的调度方式</h3><h4 id=\"普通调度（normal）\"><a href=\"#普通调度（normal）\" class=\"headerlink\" title=\"普通调度（normal）\"></a>普通调度（normal）</h4><p>可以使用ScheduledThreadPoolExecutor的 <code>schedule</code> 方法实现</p>\n<h4 id=\"延时调度（delay）\"><a href=\"#延时调度（delay）\" class=\"headerlink\" title=\"延时调度（delay）\"></a>延时调度（delay）</h4><p>可以使用ScheduledThreadPoolExecutor的 <code>schedule</code> 方法中的 <code>delay</code> 参数实现</p>\n<h4 id=\"定时调度（timing）\"><a href=\"#定时调度（timing）\" class=\"headerlink\" title=\"定时调度（timing）\"></a>定时调度（timing）</h4><p>可以使用ScheduledThreadPoolExecutor的如下方法实现</p>\n<ul>\n<li><code>scheduleAtFixedRate</code>：固定<code>频率</code>的触发任务的执行</li>\n<li><code>scheduleWithFixedDelay</code>：固定<code>延迟</code>后触发任务的执行</li>\n</ul>\n<h2 id=\"Usage-1\"><a href=\"#Usage-1\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h3 id=\"SyncTask\"><a href=\"#SyncTask\" class=\"headerlink\" title=\"SyncTask\"></a>SyncTask</h3><p>java中没有SyncTask类，对应的类为FutureTask</p>\n<h4 id=\"Future\"><a href=\"#Future\" class=\"headerlink\" title=\"Future\"></a>Future</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014209205/article/details/80598209\">Future详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43145361/article/details/97049103\">RunnableFuture详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"FutureTask\"><a href=\"#FutureTask\" class=\"headerlink\" title=\"FutureTask\"></a>FutureTask</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lp284558195/article/details/115670103\">FutureTask使用入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40685275/article/details/99838677\">FutureTask使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27264789/article/details/100129323\">FutureTask原理详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Basic-5\"><a href=\"#Basic-5\" class=\"headerlink\" title=\"Basic\"></a>Basic</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kking_edc/article/details/108297917\">FutureTask调用之使用Thread运行</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38750084/article/details/84801211\">FutureTask调用之使用线程池运行</a></li>\n</ul>\n</blockquote>\n<h5 id=\"State-1\"><a href=\"#State-1\" class=\"headerlink\" title=\"State\"></a>State</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39654841/article/details/90631795\">FutureTask的状态详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>NEW（已创建）：创建FutureTask之后</li>\n<li>COMPLETING（完成中）：设置结果开始时，是一个中间过渡态</li>\n<li>NORMAL（已正常完成）：设置结果（正常完成）结束后</li>\n<li>EXCEPTIONAL（已异常完成）：设置结果（异常完成）结束后</li>\n<li>CANCELLED（已取消）：取消任务后</li>\n<li>INTERRUPTING（中断中）：中断开始时，是一个中间过渡态</li>\n<li>INTERRUPTED（已断中）：中断结束后</li>\n</ul>\n<h5 id=\"Exception\"><a href=\"#Exception\" class=\"headerlink\" title=\"Exception\"></a>Exception</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zn0999/article/details/109034085\">FutureTask.get异常捕获详解</a></li>\n</ul>\n</blockquote>\n<p>FutureTask.get异常如下</p>\n<ul>\n<li>CancellationException：任务提交后<code>取消</code>抛出的异常</li>\n<li>InterruptedException：任务执行时<code>中断</code>抛出的异常</li>\n<li>ExecutionException：任务执行时<code>出错</code>抛出的异常</li>\n<li>TimeoutException：任务执行时<code>超时</code>抛出的异常</li>\n</ul>\n<blockquote>\n<p>ps：cancel时如果任务还在执行中，就会抛出CancellationException（RuntimeException），否则就可能抛出InterruptedException</p>\n</blockquote>\n<h5 id=\"Cancel\"><a href=\"#Cancel\" class=\"headerlink\" title=\"Cancel\"></a>Cancel</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014644574/article/details/114327939\">FutureTask.cancel取消任务详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：cancel时如果任务已经执行，会调用 <code>Thread.interrupt</code> 对 <code>当前</code> 线程进行中断</p>\n</blockquote>\n<h5 id=\"Timeout\"><a href=\"#Timeout\" class=\"headerlink\" title=\"Timeout\"></a>Timeout</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cuiwjava/article/details/108186030\">FutureTask.get超时原理</a></li>\n<li><a href=\"https://blog.csdn.net/cenjianteng/article/details/91873019\">FutureTask之实现超时任务</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：get的阻塞效果是通过LockSupport.park或者LockSupport.parkNanos实现的</p>\n</blockquote>\n<h3 id=\"AsyncTask\"><a href=\"#AsyncTask\" class=\"headerlink\" title=\"AsyncTask\"></a>AsyncTask</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChenRui_yz/article/details/126926950\">java异步编程</a></li>\n<li><a href=\"https://blog.csdn.net/qq_62789540/article/details/123223427\">python异步编程</a></li>\n<li><a href=\"https://blog.csdn.net/howgod/article/details/93978297\">javascript异步编程</a></li>\n</ul>\n</blockquote>\n<p>java中没有AsyncTask类，对应的类为CompletableFuture</p>\n<h4 id=\"CompletionStage\"><a href=\"#CompletionStage\" class=\"headerlink\" title=\"CompletionStage\"></a>CompletionStage</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42695485/article/details/110407485\">CompletionStage详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"CompletableFuture\"><a href=\"#CompletableFuture\" class=\"headerlink\" title=\"CompletableFuture\"></a>CompletableFuture</h4><h5 id=\"Basic-6\"><a href=\"#Basic-6\" class=\"headerlink\" title=\"Basic\"></a>Basic</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/duke_ding2/article/details/107562881\">CompletableFuture使用入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43631716/article/details/121766969\">CompletableFuture使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44337445/article/details/121710515\">CompletableFuture方法总结</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39332800/article/details/108185931\">CompletableFuture原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/q258523454/article/details/117967874\">CompletableFuture非async方法和async方法的区别</a></li>\n<li><a href=\"https://blog.csdn.net/leon_wzm/article/details/80560081\">CompletableFuture非async方法的执行线程</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43722048/article/details/121942164\">CompletableFuture.allOf获取所有结果</a></li>\n<li><a href=\"https://blog.csdn.net/u014526725/article/details/96474500\">java9 CompletableFuture改进</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>包含async方法和非async方法</li>\n<li>包含async的有两种方法，一种使用默认的forkjoin线程池，一种是使用自定义线程池</li>\n<li>包含apply的都使用Function回调，有输入，有返回值</li>\n<li>包含accept的都使用Consumer回调，有输入，没有返回</li>\n<li>包含supply的都使用Supplier回调，没有输入，有返回</li>\n<li>包含run的都使用Runnable回调，没有输入，没有返回</li>\n</ul>\n<h6 id=\"创建任务（createTask）\"><a href=\"#创建任务（createTask）\" class=\"headerlink\" title=\"创建任务（createTask）\"></a>创建任务（createTask）</h6><p>####### supplyAsync</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">supplyAsync</span><span class=\"params\">(Supplier&lt;U&gt; supplier)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### runAsync</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">runAsync</span><span class=\"params\">(Runnable runnable)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### completedFuture</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">completedFuture</span><span class=\"params\">(U value)</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"处理结果（handleResult）\"><a href=\"#处理结果（handleResult）\" class=\"headerlink\" title=\"处理结果（handleResult）\"></a>处理结果（handleResult）</h6><blockquote>\n<p>result &#x3D; value or error</p>\n</blockquote>\n<p>####### thenApply（thenApplyValue）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">thenApply</span><span class=\"params\">(Function&lt;? <span class=\"built_in\">super</span> T,? extends U&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### thenAccept（thenAcceptValue）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">thenAccept</span><span class=\"params\">(Consumer&lt;? <span class=\"built_in\">super</span> T&gt; action)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### thenRun（thenRun）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">thenRun</span><span class=\"params\">(Runnable action)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### exceptionally（thenApplyError）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;T&gt; <span class=\"title function_\">exceptionally</span><span class=\"params\">(Function&lt;Throwable,? extends T&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### handle（thenApplyResult）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">handle</span><span class=\"params\">(BiFunction&lt;? <span class=\"built_in\">super</span> T,Throwable,? extends U&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### whenComplete（thenAcceptResult）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;T&gt; <span class=\"title function_\">whenComplete</span><span class=\"params\">(BiConsumer&lt;? <span class=\"built_in\">super</span> T,? <span class=\"built_in\">super</span> Throwable&gt; action)</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li>thenRun不关心值，也不关心异常（??? 会吃掉异常，支持从异常中恢复并继续后面的操作）</li>\n<li>thenApply和thenAccept只关心值，不关心异常（??? 会吃掉异常，支持从异常中恢复并继续后面的操作）</li>\n<li>exceptionally不关心值，只关心异常（会吃掉异常，支持从异常中恢复并继续后面的操作）</li>\n<li>handle既关心值，也关心异常（会吃掉异常，支持从异常中恢复并继续后面的操作）</li>\n<li>whenComplete既关心值，也关心异常（不会吃掉异常，不支持从异常中恢复并中断后面的操作）</li>\n</ul>\n</blockquote>\n<h6 id=\"设置结果（setResult）\"><a href=\"#设置结果（setResult）\" class=\"headerlink\" title=\"设置结果（setResult）\"></a>设置结果（setResult）</h6><p>####### 设置结果（setValue）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">complete</span><span class=\"params\">(T value)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">obtrudeValue</span><span class=\"params\">(T value)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### 设置结果（setError）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">completeExceptionally</span><span class=\"params\">(Throwable ex)</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">obtrudeException</span><span class=\"params\">(Throwable ex)</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"获取结果（getResult）\"><a href=\"#获取结果（getResult）\" class=\"headerlink\" title=\"获取结果（getResult）\"></a>获取结果（getResult）</h6><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> T <span class=\"title function_\">get</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> InterruptedException, ExecutionException</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> T <span class=\"title function_\">join</span><span class=\"params\">()</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> T <span class=\"title function_\">getNow</span><span class=\"params\">(T valueIfAbsent)</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"检查状态（checkState）\"><a href=\"#检查状态（checkState）\" class=\"headerlink\" title=\"检查状态（checkState）\"></a>检查状态（checkState）</h6><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isDone</span><span class=\"params\">()</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isCompletedExceptionally</span><span class=\"params\">()</span></span><br></pre></td></tr></table></figure>\n\n<h6 id=\"编排任务（Choreography）\"><a href=\"#编排任务（Choreography）\" class=\"headerlink\" title=\"编排任务（Choreography）\"></a>编排任务（Choreography）</h6><p>####### 链式调用（chain）</p>\n<p>######## thenCompose（thenChain）</p>\n<p>将当前异步任务的结果交给另一个异步任务处理，并返回另一个异步任务，即串联执行两个任务</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">thenCompose</span><span class=\"params\">(Function&lt;? <span class=\"built_in\">super</span> T,? extends CompletionStage&lt;U&gt;&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>####### 组合调用（group）</p>\n<p>组合处理两个或多个任务</p>\n<p>######## 组合调用（and）</p>\n<p>解决任务之间的 <code>与</code> 编排（choreography）关系，等待两个任务同时完成，并处理两个任务的结果</p>\n<p>######### thenCombine（thenApplyBoth）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U,V&gt; CompletableFuture&lt;V&gt; <span class=\"title function_\">thenCombine</span><span class=\"params\">(CompletionStage&lt;? extends U&gt; other, BiFunction&lt;? <span class=\"built_in\">super</span> T,? <span class=\"built_in\">super</span> U,? extends V&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>######### thenAcceptBoth（thenAcceptBoth）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U&gt; CompletableFuture&lt;Void&gt; <span class=\"title function_\">thenAcceptBoth</span><span class=\"params\">(CompletionStage&lt;? extends U&gt; other, BiConsumer&lt;? <span class=\"built_in\">super</span> T,? <span class=\"built_in\">super</span> U&gt; action)</span></span><br></pre></td></tr></table></figure>\n\n<p>######### runAfterBoth（thenRunBoth）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">runAfterBoth</span><span class=\"params\">(CompletionStage&lt;?&gt; other, Runnable action)</span></span><br></pre></td></tr></table></figure>\n\n<p>######## 组合调用（or）</p>\n<p>解决任务之间的 <code>或</code> 编排（choreography）关系，等待任意一个任务完成，并处理快的任务的结果</p>\n<p>######### applyToEither（thenApplyEither）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> &lt;U&gt; CompletableFuture&lt;U&gt; <span class=\"title function_\">applyToEither</span><span class=\"params\">(CompletionStage&lt;? extends T&gt; other, Function&lt;? <span class=\"built_in\">super</span> T,U&gt; fn)</span></span><br></pre></td></tr></table></figure>\n\n<p>######### acceptEither（thenAcceptEither）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">acceptEither</span><span class=\"params\">(CompletionStage&lt;? extends T&gt; other, Consumer&lt;? <span class=\"built_in\">super</span> T&gt; action)</span></span><br></pre></td></tr></table></figure>\n\n<p>######### runAfterEither（thenRunEither）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">runAfterEither</span><span class=\"params\">(CompletionStage&lt;?&gt; other, Runnable action)</span></span><br></pre></td></tr></table></figure>\n\n<p>######## 组合调用（all）</p>\n<p>解决任务之间的 <code>与</code> 编排（choreography）关系，等待所有任务同时完成，并忽略所有任务的结果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> CompletableFuture&lt;Void&gt; <span class=\"title function_\">allOf</span><span class=\"params\">(CompletableFuture&lt;?&gt;... cfs)</span></span><br></pre></td></tr></table></figure>\n\n<p>######## 组合调用（any）</p>\n<p>解决任务之间的 <code>或</code> 编排（choreography）关系，等待任意一个任务完成，并返回快的任务的结果</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> CompletableFuture&lt;Object&gt; <span class=\"title function_\">anyOf</span><span class=\"params\">(CompletableFuture&lt;?&gt;... cfs)</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"State-2\"><a href=\"#State-2\" class=\"headerlink\" title=\"State\"></a>State</h5><h5 id=\"Exception-1\"><a href=\"#Exception-1\" class=\"headerlink\" title=\"Exception\"></a>Exception</h5><blockquote>\n<ul>\n<li><a href=\"https://mincong.io/2020/05/30/exception-handling-in-completable-future/\">CompletableFuture异常处理详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Cancel-1\"><a href=\"#Cancel-1\" class=\"headerlink\" title=\"Cancel\"></a>Cancel</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/listeningsea/article/details/123168224\">CompletableFuture.cancel取消任务详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Timeout-1\"><a href=\"#Timeout-1\" class=\"headerlink\" title=\"Timeout\"></a>Timeout</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013905744/article/details/109134516\">CompletableFuture之实现超时任务</a></li>\n</ul>\n</blockquote>\n<h4 id=\"More\"><a href=\"#More\" class=\"headerlink\" title=\"More\"></a>More</h4><h5 id=\"AsyncTask（python）\"><a href=\"#AsyncTask（python）\" class=\"headerlink\" title=\"AsyncTask（python）\"></a>AsyncTask（python）</h5><h6 id=\"async和await（python）\"><a href=\"#async和await（python）\" class=\"headerlink\" title=\"async和await（python）\"></a>async和await（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43380180/article/details/111573642\">python async和await详解</a></li>\n<li><a href=\"https://blog.csdn.net/permike/article/details/110821246\">python async和await原理</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51078229/article/details/112343124\">python await必须在async函数中使用</a></li>\n</ul>\n</blockquote>\n<h6 id=\"coroutine（python）\"><a href=\"#coroutine（python）\" class=\"headerlink\" title=\"coroutine（python）\"></a>coroutine（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yifengchaoran/article/details/113854853\">python 迭代器和生成器详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_36338224/article/details/109231279\">python 生成器和协程详解</a></li>\n<li><a href=\"https://blog.csdn.net/Smile_Mr/article/details/86624376\">python 协程详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27825451/article/details/85226239\">python 协程之yield详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27825451/article/details/85234610\">python 协程之yield实现</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27825451/article/details/85244237\">python 协程之yield from详解</a></li>\n<li><a href=\"https://blog.csdn.net/JENREY/article/details/121231495\">python yield详解</a></li>\n<li><a href=\"https://blog.csdn.net/jpch89/article/details/87776528\">python yield from详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43192617/article/details/117791470\">python yield和yield from的区别</a></li>\n</ul>\n</blockquote>\n<h6 id=\"asyncio（python）\"><a href=\"#asyncio（python）\" class=\"headerlink\" title=\"asyncio（python）\"></a>asyncio（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xixihahalelehehe/article/details/106398084\">python asyncio详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"aiohttp（python）\"><a href=\"#aiohttp（python）\" class=\"headerlink\" title=\"aiohttp（python）\"></a>aiohttp（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhb_feng/article/details/118081327\">python aiohttp详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"Tornado（python）\"><a href=\"#Tornado（python）\" class=\"headerlink\" title=\"Tornado（python）\"></a>Tornado（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44634704/article/details/115917628\">python tornado异步使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013421629/article/details/101293065\">python tornado异步原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/runner668/article/details/82930988\">python tornado异步原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/jazywoo123/article/details/17566357\">python tornado异步和协程</a></li>\n<li><a href=\"https://blog.csdn.net/lyc2016012170/article/details/127219152\">python tornado异步库</a></li>\n</ul>\n</blockquote>\n<h6 id=\"Celery（python）\"><a href=\"#Celery（python）\" class=\"headerlink\" title=\"Celery（python）\"></a>Celery（python）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/aaahtml/article/details/115131246\">Celery详解</a></li>\n<li><a href=\"https://celeryproject.readthedocs.io/zh_CN/latest/userguide/canvas.html\">Celery工作流详解</a></li>\n<li><a href=\"https://celery-docs-cn.readthedocs.io/zh/latest/getting-started/first-steps-with-celery.html\">Celery结果存储和通信代理详解</a></li>\n</ul>\n</blockquote>\n<p>celery backend：结果存储<br>celery broker：通信代理</p>\n<h5 id=\"AsyncTask（javascript）\"><a href=\"#AsyncTask（javascript）\" class=\"headerlink\" title=\"AsyncTask（javascript）\"></a>AsyncTask（javascript）</h5><h6 id=\"async和await（javascript）\"><a href=\"#async和await（javascript）\" class=\"headerlink\" title=\"async和await（javascript）\"></a>async和await（javascript）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/MrWangJB/article/details/107881183\">javascript async和await详解</a></li>\n<li><a href=\"https://blog.csdn.net/codebay118/article/details/72596951\">javascript async和await解决地狱回调</a></li>\n<li><a href=\"https://blog.csdn.net/lgno2/article/details/109446348\">javascript await必须在async函数中使用</a></li>\n</ul>\n</blockquote>\n<h6 id=\"Promise（javascript）\"><a href=\"#Promise（javascript）\" class=\"headerlink\" title=\"Promise（javascript）\"></a>Promise（javascript）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yes1983/article/details/83629647\">javascript Promise入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53993283/article/details/119945800\">javascript Promise详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21980517/article/details/103908747\">javascript Promise链式调用</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42681555/article/details/121974050\">javascript Promise中then使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44776206/article/details/109402410\">javascript Promise中catch使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38211541/article/details/106261991\">javascript Promise中finally使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32644987/article/details/117842230\">javascript Promise手写实现</a></li>\n<li><a href=\"https://blog.csdn.net/sunshinessx/article/details/88666179\">javascript Promise和Rxjs对比</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39341415/article/details/121716810\">javascript Promise和axios</a></li>\n<li><a href=\"https://blog.csdn.net/lingliu0824/article/details/108547842\">javascript axios请求的数据格式</a></li>\n<li><a href=\"https://blog.csdn.net/github_39319000/article/details/89472033\">javascript箭头函数的返回值</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ScheduleTask\"><a href=\"#ScheduleTask\" class=\"headerlink\" title=\"ScheduleTask\"></a>ScheduleTask</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lijianqingfeng/article/details/112465288\">Timer与ExecutorService对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37113604/article/details/89429986\">Timer与ExecutorService对比详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ScheduledFuture\"><a href=\"#ScheduledFuture\" class=\"headerlink\" title=\"ScheduledFuture\"></a>ScheduledFuture</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013851082/article/details/70175394\">ScheduledFuture详解</a></li>\n<li><a href=\"https://blog.csdn.net/a355586533/article/details/78455788\">RunnableScheduledFuture详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ScheduledFutureTask\"><a href=\"#ScheduledFutureTask\" class=\"headerlink\" title=\"ScheduledFutureTask\"></a>ScheduledFutureTask</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_50518271/article/details/119087739\">ScheduledFutureTask详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-3\"><a href=\"#Question-3\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"FutureTask为什么支持传递给线程\"><a href=\"#FutureTask为什么支持传递给线程\" class=\"headerlink\" title=\"FutureTask为什么支持传递给线程\"></a>FutureTask为什么支持传递给线程</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33591903/article/details/108422098\">FutureTask为什么支持传递给线程</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Executor\"><a href=\"#Executor\" class=\"headerlink\" title=\"Executor\"></a>Executor</h1><h2 id=\"Basic-7\"><a href=\"#Basic-7\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tongdanping/article/details/79604637\">Executor框架入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40093255/article/details/116990431\">Executor框架详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"线程池的创建方式\"><a href=\"#线程池的创建方式\" class=\"headerlink\" title=\"线程池的创建方式\"></a>线程池的创建方式</h3><ul>\n<li>使用Executors快速创建</li>\n<li>使用ExecutorService手动创建</li>\n</ul>\n<h3 id=\"线程池的核心参数\"><a href=\"#线程池的核心参数\" class=\"headerlink\" title=\"线程池的核心参数\"></a>线程池的核心参数</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/104704197\">线程池的核心参数</a></li>\n</ul>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">public ThreadPoolExecutor(int corePoolSize,</span><br><span class=\"line\">                          int maximumPoolSize,</span><br><span class=\"line\">                          long keepAliveTime,</span><br><span class=\"line\">                          TimeUnit unit,</span><br><span class=\"line\">                          BlockingQueue&lt;Runnable&gt; workQueue,</span><br><span class=\"line\">                          ThreadFactory threadFactory,</span><br><span class=\"line\">                          RejectedExecutionHandler handler) &#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>corePoolSize：核心线程数</li>\n<li>maximumPoolSize：最大线程数</li>\n<li>keepAliveTime：线程保活时间大小</li>\n<li>unit：线程保活时间单位</li>\n<li>workQueue：工作队列</li>\n<li>threadFactory：线程工厂</li>\n<li>handler：任务饱和策略处理器</li>\n</ul>\n<h3 id=\"线程池的提交策略\"><a href=\"#线程池的提交策略\" class=\"headerlink\" title=\"线程池的提交策略\"></a>线程池的提交策略</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chzphoenix/article/details/78968075\">线程池的提交策略</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>poolSize &lt; corePoolSize</code>时增加线程</li>\n<li><code>poolSize = corePoolSize</code>时放入队列</li>\n<li>队列满了之后再增加线程</li>\n<li>线程达到<code>maximumPoolSize</code>后执行RejectedExecutionHandler</li>\n<li>根据RejectedExecutionHandler指定的拒绝策略来处理新的任务</li>\n</ul>\n<h3 id=\"线程池的饱和策略\"><a href=\"#线程池的饱和策略\" class=\"headerlink\" title=\"线程池的饱和策略\"></a>线程池的饱和策略</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jgteng/article/details/54411423\">线程池的饱和策略</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>AbortPolicy：丢弃任务并且抛出RejectedExecutionException异常（默认策略）</li>\n<li>DiscardPolicy：丢弃任务但不抛出异常</li>\n<li>DiscardOldestPolicy：丢弃最老的（队列头部）任务</li>\n<li>CallerRunsPolicy：在提交的线程中直接执行任务</li>\n</ul>\n<h3 id=\"线程池的提交方式\"><a href=\"#线程池的提交方式\" class=\"headerlink\" title=\"线程池的提交方式\"></a>线程池的提交方式</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whiteBearClimb/article/details/113249833\">线程池的提交方式</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>使用submit方法提交（普通任务有返回值时使用）</li>\n<li>使用execute方法提交（普通任务无返回值时使用）</li>\n<li>使用schedule方法提交（延时任务和定时任务时使用）</li>\n</ul>\n<h4 id=\"submit和execute的区别\"><a href=\"#submit和execute的区别\" class=\"headerlink\" title=\"submit和execute的区别\"></a>submit和execute的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qing040513/article/details/111667627\">submit和execute的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43901882/article/details/106017061\">submit和execute的异常处理区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>execute只支持Runnable，submit可以支持Runnable和Callable</li>\n<li>execute没有返回值，submit有返回值</li>\n<li>execute有异常会直接打印，submit在Future.get的时候才会打印异常</li>\n</ul>\n<h3 id=\"线程池的异常捕获\"><a href=\"#线程池的异常捕获\" class=\"headerlink\" title=\"线程池的异常捕获\"></a>线程池的异常捕获</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/121093876\">线程异常之全局捕获</a></li>\n<li><a href=\"https://blog.csdn.net/silyvin/article/details/80025165\">线程池之异常捕获</a></li>\n</ul>\n</blockquote>\n<h3 id=\"线程池的关闭方式\"><a href=\"#线程池的关闭方式\" class=\"headerlink\" title=\"线程池的关闭方式\"></a>线程池的关闭方式</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zlp1992/article/details/104197515\">线程池的关闭方式</a></li>\n<li><a href=\"https://blog.csdn.net/LiZhen314/article/details/119948776\">线程池需要关闭吗</a></li>\n<li><a href=\"https://blog.csdn.net/Hellowenpan/article/details/119960517\">JVM安全退出之关闭的时候到底会不会等待线程池线程任务执行完毕</a></li>\n<li><a href=\"https://blog.csdn.net/Dongguabai/article/details/106309527\">JVM安全退出之如何优雅的关闭java服务</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44902907/article/details/105055041\">JVM安全退出之如何优雅的释放连接</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36689178/article/details/104705606\">JVM安全退出之如何优雅的释放资源</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>shutdown：线程池的状态变为SHUTDOWN，不再接受新任务了，但是队列里的任务会执行完毕</li>\n<li>shutdownNow：线程池的状态变为STOP，会终止当前正在运行的任务，并停止处理排队的任务，返回等待执行的任务列表</li>\n</ul>\n<h4 id=\"shutdown和shutdownNow的区别\"><a href=\"#shutdown和shutdownNow的区别\" class=\"headerlink\" title=\"shutdown和shutdownNow的区别\"></a>shutdown和shutdownNow的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiaojin21cen/article/details/81778651\">shutdown和shutdownNow的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Usage-2\"><a href=\"#Usage-2\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><h3 id=\"Executors\"><a href=\"#Executors\" class=\"headerlink\" title=\"Executors\"></a>Executors</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u022812849/article/details/109097171\">Executors入门</a></li>\n<li><a href=\"https://blog.csdn.net/Think_and_work/article/details/123667645\">Executors详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31439011/article/details/100824461\">Executors方法选择</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40096897/article/details/121660747\">Executors方法区别</a></li>\n<li><a href=\"https://blog.csdn.net/asd136912/article/details/87908629\">Executors问题说明</a></li>\n</ul>\n</blockquote>\n<h4 id=\"快速创建线程池的方法\"><a href=\"#快速创建线程池的方法\" class=\"headerlink\" title=\"快速创建线程池的方法\"></a>快速创建线程池的方法</h4><p>快速创建线程池的本质是ThreadPoolExecutor和ScheduledThreadPoolExecutor的快速构造</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ThreadPoolExecutor</span><span class=\"params\">(<span class=\"type\">int</span> corePoolSize,</span></span><br><span class=\"line\"><span class=\"params\">                          <span class=\"type\">int</span> maximumPoolSize,</span></span><br><span class=\"line\"><span class=\"params\">                          <span class=\"type\">long</span> keepAliveTime,</span></span><br><span class=\"line\"><span class=\"params\">                          TimeUnit unit,</span></span><br><span class=\"line\"><span class=\"params\">                          BlockingQueue&lt;Runnable&gt; workQueue,</span></span><br><span class=\"line\"><span class=\"params\">                          ThreadFactory threadFactory,</span></span><br><span class=\"line\"><span class=\"params\">                          RejectedExecutionHandler handler)</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"Executors-newSingleThreadExecutor\"><a href=\"#Executors-newSingleThreadExecutor\" class=\"headerlink\" title=\"Executors.newSingleThreadExecutor\"></a>Executors.newSingleThreadExecutor</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ExecutorService <span class=\"title function_\">newSingleThreadExecutor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FinalizableDelegatedExecutorService</span></span><br><span class=\"line\">        (<span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">1</span>, <span class=\"number\">1</span>,</span><br><span class=\"line\">                                <span class=\"number\">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class=\"line\">                                <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedBlockingQueue</span>&lt;Runnable&gt;()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>线程数固定（一个），队列容量无限大，适合需要串行执行的任务</p>\n<h5 id=\"Executors-newFixedThreadPool\"><a href=\"#Executors-newFixedThreadPool\" class=\"headerlink\" title=\"Executors.newFixedThreadPool\"></a>Executors.newFixedThreadPool</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ExecutorService <span class=\"title function_\">newFixedThreadPool</span><span class=\"params\">(<span class=\"type\">int</span> nThreads)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(nThreads, nThreads,</span><br><span class=\"line\">                                  <span class=\"number\">0L</span>, TimeUnit.MILLISECONDS,</span><br><span class=\"line\">                                  <span class=\"keyword\">new</span> <span class=\"title class_\">LinkedBlockingQueue</span>&lt;Runnable&gt;());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>线程数固定（多个），队列容量无限大，线程数量固定且不回收线程，任务需要排队，适合耗时长的少量任务</p>\n<h5 id=\"Executors-newCachedThreadPool\"><a href=\"#Executors-newCachedThreadPool\" class=\"headerlink\" title=\"Executors.newCachedThreadPool\"></a>Executors.newCachedThreadPool</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ExecutorService <span class=\"title function_\">newCachedThreadPool</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ThreadPoolExecutor</span>(<span class=\"number\">0</span>, Integer.MAX_VALUE,</span><br><span class=\"line\">                                  <span class=\"number\">60L</span>, TimeUnit.SECONDS,</span><br><span class=\"line\">                                  <span class=\"keyword\">new</span> <span class=\"title class_\">SynchronousQueue</span>&lt;Runnable&gt;());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>线程数无限大，队列容量固定（0个），线程数量充足且有保活时间，任务不用排队，适合耗时短的大量任务</p>\n<h5 id=\"Executors-newScheduledThreadPool\"><a href=\"#Executors-newScheduledThreadPool\" class=\"headerlink\" title=\"Executors.newScheduledThreadPool\"></a>Executors.newScheduledThreadPool</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ScheduledExecutorService <span class=\"title function_\">newScheduledThreadPool</span><span class=\"params\">(<span class=\"type\">int</span> corePoolSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ScheduledThreadPoolExecutor</span>(corePoolSize);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ScheduledThreadPoolExecutor</span><span class=\"params\">(<span class=\"type\">int</span> corePoolSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(corePoolSize, Integer.MAX_VALUE, <span class=\"number\">0</span>, NANOSECONDS,</span><br><span class=\"line\">          <span class=\"keyword\">new</span> <span class=\"title class_\">DelayedWorkQueue</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>线程数无限大，队列容量无限大，支持延时和定时任务</p>\n<h5 id=\"Executors-newSingleThreadScheduledExecutor\"><a href=\"#Executors-newSingleThreadScheduledExecutor\" class=\"headerlink\" title=\"Executors.newSingleThreadScheduledExecutor\"></a>Executors.newSingleThreadScheduledExecutor</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ScheduledExecutorService <span class=\"title function_\">newSingleThreadScheduledExecutor</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DelegatedScheduledExecutorService</span></span><br><span class=\"line\">        (<span class=\"keyword\">new</span> <span class=\"title class_\">ScheduledThreadPoolExecutor</span>(<span class=\"number\">1</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"title function_\">ScheduledThreadPoolExecutor</span><span class=\"params\">(<span class=\"type\">int</span> corePoolSize)</span> &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(corePoolSize, Integer.MAX_VALUE, <span class=\"number\">0</span>, NANOSECONDS,</span><br><span class=\"line\">          <span class=\"keyword\">new</span> <span class=\"title class_\">DelayedWorkQueue</span>());</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>线程数无限大，队列容量无限大，支持延时和定时任务</p>\n<h5 id=\"Executors-newWorkStealingPool\"><a href=\"#Executors-newWorkStealingPool\" class=\"headerlink\" title=\"Executors.newWorkStealingPool\"></a>Executors.newWorkStealingPool</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> ExecutorService <span class=\"title function_\">newWorkStealingPool</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ForkJoinPool</span></span><br><span class=\"line\">            (Runtime.getRuntime().availableProcessors(),</span><br><span class=\"line\">             ForkJoinPool.defaultForkJoinWorkerThreadFactory,</span><br><span class=\"line\">             <span class=\"literal\">null</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">public ForkJoinPool(int parallelism,</span><br><span class=\"line\">                        ForkJoinWorkerThreadFactory factory,</span><br><span class=\"line\">                        UncaughtExceptionHandler handler,</span><br><span class=\"line\">                        boolean asyncMode) &#123;</span><br><span class=\"line\">        this(checkParallelism(parallelism),</span><br><span class=\"line\">             checkFactory(factory),</span><br><span class=\"line\">             handler,</span><br><span class=\"line\">             asyncMode ? FIFO_QUEUE : LIFO_QUEUE,</span><br><span class=\"line\">             &quot;ForkJoinPool-&quot; + nextPoolId() + &quot;-worker-&quot;);</span><br><span class=\"line\">        checkPermission();</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"title function_\">ForkJoinPool</span><span class=\"params\">(<span class=\"type\">int</span> parallelism,</span></span><br><span class=\"line\"><span class=\"params\">                         ForkJoinWorkerThreadFactory factory,</span></span><br><span class=\"line\"><span class=\"params\">                         UncaughtExceptionHandler handler,</span></span><br><span class=\"line\"><span class=\"params\">                         <span class=\"type\">int</span> mode,</span></span><br><span class=\"line\"><span class=\"params\">                         String workerNamePrefix)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.workerNamePrefix = workerNamePrefix;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.factory = factory;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ueh = handler;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.config = (parallelism &amp; SMASK) | mode;</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">np</span> <span class=\"operator\">=</span> (<span class=\"type\">long</span>)(-parallelism); <span class=\"comment\">// offset ctl counts</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.ctl = ((np &lt;&lt; AC_SHIFT) &amp; AC_MASK) | ((np &lt;&lt; TC_SHIFT) &amp; TC_MASK);</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"快速创建线程池的问题\"><a href=\"#快速创建线程池的问题\" class=\"headerlink\" title=\"快速创建线程池的问题\"></a>快速创建线程池的问题</h4><ul>\n<li>Executors.newSingleThreadExecutor：队列容量无限大，容易导致内存耗尽引发OOM</li>\n<li>Executors.newFixedThreadPool：队列容量无限大，容易导致内存耗尽引发OOM</li>\n<li>Executors.newCachedThreadPool：线程数量无限大，容易导致内存耗尽引发OOM</li>\n<li>Executors.newScheduledThreadPool：线程数量无限大，容易导致内存耗尽引发OOM</li>\n</ul>\n<h3 id=\"ExecutorService\"><a href=\"#ExecutorService\" class=\"headerlink\" title=\"ExecutorService\"></a>ExecutorService</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/suifeng3051/article/details/49443835\">ExecutorService详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ThreadPoolExecutor\"><a href=\"#ThreadPoolExecutor\" class=\"headerlink\" title=\"ThreadPoolExecutor\"></a>ThreadPoolExecutor</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xu_yong_lin/article/details/117521773\">ThreadPoolExecutor详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"State-3\"><a href=\"#State-3\" class=\"headerlink\" title=\"State\"></a>State</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/AlbenXie/article/details/84702331\">ThreadPoolExecutor的状态详解</a></li>\n</ul>\n</blockquote>\n<p>RUNNING、SHUTDOWN、STOP、TIDYING、TERMINATED</p>\n<ul>\n<li>RUNNING（运行）：创建线程池后的初始状态</li>\n<li>SHUTDOWN（关闭）：执行shutdown()后，不接收新任务，但会处理已排队的任务和当前任务</li>\n<li>STOP（停止）：执行shutdownNow()后，不接收新任务，不处理已排队的任务并中断当前任务</li>\n<li>TIDYING（清扫）：线程池中的任务队列为空后</li>\n<li>TERMINATED（终结）：执行terminated()后</li>\n</ul>\n<h3 id=\"ScheduledExecutorService\"><a href=\"#ScheduledExecutorService\" class=\"headerlink\" title=\"ScheduledExecutorService\"></a>ScheduledExecutorService</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_22076345/article/details/115404421\">ScheduledExecutorService详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ScheduledThreadPoolExecutor\"><a href=\"#ScheduledThreadPoolExecutor\" class=\"headerlink\" title=\"ScheduledThreadPoolExecutor\"></a>ScheduledThreadPoolExecutor</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/huangzhilin2015/article/details/116246043\">ScheduledThreadPoolExecutor详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"CompletionService\"><a href=\"#CompletionService\" class=\"headerlink\" title=\"CompletionService\"></a>CompletionService</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuyu973971883/article/details/108055564\">CompletionService详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ExecutorCompletionService\"><a href=\"#ExecutorCompletionService\" class=\"headerlink\" title=\"ExecutorCompletionService\"></a>ExecutorCompletionService</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/129720991\">ExecutorCompletionService详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ForkJoinPool\"><a href=\"#ForkJoinPool\" class=\"headerlink\" title=\"ForkJoinPool\"></a>ForkJoinPool</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41432730/article/details/121308729\">ForkJoinPool详解</a></li>\n<li><a href=\"https://blog.csdn.net/Bof_jangle/article/details/108297499\">ForkJoinPool异常处理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-4\"><a href=\"#Question-4\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"线程池是如何保证核心线程不被销毁的\"><a href=\"#线程池是如何保证核心线程不被销毁的\" class=\"headerlink\" title=\"线程池是如何保证核心线程不被销毁的\"></a>线程池是如何保证核心线程不被销毁的</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/smile_from_2015/article/details/105259789\">线程池是如何保证核心线程不被销毁的</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Cooperation\"><a href=\"#Cooperation\" class=\"headerlink\" title=\"Cooperation\"></a>Cooperation</h1><h2 id=\"Communication\"><a href=\"#Communication\" class=\"headerlink\" title=\"Communication\"></a>Communication</h2><p>线程间通信（Communication）是线程间协作（Cooperation）的基础</p>\n<h3 id=\"线程通信机制详解\"><a href=\"#线程通信机制详解\" class=\"headerlink\" title=\"线程通信机制详解\"></a>线程通信机制详解</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xianyu_x/article/details/127419036\">线程通信机制详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Object：wait和notify、notifyAll</li>\n<li>Condition：await和signal、signalAll</li>\n<li>LockSupport：park和unpark</li>\n</ul>\n<blockquote>\n<p>ps：Thread.join是在Thread对象上手动wait和自动notify的线程通信快捷方式</p>\n</blockquote>\n<h4 id=\"Object的wait和notify\"><a href=\"#Object的wait和notify\" class=\"headerlink\" title=\"Object的wait和notify\"></a>Object的wait和notify</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lizhengze1117/article/details/106342359\">Object的wait和notify详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Condition的await和signal\"><a href=\"#Condition的await和signal\" class=\"headerlink\" title=\"Condition的await和signal\"></a>Condition的await和signal</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38293564/article/details/80554516\">Condition的await和signal详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"LockSupport的park和unpark\"><a href=\"#LockSupport的park和unpark\" class=\"headerlink\" title=\"LockSupport的park和unpark\"></a>LockSupport的park和unpark</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_63566550/article/details/125712631\">LockSupport的park和unpark详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"线程通信机制比较\"><a href=\"#线程通信机制比较\" class=\"headerlink\" title=\"线程通信机制比较\"></a>线程通信机制比较</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44245828/article/details/109410117\">线程通信机制比较</a></li>\n</ul>\n</blockquote>\n<p>Object只有一个等待队列，Condition可以有多个等待队列</p>\n<h2 id=\"Collaboration\"><a href=\"#Collaboration\" class=\"headerlink\" title=\"Collaboration\"></a>Collaboration</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41727218/article/details/88376773\">互斥和同步详解</a></li>\n<li><a href=\"https://blog.csdn.net/cyan20115/article/details/106549012\">Mutex、Semaphore详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44808472/article/details/126315732\">Semaphore、CountDownLatch、CyclicBarrier详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Mutex解决互斥问题</li>\n<li>Semaphore解决同步问题</li>\n<li>synchronized和Lock解决互斥和同步的问题</li>\n<li>CountDownLatch解决计数器的问题</li>\n<li>CyclicBarrier解决同步点的问题</li>\n</ul>\n<h3 id=\"Mutex\"><a href=\"#Mutex\" class=\"headerlink\" title=\"Mutex\"></a>Mutex</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_29952235/article/details/114308860\">Mutex详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Semaphore\"><a href=\"#Semaphore\" class=\"headerlink\" title=\"Semaphore\"></a>Semaphore</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/warybee/article/details/111316932\">Semaphore详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Semaphore和Mutex的区别\"><a href=\"#Semaphore和Mutex的区别\" class=\"headerlink\" title=\"Semaphore和Mutex的区别\"></a>Semaphore和Mutex的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/shangdawei/p/3520102.html\">Semaphore和Mutex的区别详解</a></li>\n</ul>\n</blockquote>\n<p>Semaphore：解决同步问题，可以他人释放资源<br>Mutex：解决互斥问题，且只能自己释放资源</p>\n<h4 id=\"Semaphore和Lock的区别\"><a href=\"#Semaphore和Lock的区别\" class=\"headerlink\" title=\"Semaphore和Lock的区别\"></a>Semaphore和Lock的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gengyiping18/article/details/60142300\">Semaphore和Lock的区别</a></li>\n</ul>\n</blockquote>\n<p>Semaphore：释放许可前不要求先获取许可，并且任何人都能释放许可<br>Lock：解锁前必须先持有这个锁，且只能自己释放锁</p>\n<h3 id=\"CountDownLatch\"><a href=\"#CountDownLatch\" class=\"headerlink\" title=\"CountDownLatch\"></a>CountDownLatch</h3><h4 id=\"CountDownLatch和Semaphore的区别\"><a href=\"#CountDownLatch和Semaphore的区别\" class=\"headerlink\" title=\"CountDownLatch和Semaphore的区别\"></a>CountDownLatch和Semaphore的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_70734549/article/details/125982906\">CountDownLatch和Semaphore的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>CountDownLatch：计数器，只能递减数量（count），归零后通知等待的线程继续运行</li>\n<li>Semaphore：信号量，可以释放许可（permit），归还许可给其他线程使用</li>\n</ul>\n<h3 id=\"CyclicBarrier\"><a href=\"#CyclicBarrier\" class=\"headerlink\" title=\"CyclicBarrier\"></a>CyclicBarrier</h3><h4 id=\"CyclicBarrier和CountDownLatch的区别\"><a href=\"#CyclicBarrier和CountDownLatch的区别\" class=\"headerlink\" title=\"CyclicBarrier和CountDownLatch的区别\"></a>CyclicBarrier和CountDownLatch的区别</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dgh112233/article/details/104649531\">CyclicBarrier和CountDownLatch的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>CyclicBarrier：屏障栏，可以重复使用，归零后通知等待的<code>所有</code>线程继续运行</li>\n<li>CountDownLatch：计数器，只能使用一次，归零后通知等待的<code>监听</code>线程继续运行</li>\n</ul>\n<h3 id=\"Exchanger\"><a href=\"#Exchanger\" class=\"headerlink\" title=\"Exchanger\"></a>Exchanger</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_58554082/article/details/118254227\">Exchanger详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27828675/article/details/114068266\">并发工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/ruan_luqingnian/article/details/118529835\">并发工具进阶</a></li>\n<li><a href=\"https://blog.csdn.net/swadian2008/article/details/127028509\">并发工具详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"io","url":"/2017/07/01/lang/lang-1-java/junior/java-6-io/","content":"<h1 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37955444/article/details/79607883\">IO详解</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/117693340\">IO重读</a></li>\n<li><a href=\"https://blog.csdn.net/ffj_olivia/article/details/121114303\">IO异常</a></li>\n</ul>\n</blockquote>\n<h2 id=\"IO流的分类\"><a href=\"#IO流的分类\" class=\"headerlink\" title=\"IO流的分类\"></a>IO流的分类</h2><ul>\n<li>按数据方向来分：输入流（input）、输出流（output）</li>\n<li>按数据单位来分：字节流（byte）、字符流（char）</li>\n<li>按数据通道来分：节点流、处理流</li>\n</ul>\n<h2 id=\"IO类的分类\"><a href=\"#IO类的分类\" class=\"headerlink\" title=\"IO类的分类\"></a>IO类的分类</h2><ul>\n<li>接口：InputStream、OutputStream、Reader、Writer</li>\n<li>内存：ByteArrayInputStream、ByteArrayOutputStream、<br>CharArrayReader、CharArrayWriter、<br>StringReader、StringWriter</li>\n<li>文件：FileInputStream、FileOutputStream、FileReader、FileWriter</li>\n<li>管道：PipedInputStream、PipedOutputStream、PipedReader、PipedWriter</li>\n<li>终端：Scanner、PrintStream、PrintWriter</li>\n<li>缓冲：BufferedInputStream、BufferedOutputStream、BufferedReader、BufferedWriter</li>\n<li>转换：InputStreamReader、OutputStreamWriter</li>\n<li>组合：SequenceInputStream</li>\n</ul>\n<h2 id=\"IO类的体系\"><a href=\"#IO类的体系\" class=\"headerlink\" title=\"IO类的体系\"></a>IO类的体系</h2><ul>\n<li>InputStream<ul>\n<li>ByteArrayInputStream：节点流，操作内存</li>\n<li>FileInputStream：节点流，操作文件</li>\n<li>PipedInputStream：节点流，操作管道</li>\n<li>FilterInputStream<ul>\n<li>BufferedInputStream：处理流，支持缓冲</li>\n<li>DataInputStream：处理流，操作数据</li>\n<li>PushbackInputStream：处理流，支持回退</li>\n<li><del>LineNumberInputStream（已废弃）</del>：已废弃，推荐用LineNumberReader</li>\n</ul>\n</li>\n<li>ObjectInputStream：处理流，操作对象</li>\n<li>SequenceInputStream：处理流，组合输入</li>\n<li><del>StringBufferInputStream（已废弃）</del>：已废弃，推荐用StringReader</li>\n</ul>\n</li>\n<li>OutputStream<ul>\n<li>ByteArrayOutputStream：节点流，操作内存</li>\n<li>FileOutputStream：节点流，操作文件</li>\n<li>PipedOutputStream：节点流，操作管道</li>\n<li>FilterOutputStream<ul>\n<li>BufferedOutputStream：处理流，支持缓冲</li>\n<li>DataOutputStream：处理流，操作数据</li>\n<li>PrintStream：处理流，功能丰富</li>\n</ul>\n</li>\n<li>ObjectOutputStream：处理流，操作对象</li>\n</ul>\n</li>\n<li>Reader<ul>\n<li>CharArrayReader：节点流，操作内存</li>\n<li>StringReader：节点流，操作内存</li>\n<li>InputStreamReader：处理流，支持转换<ul>\n<li>FileReader：处理流，操作文件</li>\n</ul>\n</li>\n<li>PipedReader：节点流，操作管道</li>\n<li>FilterReader<ul>\n<li>PushbackReader：处理流，支持回退</li>\n</ul>\n</li>\n<li>BufferedReader：处理流，支持缓冲<ul>\n<li>LineNumberReader：处理流，包含行数</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Writer<ul>\n<li>CharArrayWriter：节点流，操作内存</li>\n<li>StringWriter：节点流，操作内存</li>\n<li>OutputStreamWriter：处理流，支持转换<ul>\n<li>FileWriter处理流，操作文件</li>\n</ul>\n</li>\n<li>PipedWriter：节点流，操作管道</li>\n<li>FilterWriter</li>\n<li>BufferedWriter：处理流，支持缓冲</li>\n<li>PrintWriter：处理流，功能丰富</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>注意：BufferedReader没有继承FilterReader，BufferedWriter没有继承FilterWriter</p>\n</blockquote>\n<h2 id=\"IO模型分类\"><a href=\"#IO模型分类\" class=\"headerlink\" title=\"IO模型分类\"></a>IO模型分类</h2><h3 id=\"IO模型分类-1\"><a href=\"#IO模型分类-1\" class=\"headerlink\" title=\"IO模型分类\"></a>IO模型分类</h3><p>IO模型可以按照同步和异步、阻塞和非阻塞进行分类</p>\n<ul>\n<li>同步阻塞</li>\n<li>同步非阻塞</li>\n<li>异步非阻塞</li>\n</ul>\n<blockquote>\n<p>注意：没有异步阻塞这种组合，因为异步不需要阻塞</p>\n</blockquote>\n<h4 id=\"同步和异步\"><a href=\"#同步和异步\" class=\"headerlink\" title=\"同步和异步\"></a>同步和异步</h4><p>同步和异步描述的是调用者执行操作后获取结果的方式</p>\n<ul>\n<li>同步：主动获取结果，有阻塞和非阻塞等实现方式</li>\n<li>异步：被动接收结果，有回调等实现方式</li>\n</ul>\n<blockquote>\n<p>非阻塞实现方式：轮询（polling）、事件驱动（event-driven）、信号驱动（signal-driven）</p>\n</blockquote>\n<h4 id=\"阻塞和非阻塞\"><a href=\"#阻塞和非阻塞\" class=\"headerlink\" title=\"阻塞和非阻塞\"></a>阻塞和非阻塞</h4><p>阻塞和非阻塞描述的是调用者执行操作后的后续行为</p>\n<ul>\n<li>阻塞：只能挂起等待结果，不能做其他事情</li>\n<li>非阻塞：无需挂起等待结果，可以做其他事情，稍后再获取或者接收结果</li>\n</ul>\n<h3 id=\"Java的IO模型分类\"><a href=\"#Java的IO模型分类\" class=\"headerlink\" title=\"Java的IO模型分类\"></a>Java的IO模型分类</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_38109046/article/details/89449305\">java的IO模型详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>BIO（Bloking IO）：同步阻塞IO，又名老IO（Old IO）</li>\n<li>NIO（Non-Bloking IO）：同步非阻塞IO，又名新IO（New IO）</li>\n<li>AIO（Asynchronous IO）：异步非阻塞IO</li>\n</ul>\n<h4 id=\"BIO和NIO的区别\"><a href=\"#BIO和NIO的区别\" class=\"headerlink\" title=\"BIO和NIO的区别\"></a>BIO和NIO的区别</h4><ul>\n<li>BIO是面向流（Stream Oriented）的，NIO是面向缓冲区（Buffer Oriented）的</li>\n<li>BIO的操作是阻塞的，NIO的操作是非阻塞的</li>\n<li>BIO一次只能操作一个数据源，NIO一次可以操作多个数据源</li>\n</ul>\n<h4 id=\"Stream和Channel的区别\"><a href=\"#Stream和Channel的区别\" class=\"headerlink\" title=\"Stream和Channel的区别\"></a>Stream和Channel的区别</h4><ul>\n<li>Stream是单向的，Channel是双向的</li>\n</ul>\n<h3 id=\"Unix的IO模型分类\"><a href=\"#Unix的IO模型分类\" class=\"headerlink\" title=\"Unix的IO模型分类\"></a>Unix的IO模型分类</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35361244/article/details/109251983\">Unix的IO模型详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>阻塞IO（bloking IO）：同步阻塞IO</li>\n<li>非阻塞IO（non-blocking IO）：同步非阻塞IO</li>\n<li>多路复用IO（multiplexing IO）：同步非阻塞IO，又名事件驱动IO（event-driven IO）</li>\n<li>信号驱动式IO（signal-driven IO）：同步非阻塞IO</li>\n<li>异步IO（asynchronous IO）：异步非阻塞IO</li>\n</ul>\n<blockquote>\n<p>注意：除了异步IO，其他都是同步IO，同步IO里面除了阻塞IO以外都是非阻塞IO</p>\n</blockquote>\n<h2 id=\"IO多路复用\"><a href=\"#IO多路复用\" class=\"headerlink\" title=\"IO多路复用\"></a>IO多路复用</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34827674/article/details/115619261\">IO多路复用详解</a></li>\n<li><a href=\"https://blog.csdn.net/daocaokafei/article/details/118282087\">IO多路复用原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"C10K\"><a href=\"#C10K\" class=\"headerlink\" title=\"C10K\"></a>C10K</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chinawangfei/article/details/102780959\">C10K详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Epoll\"><a href=\"#Epoll\" class=\"headerlink\" title=\"Epoll\"></a>Epoll</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lihao21/article/details/67631516\">IO多路复用之epoll的水平触发与边缘触发</a></li>\n</ul>\n</blockquote>\n<p>水平触发：不断的触发epoll_wait回调，直到内核缓冲区数据被read函数读完才结束<br>边缘触发：只触发一次epoll_wait回调，需要程序自己保证将内核缓冲区的数据读取完</p>\n<p>select和poll调用只支持水平触发，epoll默认是水平触发</p>\n<blockquote>\n<p>边缘（edge）触发类似于电平的跳变（边沿上升和边沿下降），一般和非阻塞 I&#x2F;O 搭配使用</p>\n</blockquote>\n<h2 id=\"IO并发模型\"><a href=\"#IO并发模型\" class=\"headerlink\" title=\"IO并发模型\"></a>IO并发模型</h2><h3 id=\"Reactor和Proactor\"><a href=\"#Reactor和Proactor\" class=\"headerlink\" title=\"Reactor和Proactor\"></a>Reactor和Proactor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34827674/article/details/116175772\">Reactor和Proactor详解</a></li>\n</ul>\n</blockquote>\n<p>Reactor的核心如下</p>\n<ul>\n<li>Dispatcher：事件分发器</li>\n<li>Acceptor：连接事件处理器</li>\n<li>Handler：读写事件处理器</li>\n</ul>\n<h2 id=\"IO设计模式\"><a href=\"#IO设计模式\" class=\"headerlink\" title=\"IO设计模式\"></a>IO设计模式</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_53157173/article/details/127060418\">IO设计模式详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>装饰器模式</li>\n<li>适配器模式</li>\n<li>观察者模式</li>\n</ul>\n<h1 id=\"BIO\"><a href=\"#BIO\" class=\"headerlink\" title=\"BIO\"></a>BIO</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/anlian523/article/details/104256787\">BIO详解</a></li>\n</ul>\n</blockquote>\n<p>BIO：Bloking IO or Old IO<br>BIO原理：同步阻塞式IO，基于阻塞读写机制<br>BIO核心：InputStream、OutputStream、Reader、Writer</p>\n<h1 id=\"NIO\"><a href=\"#NIO\" class=\"headerlink\" title=\"NIO\"></a>NIO</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/120946903\">NIO详解</a></li>\n<li><a href=\"https://blog.csdn.net/Java_may/article/details/117659657\">NIO之Selector详解</a></li>\n<li><a href=\"https://blog.csdn.net/usagoole/article/details/82584851\">NIO之SelectionKey详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014745069/article/details/99709696\">NIO之Buffer详解</a></li>\n<li><a href=\"https://blog.csdn.net/p793049488/article/details/122523894\">NIO之Buffer的核心方法入门</a></li>\n<li><a href=\"https://blog.csdn.net/u010430495/article/details/86087154\">NIO之Buffer的核心方法详解</a></li>\n</ul>\n</blockquote>\n<p>NIO：Non-Bloking IO or New IO<br>NIO原理：同步非阻塞IO，基于多路复用机制<br>NIO核心：Channel、Selector、Buffer</p>\n<ul>\n<li>FileChannel </li>\n<li>DatagramChannel </li>\n<li>ServerSocketChannel </li>\n<li>SocketChannel</li>\n<li>Selector</li>\n<li>SelectionKey. OP_CONNECT</li>\n<li>SelectionKey. OP_ACCEPT</li>\n<li>SelectionKey. OP_READ</li>\n<li>SelectionKey. OP_WRITE</li>\n<li>ByteBuffer</li>\n<li>CharBuffer</li>\n</ul>\n<h1 id=\"AIO\"><a href=\"#AIO\" class=\"headerlink\" title=\"AIO\"></a>AIO</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiongbatianxia30146/article/details/100745414\">AIO详解</a></li>\n</ul>\n</blockquote>\n<p>AIO：Asynchronous IO<br>AIO原理：异步非堵塞IO，基于异步回调机制<br>AIO核心：AsynchronousChannel、CompletionHandler、Buffer</p>\n<ul>\n<li>AsynchronousServerSocketChannel</li>\n<li>AsynchronousSocketChannel</li>\n<li>CompletionHandler</li>\n<li>ByteBuffer</li>\n<li>CharBuffer</li>\n</ul>\n<h1 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h1><h2 id=\"File-1\"><a href=\"#File-1\" class=\"headerlink\" title=\"File\"></a>File</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35268841/article/details/103342620\">File入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_52533007/article/details/123274351\">File进阶</a></li>\n<li><a href=\"https://blog.csdn.net/allway2/article/details/118873434\">File详解</a></li>\n<li><a href=\"https://blog.csdn.net/cold___play/article/details/105135556\">Files详解</a></li>\n<li><a href=\"https://blog.csdn.net/b15735105314/article/details/115677912\">RandomAccessFile详解</a></li>\n<li><a href=\"https://blog.csdn.net/wanghao112956/article/details/93978152\">TempFile详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_21974931/article/details/103444902\">文件遍历详解</a></li>\n<li><a href=\"https://blog.csdn.net/chinabestchina/article/details/101173766\">文件监听详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Path\"><a href=\"#Path\" class=\"headerlink\" title=\"Path\"></a>Path</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cold___play/article/details/105130927\">Path详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38569499/article/details/84988087\">Paths详解</a></li>\n<li><a href=\"https://blog.csdn.net/jiachunchun/article/details/90235561\">URI和URL详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"相对路径（Relative-Path）\"><a href=\"#相对路径（Relative-Path）\" class=\"headerlink\" title=\"相对路径（Relative Path）\"></a>相对路径（Relative Path）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangjun5159/article/details/49820615\">File相对路径和user.dir</a></li>\n<li><a href=\"https://blog.csdn.net/haoyifen/article/details/52733371\">Path相对路径和user.dir</a></li>\n<li><a href=\"https://blog.csdn.net/mm_bit/article/details/50372229\">Jar相对路径和user.dir</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/130175513\">java的user.dir入门</a></li>\n<li><a href=\"https://blog.csdn.net/ColdFireMan/article/details/105968160\">java的user.dir详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"资源路径（Resource-Path）\"><a href=\"#资源路径（Resource-Path）\" class=\"headerlink\" title=\"资源路径（Resource Path）\"></a>资源路径（Resource Path）</h3><h4 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35789269/article/details/116766487\">java读取资源文件</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43907800/article/details/106227945\">java的Class.getResource和ClassLoader.getResource的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhangshk_/article/details/82704010\">java的Class.getResource和ClassLoader.getResource的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/89334236\">java的ClassLoader和Properties、ResourceBundle</a> </li>\n<li><a href=\"https://blog.csdn.net/wk1134314305/article/details/77940147\">java的classpath详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30871701/article/details/99960038\">java的classpath通配符详解</a></li>\n<li><a href=\"https://blog.csdn.net/Thinkingcao/article/details/111897862\">java配置类之Properties</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29364429/article/details/102847037\">java国际化之ResourceBundle</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/new_ord/article/details/108916783\">Spring读取资源文件</a></li>\n<li><a href=\"https://blog.csdn.net/listeningsea/article/details/122944290\">Spring的ResourceUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/baQiWangZhengLiang/article/details/84568846\">Spring的ResourceUtils和jar</a></li>\n<li><a href=\"https://blog.csdn.net/u010086122/article/details/81607167\">Spring的ResourceLoader详解</a></li>\n<li><a href=\"https://blog.csdn.net/YangLiehui/article/details/98599253\">Spring的ClassPathResource详解</a></li>\n<li><a href=\"https://blog.csdn.net/w372426096/article/details/78345180\">Spring的classpath和classpath*的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/java_lifeng/article/details/101352188\">Spring的classpath和classpath*的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq1309664161/article/details/119710994\">Spring配置类之Environment</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43203949/article/details/125471825\">Spring国际化之MessageSource</a></li>\n</ul>\n</blockquote>\n<h4 id=\"jar\"><a href=\"#jar\" class=\"headerlink\" title=\"jar\"></a>jar</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mouday/article/details/107198385\">jar读取资源文件入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40304825/article/details/112917818\">jar读取资源文件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37672801/article/details/123538366\">jar读取资源文件详解</a></li>\n<li><a href=\"https://www.cnblogs.com/convict/p/11330449.html\">jar读取资源文件精进</a></li>\n<li><a href=\"https://blog.csdn.net/ywg_1994/article/details/104440114\">读取jar包中的资源文件</a></li>\n</ul>\n</blockquote>\n<h3 id=\"工作路径（Working-Path）\"><a href=\"#工作路径（Working-Path）\" class=\"headerlink\" title=\"工作路径（Working Path）\"></a>工作路径（Working Path）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yklovejava/article/details/84321509\">java工作路径之user.dir和classpath</a></li>\n</ul>\n</blockquote>\n<h2 id=\"More\"><a href=\"#More\" class=\"headerlink\" title=\"More\"></a>More</h2><h3 id=\"CRLF\"><a href=\"#CRLF\" class=\"headerlink\" title=\"CRLF\"></a>CRLF</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_38569499/article/details/86576199\">回车与换行入门</a></li>\n<li><a href=\"https://blog.csdn.net/lishuoboy/article/details/84768748\">回车与换行进阶</a></li>\n<li><a href=\"https://blog.csdn.net/changruihe/article/details/53287313\">回车与换行详解</a></li>\n<li><a href=\"https://www.cnblogs.com/cnjavahome/p/8893813.html\">回车与换行精进</a></li>\n<li><a href=\"https://blog.csdn.net/p15097962069/article/details/103455914\">为什么文本文件以换行符结尾</a></li>\n<li><a href=\"https://blog.csdn.net/alsamsung/article/details/87744262\">文件末尾缺少换行符之c</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45965358/article/details/120587881\">文件末尾缺少换行符之python</a></li>\n<li><a href=\"https://segmentfault.com/q/1010000003762328\">文件末尾换行符的影响之java</a></li>\n<li><a href=\"https://www.coder.work/article/3135565\">文件末尾换行符的影响之python</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34018840/article/details/106717598\">文件末尾换行符的影响之shell</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39678304/article/details/117009242\">文件末尾换行符的影响之wc</a></li>\n<li><a href=\"https://blog.csdn.net/gao_zhennan/article/details/120217246\">文件末尾换行符的影响之git</a></li>\n</ul>\n</blockquote>\n<p>NL：新行符（newline，windows是CRLF，linux和mac是LF）<br>CR：回车符（carriage return）<br>LF：换行符（line break）</p>\n<h3 id=\"EOF\"><a href=\"#EOF\" class=\"headerlink\" title=\"EOF\"></a>EOF</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chenaibo/article/details/6062773\">文件结束符详解</a></li>\n</ul>\n</blockquote>\n<p>EOF：文件结束符（end of line）</p>\n<ul>\n<li>bol：begin of line</li>\n<li>eol：end of line</li>\n<li>bof：begin of file</li>\n<li>eof：end of line</li>\n<li>eoi：end of input</li>\n</ul>\n<h3 id=\"FD\"><a href=\"#FD\" class=\"headerlink\" title=\"FD\"></a>FD</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yanjun_1982/article/details/79421528\">文件描述符与文件句柄的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/nazeniwaresakini/article/details/104220111\">文件描述符与文件句柄的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_25518029/article/details/119997315\">文件描述符与文件句柄的区别详解</a></li>\n</ul>\n</blockquote>\n<p>FD：文件描述符</p>\n<h1 id=\"Console\"><a href=\"#Console\" class=\"headerlink\" title=\"Console\"></a>Console</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/i_r_o_n_m_a_n/article/details/122178183\">Console IO详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_52459924/article/details/123538356\">Scanner的方法区别</a></li>\n<li><a href=\"https://blog.csdn.net/miye15664742579/article/details/108191909\">IO输入之c语言如何判断输入结束</a></li>\n<li><a href=\"https://blog.csdn.net/CronousGT/article/details/78387558\">IO输入之java语言如何判断输入结束</a></li>\n<li><a href=\"https://blog.csdn.net/ll_dream/article/details/80253189\">IO输入之c语言的scanf读取规则理解</a></li>\n<li><a href=\"https://blog.csdn.net/longqiancao1/article/details/108775935\">IO输入之java语言的Scanner读取规则理解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"如何从控制台读取数据\"><a href=\"#如何从控制台读取数据\" class=\"headerlink\" title=\"如何从控制台读取数据\"></a>如何从控制台读取数据</h2><p>使用Scanner</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">try (Scanner s = new Scanner(System.in)) &#123;</span><br><span class=\"line\">    if (s.hasNextInt()) &#123;</span><br><span class=\"line\">        int v = s.nextInt();</span><br><span class=\"line\">        System.out.println(&quot;value: &quot; + v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"如何输出数据到控制台\"><a href=\"#如何输出数据到控制台\" class=\"headerlink\" title=\"如何输出数据到控制台\"></a>如何输出数据到控制台</h2><p>使用PrintStream</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">// System.out.println(&quot;123&quot;);</span><br><span class=\"line\">PrintStream o = System.out;</span><br><span class=\"line\">o.println(&quot;123&quot;);</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Socket\"><a href=\"#Socket\" class=\"headerlink\" title=\"Socket\"></a>Socket</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014209205/article/details/80461122\">Socket IO详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h1 id=\"Serialize\"><a href=\"#Serialize\" class=\"headerlink\" title=\"Serialize\"></a>Serialize</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/czh500/article/details/88030537\">序列化入门</a></li>\n<li><a href=\"https://blog.csdn.net/Z0157/article/details/81611261\">序列化详解</a></li>\n<li><a href=\"https://blog.csdn.net/Jiangtagong/article/details/119656782\">序列化方式入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46201444/article/details/115081351\">序列化方式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/fenglongmiao/article/details/79425218\">序列化方式详解</a></li>\n<li><a href=\"https://blog.csdn.net/dingxie1963/article/details/101259337\">序列化之Thrift和Protobuf对比</a></li>\n<li><a href=\"https://blog.csdn.net/zpf_940810653842/article/details/102824384\">序列化之Kyro和Avro对比</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><p>配置的来源和优先级（由高到低）</p>\n<ul>\n<li>命令行选项（Option）和参数（Argument）</li>\n<li>操作系统环境变量</li>\n<li>配置文件和配置中心</li>\n</ul>\n<h3 id=\"configuration\"><a href=\"#configuration\" class=\"headerlink\" title=\"configuration\"></a>configuration</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/winter_wu_1998/article/details/103469213\">常见的配置文件格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19934363/article/details/88775352\">ini和properties配置格式对比</a></li>\n</ul>\n</blockquote>\n<h4 id=\"properties\"><a href=\"#properties\" class=\"headerlink\" title=\"properties\"></a>properties</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Thinkingcao/article/details/111897862\">java读取properties配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/lsllll44/article/details/117539198\">properties配置格式详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ini\"><a href=\"#ini\" class=\"headerlink\" title=\"ini\"></a>ini</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lb245557472/article/details/92792666\">java读取ini配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/a123441/article/details/90668032\">ini配置格式详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"xml\"><a href=\"#xml\" class=\"headerlink\" title=\"xml\"></a>xml</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46360888/article/details/121575630\">java读取xml配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/m0_60489526/article/details/120166188\">xml配置格式详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"json\"><a href=\"#json\" class=\"headerlink\" title=\"json\"></a>json</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/YDVampire/article/details/82595590\">java读取json配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34059951/article/details/88742749\">json配置格式详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"yaml\"><a href=\"#yaml\" class=\"headerlink\" title=\"yaml\"></a>yaml</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/120709830\">yaml配置格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42176188/article/details/121586165\">yaml配置格式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/fly910905/article/details/99882542\">yaml配置格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44211323/article/details/116988447\">yaml和SpringBoot</a></li>\n<li><a href=\"https://blog.csdn.net/BigData_Mining/article/details/88535356\">yaml和K8s</a></li>\n</ul>\n</blockquote>\n<h4 id=\"toml\"><a href=\"#toml\" class=\"headerlink\" title=\"toml\"></a>toml</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/demon7552003/article/details/117161585\">toml配置格式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"environment\"><a href=\"#environment\" class=\"headerlink\" title=\"environment\"></a>environment</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/124937020\">java读取环境变量</a></li>\n</ul>\n</blockquote>\n<h3 id=\"cmdline\"><a href=\"#cmdline\" class=\"headerlink\" title=\"cmdline\"></a>cmdline</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/108495772\">java读取虚拟机参数</a></li>\n<li><a href=\"https://blog.csdn.net/moyefeng198436/article/details/113535904\">java命令行参数解析器</a></li>\n</ul>\n</blockquote>\n<p>选项：option<br>参数：argument</p>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><p>Files、Paths</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingyonghu/article/details/118944724\">Files工具类详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36761831/article/details/90547522\">Paths工具类详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><p>IOUtils、FileUtils、FilenameUtils、FileSystemUtils、FileCopyUtils、SocketUtils</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42671519/article/details/121157079\">Apache Commons IO入门</a></li>\n<li><a href=\"https://blog.csdn.net/Regino/article/details/105055963\">Apache Commons IO进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36462452/article/details/128593936\">Apache Commons IO详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/80136921\">Apache Commons IO工具类入门</a></li>\n<li><a href=\"https://blog.csdn.net/backbug/article/details/99572931\">Apache Commons IO工具类详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104605614\">Apache Commons FileSystemUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104605463\">Apache Commons FileCopyUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104605288\">Apache Commons SocketUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2><p>Files</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/agileforce/article/details/88300623\">Google Guava IO入门</a></li>\n<li><a href=\"https://solang.blog.csdn.net/article/details/105486129\">Google Guava IO进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wuyuxing24/article/details/95891648\">Google Guava IO详解</a></li>\n<li><a href=\"https://blog.csdn.net/o83290102o5/article/details/79105879\">Google Guava IO工具类入门</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/90545962\">Google Guava IO工具类详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"generic","url":"/2017/07/01/lang/lang-1-java/junior/java-8-generic/","content":"<h1 id=\"Generic\"><a href=\"#Generic\" class=\"headerlink\" title=\"Generic\"></a>Generic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChenRui_yz/article/details/122935621\">java泛型详解</a></li>\n<li><a href=\"https://blog.csdn.net/hustspy1990/article/details/78048493\">java泛型问题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42470947/article/details/104488692\">java泛型擦除</a></li>\n<li><a href=\"https://blog.csdn.net/caoyuanyenang/article/details/101726934\">java数组不支持泛型</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43821874/article/details/92793059\">java创建泛型数组类</a></li>\n<li><a href=\"https://blog.csdn.net/ZytheMoon/article/details/85004086\">java的协变和逆变入门</a></li>\n<li><a href=\"https://blog.csdn.net/u010900754/article/details/101113667\">java的协变和逆变进阶</a></li>\n<li><a href=\"https://blog.csdn.net/howeres/article/details/108320729\">java的协变和逆变详解</a></li>\n<li><a href=\"https://blog.csdn.net/yi_afly/article/details/52071260\">java的协变和逆变精进</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/AMT_MUZI/article/details/115335342\">泛型工具类入门</a></li>\n<li><a href=\"https://blog.csdn.net/wang_lianjie/article/details/103204140\">泛型工具类详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"net","url":"/2017/07/01/lang/lang-1-java/junior/java-7-net/","content":"<h1 id=\"Net\"><a href=\"#Net\" class=\"headerlink\" title=\"Net\"></a>Net</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46331050/article/details/117706050\">java网络详解</a></li>\n<li><a href=\"https://blog.csdn.net/fly910905/article/details/112546533\">java网络连通性测试详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Address\"><a href=\"#Address\" class=\"headerlink\" title=\"Address\"></a>Address</h2><h3 id=\"InetAddress\"><a href=\"#InetAddress\" class=\"headerlink\" title=\"InetAddress\"></a>InetAddress</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lu202032/article/details/121567654\">InetAddress入门</a></li>\n<li><a href=\"https://blog.csdn.net/z_xindong/article/details/85051458\">InetAddress进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zhanghao_Hulk/article/details/118056760\">InetAddress详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"InetSocketAddress\"><a href=\"#InetSocketAddress\" class=\"headerlink\" title=\"InetSocketAddress\"></a>InetSocketAddress</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010142437/article/details/18039961\">InetSocketAddress入门</a></li>\n<li><a href=\"https://blog.csdn.net/itkool/article/details/78950128\">InetSocketAddress进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43931465/article/details/120992456\">InetSocketAddress详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Interface\"><a href=\"#Interface\" class=\"headerlink\" title=\"Interface\"></a>Interface</h2><h3 id=\"NetworkInterface\"><a href=\"#NetworkInterface\" class=\"headerlink\" title=\"NetworkInterface\"></a>NetworkInterface</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BADAO_LIUMANG_QIZHI/article/details/108484663\">NetworkInterface入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40616823/article/details/109389205\">NetworkInterface进阶</a></li>\n<li><a href=\"https://blog.csdn.net/cold___play/article/details/106600394\">NetworkInterface详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"IP\"><a href=\"#IP\" class=\"headerlink\" title=\"IP\"></a>IP</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/105185361\">获取机器IP入门</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/105233229\">获取机器IP详解</a></li>\n<li><a href=\"https://blog.csdn.net/lmb55/article/details/51264707\">获取机器IP未知的主机问题</a></li>\n<li><a href=\"https://blog.csdn.net/u012783240/article/details/80352585\">获取机器IP之多网卡问题</a></li>\n<li><a href=\"https://blog.csdn.net/u011809209/article/details/77236602\">获取机器IP之排除虚拟机</a></li>\n</ul>\n</blockquote>\n<h1 id=\"URL\"><a href=\"#URL\" class=\"headerlink\" title=\"URL\"></a>URL</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46331050/article/details/118071887\">URI、URL和URN入门</a></li>\n<li><a href=\"https://blog.csdn.net/K_sheep/article/details/126964806\">URI、URL和URN详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Dev\"><a href=\"#Dev\" class=\"headerlink\" title=\"Dev\"></a>Dev</h1><h2 id=\"Netty\"><a href=\"#Netty\" class=\"headerlink\" title=\"Netty\"></a>Netty</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/vermont_/article/details/118755017\">Netty入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45722941/article/details/120219166\">Netty进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37583655/article/details/122048480\">Netty详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38685503/article/details/114168722\">Netty图解</a></li>\n<li><a href=\"https://blog.csdn.net/ww2651071028/article/details/130003959\">Netty经典32连问</a></li>\n<li><a href=\"https://blog.csdn.net/Diamond_Tao/article/details/117392294\">Netty粘包和拆包入门</a></li>\n<li><a href=\"https://blog.csdn.net/lt_xiaodou/article/details/126191257\">Netty粘包和拆包进阶</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/83957259\">Netty粘包和拆包详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"spring","url":"/2017/07/01/lang/lang-1-java/senior/java-1-spring/","content":"<h1 id=\"Spring\"><a href=\"#Spring\" class=\"headerlink\" title=\"Spring\"></a>Spring</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_68103752/article/details/125137017\">Spring全家桶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_63324772/article/details/123716207\">Spring入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44207403/article/details/106736102\">Spring详解</a></li>\n<li><a href=\"https://blog.csdn.net/uuuyy_/article/details/121889095\">SpringBoot入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44494373/article/details/104566898\">SpringBoot详解</a></li>\n<li><a href=\"https://blog.csdn.net/java_zjn/article/details/108711513\">SpringBoot和SpringFramework的版本关系</a></li>\n<li><a href=\"https://blog.csdn.net/yinsizhilian/article/details/78521177\">SSM框架和SSH框架的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Spring有哪些模块\"><a href=\"#Spring有哪些模块\" class=\"headerlink\" title=\"Spring有哪些模块\"></a>Spring有哪些模块</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/102810819\">Spring模块详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>core：core、beans、context、spel</li>\n<li>aop：aop、aspects、instrument</li>\n<li>web：web、webmvc、webflux、websocket、servlet、portlet</li>\n<li>data：jdbc、orm、oxm、transactions</li>\n<li>other：test、messaging、jms</li>\n</ul>\n<h2 id=\"Spring核心是什么\"><a href=\"#Spring核心是什么\" class=\"headerlink\" title=\"Spring核心是什么\"></a>Spring核心是什么</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_51980491/article/details/114845060\">Spring核心详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>IOC（Inversion of Control，控制反转）</li>\n<li>AOP（Aspect Oriented Programming，面向切面编程）</li>\n</ul>\n<blockquote>\n<p>IOC有多种实现方式</p>\n<ul>\n<li>DI（Dependency Inject，依赖注入）</li>\n<li>DL（Dependency Lookup，依赖查找）</li>\n</ul>\n</blockquote>\n<h2 id=\"Spring常用的注解\"><a href=\"#Spring常用的注解\" class=\"headerlink\" title=\"Spring常用的注解\"></a>Spring常用的注解</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_25482375/article/details/119985789\">Spring注解大全</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38080370/article/details/122038148\">Spring常用注解对应的xml配置详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"IOC\"><a href=\"#IOC\" class=\"headerlink\" title=\"IOC\"></a>IOC</h1><h2 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/TheWayForDream/article/details/120553024\">IOC入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41857955/article/details/126216583\">IOC详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhuyanlin09/article/details/89321939\">IOC原理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Advanced\"><a href=\"#Advanced\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"DI\"><a href=\"#DI\" class=\"headerlink\" title=\"DI\"></a>DI</h3><h4 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/publicman_/article/details/123068726\">Spring的bean对象的三种注册方式</a></li>\n<li><a href=\"https://blog.csdn.net/Luck_And_Destiny/article/details/119940123\">@Component详解</a></li>\n<li><a href=\"https://blog.csdn.net/xfx_1994/article/details/103976575\">@ComponentScan入门</a></li>\n<li><a href=\"https://blog.csdn.net/beFocused/article/details/106940934\">@ComponentScan进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40837310/article/details/106504778\">@ComponentScan详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43808717/article/details/118155699\">@Configuration入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42777577/article/details/104294904\">@Configuration进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yangyuessw/article/details/119390902\">@Configuration详解</a></li>\n<li><a href=\"https://blog.csdn.net/ITWANGBOIT/article/details/103008558\">@Configuration合并</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42140261/article/details/104864333\">@Configuration和@Bean详解</a></li>\n<li><a href=\"https://blog.csdn.net/u011357213/article/details/109555741\">@Configuration和@Import详解</a></li>\n<li><a href=\"https://blog.csdn.net/fansili/article/details/78740877\">@Service的和@Component区别</a></li>\n<li><a href=\"https://blog.csdn.net/isea533/article/details/78072133\">@Configuration和@Component的区别</a></li>\n<li><a href=\"https://blog.csdn.net/russle/article/details/83247163\">@Bean和@Component的区别</a></li>\n</ul>\n</blockquote>\n<p>三种注册方式</p>\n<ul>\n<li>基于xml文件：ApplicationContext（BeanFactory）类 + applicationContext.xml</li>\n<li>基于java注解：@Component、@Controller、@Service、@Repository</li>\n<li>基于java配置类：@Configuration + @Bean、@Configuration + @Import</li>\n</ul>\n<blockquote>\n<p>ps：@Configuration上有@Component，所以使用组件扫描（@ComponentScan）时会自动注册到容器<br>ps：@Component是用来注册自己的bean的，@Configuration是用来注册第三方的bean的</p>\n</blockquote>\n<h5 id=\"Scope\"><a href=\"#Scope\" class=\"headerlink\" title=\"Scope\"></a>Scope</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/TzBugs/article/details/82142286\">@Scope详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Lazy\"><a href=\"#Lazy\" class=\"headerlink\" title=\"Lazy\"></a>Lazy</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Peelarmy/article/details/107339547\">@Lazy详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Alias\"><a href=\"#Alias\" class=\"headerlink\" title=\"Alias\"></a>Alias</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43888891/article/details/126962698\">@AliasFor详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Inject\"><a href=\"#Inject\" class=\"headerlink\" title=\"Inject\"></a>Inject</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiegongmiao/article/details/115667051\">Spring的bean依赖的三种注入方式</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36289485/article/details/121520766\">Spring的bean依赖注入方式之优先级详解</a></li>\n<li><a href=\"https://www.cnblogs.com/lvdeyinBlog/p/15178226.html\">Spring的bean依赖注入方式之为什么不建议使用字段注入</a></li>\n</ul>\n</blockquote>\n<h5 id=\"三种注入方式\"><a href=\"#三种注入方式\" class=\"headerlink\" title=\"三种注入方式\"></a>三种注入方式</h5><ul>\n<li>field注入：字段注入</li>\n<li>setter注入：setter注入</li>\n<li>constructor注入：构造器注入</li>\n</ul>\n<h5 id=\"字段注入的问题\"><a href=\"#字段注入的问题\" class=\"headerlink\" title=\"字段注入的问题\"></a>字段注入的问题</h5><ul>\n<li>手动创建的对象的依赖不会注入，使用时会导致空指针错误</li>\n<li>无法设置注入的对象为final，也无法设置注入的对象为static</li>\n</ul>\n<h5 id=\"setter注入的问题\"><a href=\"#setter注入的问题\" class=\"headerlink\" title=\"setter注入的问题\"></a>setter注入的问题</h5><ul>\n<li>手动创建的对象的依赖不会注入，使用时会导致空指针错误</li>\n</ul>\n<h4 id=\"AutoWire\"><a href=\"#AutoWire\" class=\"headerlink\" title=\"AutoWire\"></a>AutoWire</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44205087/article/details/123108269\">Spring自动装配机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32868023/article/details/123785065\">Spring自动装配之@Autowired详解</a></li>\n<li><a href=\"https://blog.csdn.net/wingbin/article/details/38385269\">Spring自动装配之@Resource详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42354735/article/details/87752608\">@Autowired、@Resource、@Inject区别</a></li>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/120853683\">@Autowired、@Resource的装配查找逻辑</a></li>\n</ul>\n</blockquote>\n<p>@Autowired的装配查找逻辑如下</p>\n<ul>\n<li>先按照byType的方式进行匹配</li>\n<li>如果匹配了多个，则又按照byName的方式进行匹配</li>\n<li>如果没匹配到，则抛出异常</li>\n</ul>\n<p>@Resource的装配查找逻辑如下</p>\n<ul>\n<li>如果同时指定了name和type，name和type必须同时匹配</li>\n<li>如果只指定了name，只会按照byName的方式进行匹配</li>\n<li>如果只指定了type，只会按照byType的方式进行匹配</li>\n<li>否则先按照byName的方式进行匹配，找不到时再按byType的方式进行匹配</li>\n<li>如果匹配了多个或者没匹配到，则抛出异常</li>\n</ul>\n<blockquote>\n<p>ps：byName的方式不会找到多个，因为name（bean id）在容器中必须是唯一的</p>\n</blockquote>\n<h5 id=\"Naming\"><a href=\"#Naming\" class=\"headerlink\" title=\"Naming\"></a>Naming</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/adparking/article/details/114594203\">@Qualifier详解</a></li>\n<li><a href=\"https://blog.csdn.net/z69183787/article/details/38686611\">@Named详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Priority\"><a href=\"#Priority\" class=\"headerlink\" title=\"Priority\"></a>Priority</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/niugang0920/article/details/116275748\">@Primary详解</a></li>\n<li><a href=\"https://blog.csdn.net/z69183787/article/details/110638883\">@Priority入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37130607/article/details/113823971\">@Priority详解</a></li>\n</ul>\n</blockquote>\n<p>@Primary和@Priority控制的是依赖注入的优先级</p>\n<h4 id=\"Ordering\"><a href=\"#Ordering\" class=\"headerlink\" title=\"Ordering\"></a>Ordering</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zkc7441976/article/details/112548075\">@Order详解</a></li>\n<li><a href=\"https://blog.csdn.net/huanghanqian/article/details/103050245\">@Order之AOP</a></li>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/86649072\">@Order之CommandLineRunner</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>@Order不能控制bean加载和实例化的顺序，但是@Order可以控制注入到List里面多个bean的顺序</li>\n<li>@Order可以控制多个AOP的顺序</li>\n<li>@Order可以控制多个CommandLineRunner的顺序</li>\n</ul>\n<h4 id=\"Dependency\"><a href=\"#Dependency\" class=\"headerlink\" title=\"Dependency\"></a>Dependency</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_29860591/article/details/108634575\">@DependsOn入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40837310/article/details/106557588\">@DependsOn详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38826019/article/details/115857596\">Spring循环依赖详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33592535/article/details/107526306\">Spring循环依赖之解决办法</a></li>\n<li><a href=\"https://blog.csdn.net/m0_43448868/article/details/113578628\">Spring循环依赖之三级缓存入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44181671/article/details/108630950\">Spring循环依赖之三级缓存详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35549286/article/details/128198964\">Spring循环依赖之三级缓存中第三级缓存的作用</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16607641/article/details/115212272\">Spring循环依赖之三级缓存中第二级缓存的作用</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41907991/article/details/105123387\">Spring循环依赖之ObjectFactory</a></li>\n</ul>\n</blockquote>\n<h5 id=\"循环依赖和注入方式\"><a href=\"#循环依赖和注入方式\" class=\"headerlink\" title=\"循环依赖和注入方式\"></a>循环依赖和注入方式</h5><ul>\n<li><code>单例bean</code>时<code>字段注入</code>和<code>setter注入</code>可以通过三级缓存解决循环依赖</li>\n<li><code>单例bean</code>时<code>构造器注入</code>不能解决循环依赖，因为通过三级缓存提前暴露时需要先构造完成</li>\n<li><code>非单例bean</code>时任何注入方式都不能解决循环依赖，因为非单例bean不会进行缓存</li>\n</ul>\n<blockquote>\n<p>ps： <code>构造器注入</code> 可以改成 <code>setter注入</code> 或者 <code>字段注入</code> 或者使用 <code>@Lazy延迟加载</code></p>\n</blockquote>\n<h5 id=\"循环依赖和三级缓存\"><a href=\"#循环依赖和三级缓存\" class=\"headerlink\" title=\"循环依赖和三级缓存\"></a>循环依赖和三级缓存</h5><ul>\n<li>第三级缓存：存放已<code>实例化</code>的bean</li>\n<li>第二级缓存：存放已<code>实例化</code>且已<code>提前代理</code>过的bean，bean被依赖注入后会放入二级缓存</li>\n<li>第一级缓存：存放已<code>初始化</code>的bean，bean初始化完成后会放入一级缓存</li>\n</ul>\n<blockquote>\n<p>ps： <code>第三级缓存</code> 的作用是 <code>提前暴露</code> 已 <code>实例化</code> 但还 <code>未代理过</code> 的对象供其他对象引用<br>ps： <code>第二级缓存</code> 的作用是 <code>循环依赖</code> 注入时对 <code>第三级缓存</code> 里的对象进行 <code>提前代理</code> 并放入 <code>第二级缓存</code></p>\n</blockquote>\n<h3 id=\"Bean\"><a href=\"#Bean\" class=\"headerlink\" title=\"Bean\"></a>Bean</h3><p>什么是Bean：Bean指的是那些被IoC容器所管理的对象</p>\n<h4 id=\"bean的作用域\"><a href=\"#bean的作用域\" class=\"headerlink\" title=\"bean的作用域\"></a>bean的作用域</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/114646865\">bean的作用域详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>singleton：单例模式，全局只有一个</li>\n<li>prototype：原型模式，每次使用时都创建一个新的Bean实例</li>\n<li>request：每个请求一个，Web应用中有效</li>\n<li>session：每个会话一个，Web应用中有效</li>\n<li>globalsession：类似session，只有对portlet才有意义</li>\n</ul>\n<blockquote>\n<p>ps：requestScope的bean是基于ThreadLocal实现的<br>ps：sessionScope的bean是基于sessionId和Map实现的</p>\n</blockquote>\n<h4 id=\"bean的线程安全\"><a href=\"#bean的线程安全\" class=\"headerlink\" title=\"bean的线程安全\"></a>bean的线程安全</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mqq2502513332/article/details/124343634\">bean的线程安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/xylitolz/article/details/123225348\">bean的线程安全详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"bean的生命周期\"><a href=\"#bean的生命周期\" class=\"headerlink\" title=\"bean的生命周期\"></a>bean的生命周期</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46378271/article/details/124485362\">bean的生命周期入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32780741/article/details/106317438\">bean的生命周期进阶</a></li>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/118500805\">bean的生命周期详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20021569/article/details/109178816\">bean的生命周期图解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38526573/article/details/88086752\">BeanPostProcessor入门</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/78595558\">BeanPostProcessor进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44906791/article/details/131230508\">BeanPostProcessor详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_25215821/article/details/106480780\">BeanPostProcessor原理</a></li>\n<li><a href=\"https://blog.csdn.net/dreamstar613/article/details/89036447\">XXXAware接口和XXXCapable接口</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42213903/article/details/100539595\">XXXAware接口入门</a></li>\n<li><a href=\"https://blog.csdn.net/Bronze5/article/details/105902892\">XXXAware接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43050077/article/details/101350793\">bean实例化之有参构造与无参构造</a></li>\n<li><a href=\"https://blog.csdn.net/xurk0922/article/details/108036810\">@PostConstruct、InitializingBean.afterPropertiesSet和init-method的执行顺序</a></li>\n<li><a href=\"https://blog.csdn.net/nrsc272420199/article/details/103226662\">@PreDestroy、DisposableBean.destory和destory-method的执行顺序</a></li>\n</ul>\n</blockquote>\n<h5 id=\"bean的生命周期概览\"><a href=\"#bean的生命周期概览\" class=\"headerlink\" title=\"bean的生命周期概览\"></a>bean的生命周期概览</h5><ol>\n<li>bean实例化</li>\n<li>bean依赖注入</li>\n<li>bean属性填充</li>\n<li>bean初始化</li>\n<li>bean使用</li>\n<li>bean销毁</li>\n</ol>\n<h5 id=\"bean的生命周期详述\"><a href=\"#bean的生命周期详述\" class=\"headerlink\" title=\"bean的生命周期详述\"></a>bean的生命周期详述</h5><ol>\n<li>instantiateBean：bean实例化</li>\n<li>injectBean：bean依赖注入</li>\n<li>populateBean：bean属性填充</li>\n</ol>\n<ul>\n<li>调用BeanNameAware.setBeanName</li>\n<li>调用BeanFactoryAware.setBeanFactory</li>\n<li>调用ApplicationContextAware.setApplicationContext</li>\n</ul>\n<ol start=\"4\">\n<li>initializeBean：bean初始化</li>\n</ol>\n<ul>\n<li>调用BeanPostProcessor.postProcessBeforeInitialization</li>\n<li>调用@PostConstruct注解标注的方法</li>\n<li>调用InitializingBean.afterPropertiesSet</li>\n<li>调用bean的init-method</li>\n<li>调用BeanPostProcessor.postProcessAfterInitialization</li>\n</ul>\n<ol start=\"5\">\n<li>useBean：bean使用</li>\n<li>destoryBean：bean销毁</li>\n</ol>\n<ul>\n<li>调用@PreDestroy注解标注的方法</li>\n<li>调用DisposableBean.destory</li>\n<li>调用bean的destory-method</li>\n</ul>\n<h3 id=\"Factory\"><a href=\"#Factory\" class=\"headerlink\" title=\"Factory\"></a>Factory</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/v123411739/article/details/99308642\">IOC容器初始化流程入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_17864929/article/details/114282602\">IOC容器初始化流程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41868309/article/details/118340208\">IOC容器初始化流程详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38937840/article/details/108306406\">BeanFactory入门</a></li>\n<li><a href=\"https://blog.csdn.net/ly_os/article/details/113392702\">BeanFactory详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42195284/article/details/109339203\">FactoryBean入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43935927/article/details/110508417\">FactoryBean详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31564573/article/details/108093903\">ApplicationContext入门</a></li>\n<li><a href=\"https://blog.csdn.net/hbtj_1216/article/details/72844916\">ApplicationContext详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43477531/article/details/121255685\">BeanFactory和FactoryBean的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45723046/article/details/124546156\">BeanFactory和FactoryBean的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/pythias_/article/details/82752881\">BeanFactory和ApplicationContext的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20757489/article/details/88543252\">BeanFactory和ApplicationContext的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37561309/article/details/108507196\">BeanDefinition入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/108614354\">BeanDefinition详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><h2 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46468731/article/details/126133683\">AOP入门</a></li>\n<li><a href=\"https://blog.csdn.net/Cr1556648487/article/details/126777903\">AOP进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58761900/article/details/128999827\">AOP详解</a></li>\n<li><a href=\"https://blog.csdn.net/hosaos/article/details/102931887\">AOP原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20597727/article/details/84868035\">AOP实现案例之@Transactional和AOP的关系</a></li>\n<li><a href=\"https://blog.csdn.net/wang489687009/article/details/121261406\">AOP实现案例之@Async和AOP的关系</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Scene\"><a href=\"#Scene\" class=\"headerlink\" title=\"Scene\"></a>Scene</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010452388/article/details/80868392\">AOP使用场景详解</a></li>\n</ul>\n</blockquote>\n<p>AOP的使用场景</p>\n<ul>\n<li>权限校验</li>\n<li>日志记录</li>\n<li>耗时统计</li>\n<li>异常处理</li>\n<li>事务管理</li>\n<li>缓存管理</li>\n<li>重试管理</li>\n</ul>\n<h3 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013190145/article/details/109171013\">AOP核心概念入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47742952/article/details/106809936\">AOP核心概念进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41907991/article/details/105500421\">AOP核心概念详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43793874/article/details/124753521\">AOP核心概念之切点语法入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/121780649\">AOP核心概念之切点语法详解</a></li>\n<li><a href=\"https://blog.csdn.net/wang489687009/article/details/121099165\">AOP核心概念之Advisor、Advised是什么</a></li>\n</ul>\n</blockquote>\n<p>AOP的核心概念</p>\n<ul>\n<li>JoinPoint（连接点）：任何可以切入的地方（比如java对象中的字段和方法）</li>\n<li>Pointcut（切点）：实际需要切入的地方的匹配规则</li>\n<li>Advice（通知）：切入后要做的事情</li>\n<li>Aspect（切面）：切点和通知的组合</li>\n<li>Target（目标）：被代理的对象</li>\n<li>Proxy（代理）：代理后的对象</li>\n<li>Weaving（织入）：将通知添加到切点上的实现过程</li>\n<li>Introduction（引入）：特殊的通知（可以为目标添加一些额外的属性和方法）</li>\n</ul>\n<h3 id=\"Ordering-1\"><a href=\"#Ordering-1\" class=\"headerlink\" title=\"Ordering\"></a>Ordering</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/JemeryShen/article/details/124767665\">AOP通知顺序详解</a></li>\n</ul>\n</blockquote>\n<p>AOP的通知顺序（Spring5）</p>\n<ol>\n<li>@AroundBefore</li>\n<li>@Before</li>\n<li>doSomething</li>\n<li>@AfterReturning | @AfterThrowing</li>\n<li>@After</li>\n<li>@AroundAfter</li>\n</ol>\n<h2 id=\"Advanced-1\"><a href=\"#Advanced-1\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Invalid\"><a href=\"#Invalid\" class=\"headerlink\" title=\"Invalid\"></a>Invalid</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_59244784/article/details/126795072\">AOP失效的场景入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43790613/article/details/113091496\">AOP失效的场景详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013151053/article/details/106124048\">AOP同类方法调用失效解决方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014365523/article/details/119849844\">AOP同类方法调用失效解决方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hellozhxy/article/details/109753711\">AOP同类方法调用失效解决方案详解</a></li>\n</ul>\n</blockquote>\n<p>AOP的失效场景</p>\n<ul>\n<li>代理的类没有被Spring管理</li>\n<li>代理的类不能被继承（final类）</li>\n<li>代理的方法不能被重写（private方法、final方法和static方法）</li>\n<li>代理的方法是同类内部调用</li>\n<li>代理的对象是用户手动创建的</li>\n</ul>\n<blockquote>\n<p>ps：AOP通过CGLIB动态代理时不能代理 <code>不能继承的类</code> 和 <code>不能重写的方法</code> ，因为是通过生成子类来实现的</p>\n</blockquote>\n<h4 id=\"AOP同类方法调用时失效的原因分析\"><a href=\"#AOP同类方法调用时失效的原因分析\" class=\"headerlink\" title=\"AOP同类方法调用时失效的原因分析\"></a>AOP同类方法调用时失效的原因分析</h4><p>因为AOP代理是对方法的调用进行代理，不能修改方法内部的语句调用（基于this对象）</p>\n<h4 id=\"AOP同类方法调用时失效的解决方案\"><a href=\"#AOP同类方法调用时失效的解决方案\" class=\"headerlink\" title=\"AOP同类方法调用时失效的解决方案\"></a>AOP同类方法调用时失效的解决方案</h4><ul>\n<li>通过AopContext.currentProxy代替this调用从而可以使用代理对象</li>\n<li>通过ApplicationContext.getBean代替this调用从而可以使用代理对象</li>\n<li>通过在A类中注入A类型的字段a并使用对象a代替this调用从而可以使用代理对象</li>\n</ul>\n<blockquote>\n<p>ps：推荐使用ApplicationContext这种方式<br>ps：AopContext.currentProxy需要添加 <code>@EnableAspectJAutoProxy(exposeProxy=true)</code> 注解</p>\n</blockquote>\n<h1 id=\"Proxy\"><a href=\"#Proxy\" class=\"headerlink\" title=\"Proxy\"></a>Proxy</h1><h2 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44641846/article/details/118251508\">Spring代理入门</a></li>\n<li><a href=\"https://blog.csdn.net/cckevincyh/article/details/54962920\">Spring代理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_27414099/article/details/104440425\">Spring代理详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Advanced-2\"><a href=\"#Advanced-2\" class=\"headerlink\" title=\"Advanced\"></a>Advanced</h2><h3 id=\"Spring代理的实现方式\"><a href=\"#Spring代理的实现方式\" class=\"headerlink\" title=\"Spring代理的实现方式\"></a>Spring代理的实现方式</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yellow__star/article/details/102510545\">Spring代理之JDK代理、CGLIB、AspectJ区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/a837199685/article/details/68930987\">Spring代理之JDK代理、CGLIB、AspectJ区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ory001/article/details/123465560\">Spring代理之JDK代理、CGLIB、AspectJ区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/starryninglong/article/details/89737419\">Spring代理之CGLIB的接口代理和非接口代理的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq798280904/article/details/130078011\">Spring代理之SpringAOP和AspectJ的关系</a></li>\n<li><a href=\"https://blog.csdn.net/luofen521/article/details/121335386\">Spring代理之动态代理对象的生成时机入门</a></li>\n<li><a href=\"https://blog.csdn.net/gongsenlin341/article/details/111240114\">Spring代理之动态代理对象的生成时机详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>静态代理：编译时生成代理类<ul>\n<li>AspectJ：可以代理所有类</li>\n</ul>\n</li>\n<li>动态代理：运行时生成代理类<ul>\n<li>JDK动态代理：只能对基于接口的类进行代理，不能对没有基于接口的类进行代理</li>\n<li>CGLIB动态代理：可以代理所有类</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"Spring代理的实现案例\"><a href=\"#Spring代理的实现案例\" class=\"headerlink\" title=\"Spring代理的实现案例\"></a>Spring代理的实现案例</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wang489687009/article/details/121214357\">Spring代理之@Transactional代理实现详解</a></li>\n<li><a href=\"https://blog.csdn.net/wang489687009/article/details/121261406\">Spring代理之@Async代理实现详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Spring代理的控制参数\"><a href=\"#Spring代理的控制参数\" class=\"headerlink\" title=\"Spring代理的控制参数\"></a>Spring代理的控制参数</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/108238121\">Spring代理之@Configuration的属性proxyBeanMethods详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22078107/article/details/85882211\">Spring代理之Aop的属性proxyTargetClass详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44941128/article/details/121959259\">Spring代理之@EnableAspectJAutoProxy的exposeProxy属性</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45089578/article/details/117259703\">Spring代理之@EnableAspectJAutoProxy的属性proxyTargetClass详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_64491107/article/details/124389042\">SpringBoot代理之@EnableAspectJAutoProxy的属性proxyTargetClass不生效详解</a></li>\n</ul>\n</blockquote>\n<p>@Configuration的proxyBeanMethods：是否对生成bean的方法进行代理，默认为true<br>@EnableAspectJAutoProxy的proxyTargetClass：是否强制使用CGLIB进行代理，默认为false</p>\n<blockquote>\n<p>ps：SpringBoot中的 <code>spring.aop.proxy-target-class</code> 配置为true（默认为true）时优先级比注解里的proxyTargetClass属性高<br>ps：事务和异步是通过AOP实现的，所以@EnableTransactionManagement和@EnableAsync也有proxyTargetClass属性，在SpringBoot中也受 <code>spring.aop.proxy-target-class</code> 配置控制</p>\n</blockquote>\n<h1 id=\"SpringBoot\"><a href=\"#SpringBoot\" class=\"headerlink\" title=\"SpringBoot\"></a>SpringBoot</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/java_zdc/article/details/116938896\">SpringBoot和Spring的区别总结</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29229567/article/details/89209719\">SpringBoot和Spring的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45490704/article/details/105876876\">SpringBoot和Spring的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/YR_112233/article/details/123721751\">SpringBoot新特性之起步依赖和自动配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43539599/article/details/100173227\">SpringBoot新特性之起步依赖和自动配置进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_62327332/article/details/129961652\">SpringBoot新特性之起步依赖和自动配置详解</a></li>\n<li><a href=\"https://blog.csdn.net/21aspnet/article/details/104345464\">SpringBoot新特性之条件配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/108443345\">SpringBoot新特性之条件配置进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lizhiyuan_eagle/article/details/91583834\">SpringBoot新特性之条件配置详解</a></li>\n</ul>\n</blockquote>\n<p>SpringBoot新增主要特性</p>\n<ul>\n<li>起步依赖：简化了pom文件中依赖的配置（利用maven的依赖传递通过Starter引入相关的依赖）</li>\n<li>自动配置：简化了bean对象的声明和注入（基于AutoConfigurationImportSelector实现）</li>\n<li>条件配置：@Condition</li>\n</ul>\n<h2 id=\"SpringBootApplication\"><a href=\"#SpringBootApplication\" class=\"headerlink\" title=\"SpringBootApplication\"></a>SpringBootApplication</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46658171/article/details/119808608\">@SpringBootApplication详解</a></li>\n</ul>\n</blockquote>\n<p>@SpringBootApplication由以下三个注解组成</p>\n<ul>\n<li>@SpringBootConfiguration：被@Configuration注解所标注，和@Configuration没区别</li>\n<li>@EnableAutoConfiguration：自动和有条件的加载工程里面的<code>依赖的</code>组件和配置</li>\n<li>@ComponentScan：加载自己工程里面的<code>自己的</code>组件和配置</li>\n</ul>\n<blockquote>\n<p>ps：@Configuration是不会被@EnableAutoConfiguration和@ComponentScan重复加载，因为@EnableAutoConfiguration和@ComponentScan的加载范围不同</p>\n</blockquote>\n<h2 id=\"SpringBootConfiguration\"><a href=\"#SpringBootConfiguration\" class=\"headerlink\" title=\"SpringBootConfiguration\"></a>SpringBootConfiguration</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44045828/article/details/117983882\">@SpringBootConfiguration详解</a></li>\n<li><a href=\"https://blog.csdn.net/liangsheng_g/article/details/109556746\">@EnableAutoConfiguration详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li><code>@EnableAutoConfiguration</code>通过<code>@Import(AutoConfigurationImportSelector.class)</code>自动和有条件的加载所有依赖包里的配置</li>\n<li><code>AutoConfigurationImportSelector</code>通过<code>SpringFactoriesLoader.loadFactoryNames</code>加载<code>META-INF/spring.factories</code>资源文件里面指定的配置类</li>\n<li><code>SpringFactoriesLoader.loadFactoryNames</code>通过<code>ClassLoader.getResources</code>获取classpath中<code>META-INF/spring.factories</code>资源文件</li>\n</ul>\n<h3 id=\"AutoConfiguration\"><a href=\"#AutoConfiguration\" class=\"headerlink\" title=\"AutoConfiguration\"></a>AutoConfiguration</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kerongao/article/details/109593794\">SpringBoot自动配置机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33591903/article/details/119843446\">SpringBoot自动配置机制原理</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42119730/article/details/127522419\">SpringBoot自动配置机制流程</a></li>\n<li><a href=\"https://blog.csdn.net/lizhiyuan_eagle/article/details/91583834\">SpringBoot自动配置机制之@Conditional详解</a></li>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/108443345\">SpringBoot自动配置机制之@Conditional原理</a></li>\n<li><a href=\"https://blog.csdn.net/ynchyong/article/details/119384167\">SpringBoot自动配置机制之AutoConfiguration和@Configuration的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43888891/article/details/127473290\">SpringBoot自动配置机制之@AutoConfiguration详解</a></li>\n<li><a href=\"https://blog.csdn.net/Lambert_shikui/article/details/109095602\">SpringBoot自动配置机制之Selector机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/Smallc0de/article/details/108619562\">SpringBoot自动配置机制之Selector机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/ilovewqf/article/details/93200857\">SpringBoot自动配置机制之Registrar机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/Smallc0de/article/details/108647079\">SpringBoot自动配置机制之Registrar机制详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SpringBootStarter\"><a href=\"#SpringBootStarter\" class=\"headerlink\" title=\"SpringBootStarter\"></a>SpringBootStarter</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/woshilijiuyi/article/details/82792601\">SpringBootStarter入门</a></li>\n<li><a href=\"https://blog.csdn.net/dupeng0811/article/details/89876444\">SpringBootStarter详解</a></li>\n</ul>\n</blockquote>\n<p>SpringBootStarter是通过自动配置机制实现自动加载的， 应用启动时会通过 <code>@SpringBootApplication</code> 里的 <code>@EnableAutoConfiguration</code> 自动和有条件的加载所有依赖包里的组件和配置</p>\n<h2 id=\"SpringBootActuator\"><a href=\"#SpringBootActuator\" class=\"headerlink\" title=\"SpringBootActuator\"></a>SpringBootActuator</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014163312/article/details/129151837\">SpringBootActuator入门</a></li>\n<li><a href=\"https://blog.csdn.net/changqing5818/article/details/128806317\">SpringBootActuator详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SpringBootAdmin\"><a href=\"#SpringBootAdmin\" class=\"headerlink\" title=\"SpringBootAdmin\"></a>SpringBootAdmin</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ailifang/article/details/116399701\">SpringBootAdmin入门</a></li>\n<li><a href=\"https://blog.csdn.net/zouliping123456/article/details/121977792\">SpringBootAdmin详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Configuration\"><a href=\"#Configuration\" class=\"headerlink\" title=\"Configuration\"></a>Configuration</h1><h2 id=\"Configuration（File）\"><a href=\"#Configuration（File）\" class=\"headerlink\" title=\"Configuration（File）\"></a>Configuration（File）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35571554/article/details/82453684\">Spring配置文件详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27151401/article/details/115619803\">Spring配置文件加载</a></li>\n<li><a href=\"https://www.cnblogs.com/harrychinese/p/SpringBoot_application_properties_and_document.html\">Spring配置文件属性</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/as619649246/article/details/122874833\">web.xml入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_53222768/article/details/120298489\">web.xml进阶</a></li>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/124318173\">web.xml详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Spring-1\"><a href=\"#Spring-1\" class=\"headerlink\" title=\"Spring\"></a>Spring</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChineseSoftware/article/details/118406963\">spring-mvc.xml与applicationContext.xml的区别</a></li>\n<li><a href=\"https://blog.csdn.net/u013103281/article/details/48318475\">beans.xml和applicationContext.xml的区别</a></li>\n<li><a href=\"https://blog.csdn.net/zxcbnm7089/article/details/105677523\">applicationContext.xml详解</a></li>\n<li><a href=\"https://blog.csdn.net/jk418756/article/details/90643613\">spring-mvc.xml详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43584835/article/details/106539772\">beans.xml详解</a></li>\n<li><a href=\"https://blog.csdn.net/ShaGuaWoXiNi/article/details/109243525\">annotation-driven、annotation-config、compont-scan详解</a></li>\n<li><a href=\"https://blog.csdn.net/fox_bert/article/details/80793030\">annotation-driven、annotation-config、compont-scan区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/115436325\">mvc:annotation-driven详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39668099/article/details/89675960\">context:annotation-config详解</a></li>\n<li><a href=\"https://blog.csdn.net/qwe5810658/article/details/74343228\">context:component-scan详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SpringBoot-1\"><a href=\"#SpringBoot-1\" class=\"headerlink\" title=\"SpringBoot\"></a>SpringBoot</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yhahaha_/article/details/88568121\">application.properties入门</a></li>\n<li><a href=\"https://blog.csdn.net/shiliang97/article/details/114666443\">application.properties详解</a></li>\n<li><a href=\"https://blog.csdn.net/hellojoy/article/details/104578888\">application.yml入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41694906/article/details/106568854\">application.yml详解</a></li>\n<li><a href=\"https://blog.csdn.net/maqingbin8888/article/details/105253086\">properties文件语法入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/123400800\">properties文件语法详解</a></li>\n<li><a href=\"https://blog.csdn.net/Yushiba972/article/details/124636195\">yaml文件语法入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43340943/article/details/105953673\">yaml文件语法详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Configuration（Import）\"><a href=\"#Configuration（Import）\" class=\"headerlink\" title=\"Configuration（Import）\"></a>Configuration（Import）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/104152617\">Spring引入多个xml配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33446857/article/details/79492965\">Spring引入多个properties配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/98088820\">@Import和@ImportResource和@PropertySource的区别</a></li>\n<li><a href=\"https://blog.csdn.net/u013887008/article/details/118014749\">@Import和@ImportResource的区别</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/90636649\">@ImportResource和@PropertySource的区别</a></li>\n<li><a href=\"https://blog.csdn.net/panchao888888/article/details/82882279\">@Import详解</a></li>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/110269343\">@Import引入同一个类会重复创建吗</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39900031/article/details/109726889\">@ImportResource详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40837310/article/details/106587158\">@PropertySource入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/81005170\">@PropertySource详解</a></li>\n<li><a href=\"https://blog.csdn.net/niugang0920/article/details/115611553\">@PropertySource加载yaml文件</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>@Import：引入java配置类</li>\n<li>@ImportResource：引入xml配置文件</li>\n<li>@PropertySource：引入properties和xml配置文件</li>\n</ul>\n<blockquote>\n<p>ps：@PropertySource引入yaml配置文件需要自己实现</p>\n</blockquote>\n<h2 id=\"Configuration（Order）\"><a href=\"#Configuration（Order）\" class=\"headerlink\" title=\"Configuration（Order）\"></a>Configuration（Order）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_34247299/article/details/92012821\">Spring中多个xml配置文件的顺序</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/116493944\">Spring中多个properties配置文件的顺序</a></li>\n<li><a href=\"https://blog.csdn.net/zxd1435513775/article/details/103773404\">SpringBoot中配置文件的优先级入门</a></li>\n<li><a href=\"https://blog.csdn.net/JokerLJG/article/details/120169819\">SpringBoot中配置文件的优先级进阶</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/84401629\">SpringBoot中配置文件的优先级详解</a></li>\n</ul>\n</blockquote>\n<p>多个配置冲突的解决方案</p>\n<ul>\n<li>合并多个文件<ul>\n<li>重复的话则使用最开始的配置项并忽略后面的配置项</li>\n<li>重复的话则后面的配置项覆盖前面的配置项</li>\n</ul>\n</li>\n<li>使用单个文件<ul>\n<li>使用最先找到的文件</li>\n<li>使用最后找到的文件</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：xml配置文件和properties配置文件都支持多个文件<br>ps：xml配置文件配置冲突时的解决方案是使用最开始的配置项并忽略后面的配置项<br>ps：properties配置文件配置冲突时的解决方案是后面的配置项覆盖前面的配置项</p>\n</blockquote>\n<h2 id=\"Configuration（Usage）\"><a href=\"#Configuration（Usage）\" class=\"headerlink\" title=\"Configuration（Usage）\"></a>Configuration（Usage）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq1309664161/article/details/119710994\">Spring配置类之Environment详解</a></li>\n<li><a href=\"https://blog.csdn.net/woheniccc/article/details/79804600\">@Value入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangooo/article/details/114018690\">@Value进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34272760/article/details/121237460\">@Value详解</a></li>\n<li><a href=\"https://blog.csdn.net/skh2015java/article/details/120141409\">@ConfigurationProperties详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40837310/article/details/105960560\">@Value和@ConfigurationProperties的区别</a></li>\n<li><a href=\"https://blog.csdn.net/wuqinduo/article/details/103010696\">@Value和@ConfigurationProperties与@PropertySource的关系</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>@Value：注入单个配置</li>\n<li>@ConfigurationProperties：注入多个配置</li>\n<li>@PropertySource：指定配置文件来源</li>\n</ul>\n<h2 id=\"Configuration（Enable）\"><a href=\"#Configuration（Enable）\" class=\"headerlink\" title=\"Configuration（Enable）\"></a>Configuration（Enable）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feng_xiaoshi/article/details/103825162\">EnableXXX详解</a></li>\n<li><a href=\"https://blog.csdn.net/daguanjia11/article/details/102882801\">EnableXXX原理</a></li>\n<li><a href=\"https://blog.csdn.net/zxc123e/article/details/80222967\">@EnableAutoConfiguration详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38566465/article/details/106256592\">@EnableAutoConfiguration原理</a></li>\n<li><a href=\"https://blog.csdn.net/hd243608836/article/details/123056513\">@EnableConfigurationProperties和@ConfigurationProperties详解</a></li>\n<li><a href=\"https://blog.csdn.net/x763795151/article/details/85252540\">@EnableWebMvc详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013720069/article/details/112025020\">@EnableAspectJAutoProxy详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42478982/article/details/123251494\">@EnableTransactionManagement和@Transactional详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24598601/article/details/89295515\">@EnableAsync和@Async详解</a></li>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/109399280\">@EnableScheduling和@Scheduled详解</a></li>\n<li><a href=\"https://blog.csdn.net/lifewinnerforever/article/details/103010889\">@EnableRetry和@Retryable详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43849277/article/details/120058804\">@EnableCaching与@Cacheable详解</a></li>\n</ul>\n</blockquote>\n<p>EnableXXX的作用：启用某项特性和引入（@Import）相关的配置类使得相关的注解生效</p>\n<h2 id=\"Configuration（Function）\"><a href=\"#Configuration（Function）\" class=\"headerlink\" title=\"Configuration（Function）\"></a>Configuration（Function）</h2><h3 id=\"Configuration（MVC）\"><a href=\"#Configuration（MVC）\" class=\"headerlink\" title=\"Configuration（MVC）\"></a>Configuration（MVC）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangpower1993/article/details/89016503\">WebMvcConfigurer详解</a></li>\n<li><a href=\"https://blog.csdn.net/wujiaqi0921/article/details/78324722\">WebMvcConfigurerAdapter详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45612794/article/details/102551592\">WebMvcConfigurationSupport详解</a></li>\n<li><a href=\"https://blog.csdn.net/lvyuanj/article/details/108554170\">WebMvcConfigurer和WebMvcConfigurerAdapter、WebMvcConfigurationSupport的区别</a></li>\n<li><a href=\"https://blog.csdn.net/sdname/article/details/109718768\">WebMvcConfigurer和WebMvcConfigurerAdapter、WebMvcConfigurationSupport之选择</a></li>\n<li><a href=\"https://blog.csdn.net/alex_xfboy/article/details/88724863\">WebMvcConfigurationSupport问题之继承导致WebMvcAutoConfiguration自动配置失效</a></li>\n<li><a href=\"https://blog.csdn.net/zxc123e/article/details/84636521\">@EnableWebMvc加和不加的区别</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/87357865\">@EnableWebMvc原理</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>WebMvcConfigurer：WebMvc配置接口（提供了接口）</li>\n<li>WebMvcConfigurerAdapter：WebMvc配置抽象类（实现了少量的方法）</li>\n<li>WebMvcConfigurationSupport：WebMvc配置默认实现类（实现了大量的方法）</li>\n</ul>\n<blockquote>\n<p>ps：由于java8中的接口支持默认方法了，所以WebMvcConfigurerAdapter已经不需要了<br>ps：SpringBoot中不用显示添加@EnableWebMvc，WebMvcAutoConfiguration会实现相同的效果</p>\n</blockquote>\n<h3 id=\"Configuration（Aop）\"><a href=\"#Configuration（Aop）\" class=\"headerlink\" title=\"Configuration（Aop）\"></a>Configuration（Aop）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/band_mmbx/article/details/126851301\">SpringBoot中不用显示添加@EnableAspectJAutoProxy</a></li>\n<li><a href=\"https://blog.csdn.net/zhoushimiao1990/article/details/89853368\">@EnableAspectJAutoProxy原理</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：SpringBoot中不用显示添加@EnableAspectJAutoProxy，AopAutoConfiguration会实现相同的效果</p>\n</blockquote>\n<h3 id=\"Configuration（Transaction）\"><a href=\"#Configuration（Transaction）\" class=\"headerlink\" title=\"Configuration（Transaction）\"></a>Configuration（Transaction）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_38106322/article/details/109966682\">SpringBoot中不用显示添加@EnableTransactionManagement</a></li>\n<li><a href=\"https://blog.csdn.net/avengerEug/article/details/118584174\">@EnableTransactionManagement原理</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：SpringBoot中不用显示添加@EnableTransactionManagement，TransactionAutoConfiguration会实现相同的效果</p>\n</blockquote>\n<h3 id=\"Configuration（Async）\"><a href=\"#Configuration（Async）\" class=\"headerlink\" title=\"Configuration（Async）\"></a>Configuration（Async）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37645861/article/details/116654469\">AsyncConfigurer详解</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/95802825\">@EnableAsync原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Configuration（Schedule）\"><a href=\"#Configuration（Schedule）\" class=\"headerlink\" title=\"Configuration（Schedule）\"></a>Configuration（Schedule）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41144667/article/details/103937193\">SchedulingConfigurer详解</a></li>\n<li><a href=\"https://blog.csdn.net/daliucheng/article/details/119884713\">@EnableScheduling原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Configuration（Retry）\"><a href=\"#Configuration（Retry）\" class=\"headerlink\" title=\"Configuration（Retry）\"></a>Configuration（Retry）</h3><h3 id=\"Configuration（Cache）\"><a href=\"#Configuration（Cache）\" class=\"headerlink\" title=\"Configuration（Cache）\"></a>Configuration（Cache）</h3><h2 id=\"Configuration（Profile）\"><a href=\"#Configuration（Profile）\" class=\"headerlink\" title=\"Configuration（Profile）\"></a>Configuration（Profile）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shusheng0007/article/details/120417470\">Spring的Profile详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29235677/article/details/118528996\">Maven的Profile详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36882793/article/details/106440723\">Spring源码分析：全集整理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Design\"><a href=\"#Design\" class=\"headerlink\" title=\"Design\"></a>Design</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chao821/article/details/92400186\">Spring设计模式：常用的设计模式</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>单例模式</li>\n<li>原型模式</li>\n<li>工厂模式</li>\n<li>建造者模式</li>\n<li>代理模式</li>\n<li>适配模式</li>\n<li>模板模式</li>\n<li>策略模式</li>\n<li>观察者模式</li>\n</ul>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"LaunchRunner\"><a href=\"#LaunchRunner\" class=\"headerlink\" title=\"LaunchRunner\"></a>LaunchRunner</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chenlixiao007/article/details/113881768\">Spring启动回调机制</a></li>\n</ul>\n</blockquote>\n<h2 id=\"StateMachine\"><a href=\"#StateMachine\" class=\"headerlink\" title=\"StateMachine\"></a>StateMachine</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xielinrui123/article/details/105376158\">Spring状态机入门</a></li>\n<li><a href=\"https://blog.csdn.net/im_hwp/article/details/120032616\">Spring状态机进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u012129558/article/details/90519577\">Spring状态机详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43847283/article/details/123806704\">Spring自带工具类</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104605207\">Spring Base64Utils详解</a></li>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104630050\">Spring DigestUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/wolfcode_cn/article/details/80660515\">Spring ReflectionUtils详解</a></li>\n<li><a href=\"https://blog.csdn.net/dengnanhua/article/details/106007779\">Spring ReflectionTestUtils详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-web","url":"/2017/07/01/lang/lang-1-java/senior/java-2-spring-web/","content":"<h1 id=\"MVC\"><a href=\"#MVC\" class=\"headerlink\" title=\"MVC\"></a>MVC</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46680603/article/details/121641895\">SpringMVC详解</a></li>\n</ul>\n</blockquote>\n<p>SpringWeb项目结构推荐</p>\n<ul>\n<li>controller</li>\n<li>service<ul>\n<li>service：业务相关主要类</li>\n<li>manager：业务相关辅助类（需要新建对象使用）</li>\n<li>helper：业务相关辅助类（不需要新建对象使用）</li>\n</ul>\n</li>\n<li>model<ul>\n<li>po（entity）：数据库表结构类</li>\n<li>dao（mapper or orm）：数据库单表表访问类</li>\n<li>dal（use multiple dao）：数据库多表访问层</li>\n</ul>\n</li>\n<li>view</li>\n<li>utils</li>\n</ul>\n<h2 id=\"请求流程描述\"><a href=\"#请求流程描述\" class=\"headerlink\" title=\"请求流程描述\"></a>请求流程描述</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/afoskosnv/article/details/120179447\">SpringMVC流程入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53601359/article/details/114460179\">SpringMVC流程详解</a></li>\n<li><a href=\"https://blog.csdn.net/glpghz/article/details/114116080\">ContextLoaderListener入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/120217613\">ContextLoaderListener详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45899013/article/details/106675837\">DispatcherServlet入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/115423861\">DispatcherServlet详解</a></li>\n<li><a href=\"https://blog.csdn.net/zxd1435513775/article/details/103000992\">HandlerMapping入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/115429186\">HandlerMapping详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38399962/article/details/85288660\">HandlerAdapter入门</a></li>\n<li><a href=\"https://blog.csdn.net/YaoXTao/article/details/126594779\">HandlerAdapter详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46081857/article/details/122082763\">HttpServletRequest和HttpServletResponse详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>web容器接收到请求后解析成Request对象</li>\n<li>web容器将所有请求交给DispatcherServlet处理</li>\n<li>DispatcherServlet通过HandlerMapping获取Handler</li>\n<li>通过相应的适配类HandlerAdapter调用Handler的处理方法处理请求并返回ModelAndView</li>\n<li>根据返回的ModelAndView选择一个适合的ViewResolver</li>\n<li>ViewResolver结合Model和View渲染视图</li>\n<li>将结果放到Response对象中返回给web容器</li>\n</ul>\n<h2 id=\"请求过滤拦截\"><a href=\"#请求过滤拦截\" class=\"headerlink\" title=\"请求过滤拦截\"></a>请求过滤拦截</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xinzhifu1/article/details/106356958\">Filter（过滤器）和Interceptor（拦截器）对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/LawssssCat/article/details/105249730\">Filter（过滤器）和Interceptor（拦截器）对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41788977/article/details/103610068\">Filter（过滤器）和Interceptor（拦截器）对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014496893/article/details/112286634\">Filter（过滤器）、Interceptor（拦截器）、AOP对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/fly910905/article/details/86537648\">Filter（过滤器）、Interceptor（拦截器）、AOP对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shang_0122/article/details/112061671\">Filter（过滤器）、Interceptor（拦截器）、AOP对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41132384/article/details/129090953\">Filter（过滤器）、Interceptor（拦截器）、Advice、AOP执行顺序</a></li>\n</ul>\n</blockquote>\n<p>执行顺序如下</p>\n<ul>\n<li>Filter（过滤器）</li>\n<li>Interceptor（拦截器）</li>\n<li>Advice</li>\n<li>Aop</li>\n</ul>\n<blockquote>\n<p>ps：Filter在IOC之前，所以Filter中不能使用IOC</p>\n</blockquote>\n<h3 id=\"Filter（过滤器）\"><a href=\"#Filter（过滤器）\" class=\"headerlink\" title=\"Filter（过滤器）\"></a>Filter（过滤器）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/121288762\">Filter入门</a></li>\n<li><a href=\"https://blog.csdn.net/ToBeABetterOne/article/details/79310250\">Filter详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34136709/article/details/106849386\">Filter注册</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/86029954\">FormContentFilter详解</a></li>\n<li><a href=\"https://blog.csdn.net/accept666/article/details/122611242\">CorsFilter详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35207086/article/details/120091221\">FilterRegistrationBean详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39368007/article/details/114065579\">FilterChain之职责链模式</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Interceptor（拦截器）\"><a href=\"#Interceptor（拦截器）\" class=\"headerlink\" title=\"Interceptor（拦截器）\"></a>Interceptor（拦截器）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Herishwater/article/details/103544342\">Interceptor入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/121242297\">Interceptor详解</a></li>\n<li><a href=\"https://blog.csdn.net/magic55574/article/details/110475311\">Interceptor注册</a></li>\n<li><a href=\"https://blog.csdn.net/Janson_Lin/article/details/120427840\">Interceptor之方法调用时机</a></li>\n<li><a href=\"https://blog.csdn.net/Dongguabai/article/details/81160361\">Interceptor之方法的handler参数</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Controller\"><a href=\"#Controller\" class=\"headerlink\" title=\"Controller\"></a>Controller</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43013511/article/details/123248435\">RestController和Controller的区别</a></li>\n<li><a href=\"https://blog.csdn.net/xing930408/article/details/108623138\">@RestControllerAdvice与@ControllerAdvice的区别</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/100193873\">HttpEntity详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Request\"><a href=\"#Request\" class=\"headerlink\" title=\"Request\"></a>Request</h2><h3 id=\"Route\"><a href=\"#Route\" class=\"headerlink\" title=\"Route\"></a>Route</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pengkai411429850/article/details/51798499\">SpringMVC之路径匹配规则</a></li>\n<li><a href=\"https://blog.csdn.net/rocling/article/details/82903574\">SpringMVC之映射之@RequestMapping详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhangvalue/article/details/102778676\">SpringMVC之映射之@RequestMapping和@GetMapping的区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45899013/article/details/106928429\">SpringMVC之请求转发（forward）和重定向（redirect）详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39813000/article/details/104555657\">SpringMVC之请求转发（forward）和重定向（redirect）区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Param\"><a href=\"#Param\" class=\"headerlink\" title=\"Param\"></a>Param</h3><h4 id=\"Pass\"><a href=\"#Pass\" class=\"headerlink\" title=\"Pass\"></a>Pass</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40734247/article/details/110151421\">SpringMVC之参数传递方式详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46193073/article/details/104257123\">SpringMVC之参数传递类型详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"MIME\"><a href=\"#MIME\" class=\"headerlink\" title=\"MIME\"></a>MIME</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Keith003/article/details/82181964\">SpringMVC之参数传递方式之MIME</a></li>\n<li><a href=\"https://blog.csdn.net/u013258447/article/details/10110773\">SpringMVC之参数传递方式之MIME和Post请求</a></li>\n<li><a href=\"https://blog.csdn.net/Her_smile/article/detail%E4%B9%8Bs92794691\">SpringMVC之参数传递方式之MIME的x-www-form-urlencoded</a></li>\n<li><a href=\"https://blog.csdn.net/dreamerrrrrr/article/detail%E4%B9%8Bs111146763\">SpringMVC之参数传递方式之MIME的multipart&#x2F;form-data</a></li>\n<li><a href=\"https://blog.csdn.net/genius_999999/article/details/104621252\">SpringMVC之参数传递方式之MIME的multipart&#x2F;form-data与x-www-form-urlencoded区别</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43883917/article/details/113097624\">SpringMVC之参数传递类型入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012841209/article/details/72847633\">SpringMVC之参数传递类型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34390105/article/details/92386683\">SpringMVC之参数传递类型详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38749555/article/details/102642%E4%B9%8B59\">SpringMVC之参数传递之基本类型和对象类型混用</a></li>\n<li><a href=\"https://blog.csdn.net/lutinghuan/article/details/46820023\">SpringMVC之参数传递之绑定多个对象</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Fetch\"><a href=\"#Fetch\" class=\"headerlink\" title=\"Fetch\"></a>Fetch</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/athga/article/details/106200416\">SpringMVC之参数获取来源入门</a></li>\n<li><a href=\"https://blog.csdn.net/ybsgsg/article/details/119533049\">SpringMVC之参数获取来源详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/121175080\">SpringMVC之参数使用方式入门</a></li>\n<li><a href=\"https://blog.csdn.net/youanyyou/article/details/106774241\">SpringMVC之参数使用方式详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39514033/article/details/112181999\">SpringMVC之参数默认值</a></li>\n<li><a href=\"https://blog.csdn.net/HSH205572/article/details/85295622\">SpringMVC之Attribute和Parameter的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013755250/article/details/75571085\">SpringMVC之Attribute和Parameter的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44557778/article/details/109051419\">SpringMVC之Attribute和Parameter的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/xiangwang2016/article/details/85119692\">SpringMVC之Request和RequestScope的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44785877/article/details/112347870\">SpringMVC之RequestScope和SessionScope入门</a></li>\n<li><a href=\"https://blog.csdn.net/java_wxid/article/details/84573171\">SpringMVC之RequestScope和SessionScope详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52625549/article/details/124666401\">SpringMVC之request.setAttribute()和session.setAttribute()的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41172982/article/details/102453782\">SpringMVC之model.addAttribute()和request.setAttribute()的区别</a></li>\n</ul>\n</blockquote>\n<p>Attribute和Parameter的获取</p>\n<ul>\n<li>HttpServletRequest：可以获取Parameter和Attribute</li>\n<li>HttpSession：可以获取Attribute</li>\n<li>Model：可以获取Attribute</li>\n</ul>\n<p>Attribute和Parameter的区别</p>\n<ul>\n<li>Attribute：由后端生成，可以存在Request、Session和Model中</li>\n<li>Parameter：由前端生成，只存在Request中，可以自行添加到Model中</li>\n</ul>\n<p>Attribute和Parameter的范围</p>\n<ul>\n<li>Attribute：转发时Request和Session范围的可以访问，重定向时只有Session范围的可以访问</li>\n<li>Parameter：转发时可以访问，GET重定向时也可以访问（因为浏览器会携带参数重新请求）</li>\n</ul>\n<blockquote>\n<p>ps：Model是Request范围的，如果要在Session范围内使用Attribute，可以将Attribute转到Session范围中</p>\n</blockquote>\n<h5 id=\"Parameter\"><a href=\"#Parameter\" class=\"headerlink\" title=\"Parameter\"></a>Parameter</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/crazy_fire/article/details/7865357\">request.getParameter详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_25243147/article/details/124201261\">RequestEntity详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44543508/article/details/101026720\">@RequestParam详解</a></li>\n<li><a href=\"https://blog.csdn.net/david2000999/article/details/121233360\">@RequestParam加与不加的区别</a></li>\n<li><a href=\"https://blog.csdn.net/CPOHUI/article/details/106876158\">@RequestBody详解</a></li>\n<li><a href=\"https://blog.csdn.net/qfikh/article/details/88553603\">@RequestBody和@RequestParam比较</a></li>\n<li><a href=\"https://blog.csdn.net/linysuccess/article/details/109221288\">@RequestBody和@RequestParam混合使用</a></li>\n<li><a href=\"https://blog.csdn.net/hunt_er/article/details/109678025\">@RequestBody只能使用一次</a></li>\n<li><a href=\"https://blog.csdn.net/securitit/article/details/110704836\">@RequestPart详解</a></li>\n<li><a href=\"https://blog.csdn.net/wd2014610/article/details/79727061\">@RequestPart和@RequestParam比较</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37370132/article/details/107972265\">@PathVariable详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/116902786\">@Value详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Attribute\"><a href=\"#Attribute\" class=\"headerlink\" title=\"Attribute\"></a>Attribute</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43329749/article/details/105717815\">request.getAttribute和session.getAttribute详解</a></li>\n<li><a href=\"https://www.cnblogs.com/yourbatman/p/11324091.html\">@RequestAttribute和@SessionAttribute详解</a></li>\n<li><a href=\"https://blog.csdn.net/aar49191/article/details/101961466\">@RequestAttribute详解</a></li>\n<li><a href=\"https://blog.csdn.net/yiifaa/article/details/77542208\">@SessionAttribute详解</a></li>\n<li><a href=\"https://blog.csdn.net/yue_xx/article/details/105740360\">@ModelAttribute详解</a></li>\n<li><a href=\"https://blog.csdn.net/abc997995674/article/details/80462450\">@SessionAttributes详解</a></li>\n<li><a href=\"https://blog.csdn.net/superfjj/article/details/103890655\">@SessionAttributes和@SessionAttribute的区别</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/120495744\">@ModelAttribute和@SessionAttributes的关系</a></li>\n</ul>\n</blockquote>\n<p>Attribute相关注解的作用</p>\n<ul>\n<li>@RequestAttribute：从HttpRequest中获取Attribute</li>\n<li>@SessionAttribute：从HttpSession中获取Attribute</li>\n<li>@ModelAttribute：从Model中获取Attribute或者将方法的返回值存入Model中</li>\n<li>@SessionAttributes：将Model里面的Attribute存到Session域中（Model的有效范围默认是Request域的）</li>\n</ul>\n<blockquote>\n<p>ps：@SessionAttributes和@SessionAttribute之间差一个 <code>s</code> ，但作用不同</p>\n</blockquote>\n<h5 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/JinKin_OldWang/article/details/83052454\">ModelAndView和Model、ModelMap的关系</a></li>\n<li><a href=\"https://blog.csdn.net/Hello_ChenLiYan/article/details/106411452\">Model和HttpSession的区别</a></li>\n</ul>\n</blockquote>\n<p>Model的作用是将数据传递给视图进行渲染，比Request和Session更符合MVC规范</p>\n<h3 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feyehong/article/details/123676293\">@RequestHeader详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sswqzx/article/details/85450711\">@CookieValue</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zzu_wlan/article/details/104508541\">@SessionAttributes详解</a></li>\n<li><a href=\"https://blog.csdn.net/csyy140225/article/details/82454611\">@SessionAttribute详解</a></li>\n<li><a href=\"https://blog.csdn.net/superfjj/article/details/103890655\">@SessionAttributes和@SessionAttribute的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38615170/article/details/90290852\">SpringSession入门</a></li>\n<li><a href=\"https://blog.csdn.net/east123321/article/details/79157464\">SpringSession详解</a></li>\n<li><a href=\"https://blog.csdn.net/Sool179/article/details/85042162\">SpringSession复制</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Response\"><a href=\"#Response\" class=\"headerlink\" title=\"Response\"></a>Response</h2><h3 id=\"Result\"><a href=\"#Result\" class=\"headerlink\" title=\"Result\"></a>Result</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44176169/article/details/104980344\">SpringMVC之返回值类型</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44866828/article/details/118876652\">ResponseEntity详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44563573/article/details/114302954\">@ResponseBody详解</a></li>\n<li><a href=\"https://blog.csdn.net/deanwq/article/details/102907212\">ResponseEntity和@ResponseBody的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36582604/article/details/80520937\">ResponseEntity和@ResponseBody的优先级</a></li>\n<li><a href=\"https://blog.csdn.net/asxyxxx/article/details/121806762\">统一返回结果入门</a></li>\n<li><a href=\"https://blog.csdn.net/xueyijin/article/details/122524335\">统一返回结果详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Status\"><a href=\"#Status\" class=\"headerlink\" title=\"Status\"></a>Status</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39901558/article/details/111178078\">SpringMVC之返回状态码</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45555680/article/details/111658001\">SpringMVC之Http的主要状态码详解</a></li>\n<li><a href=\"https://blog.csdn.net/thinkingcao/article/details/110875494\">@ResponseStatus详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Header-1\"><a href=\"#Header-1\" class=\"headerlink\" title=\"Header\"></a>Header</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26878363/article/details/102487207\">SpringMVC之返回响应头</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Cookie-1\"><a href=\"#Cookie-1\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35387940/article/details/83501886\">SpringMVC之返回Cookie</a></li>\n</ul>\n</blockquote>\n<h3 id=\"View\"><a href=\"#View\" class=\"headerlink\" title=\"View\"></a>View</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tongshoushou/article/details/108588028\">SpringMVC之返回视图名</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Exception\"><a href=\"#Exception\" class=\"headerlink\" title=\"Exception\"></a>Exception</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41107231/article/details/115874974\">Spring全局异常入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27575627/article/details/129128997\">Spring全局异常进阶</a></li>\n<li><a href=\"https://blog.csdn.net/include_IT_dog/article/details/107111598\">Spring全局异常详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37731470/article/details/116754395\">Spring全局异常捕获之Filter异常</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38366063/article/details/89494264\">Spring全局异常捕获之Interceptor异常</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42370303/article/details/81147071\">异常分类之BizException详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Context\"><a href=\"#Context\" class=\"headerlink\" title=\"Context\"></a>Context</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/penriver/article/details/117028346\">获取ApplicationContext的方式</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_35756522/article/details/77127169\">RequestContextHolder详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45901207/article/details/110992418\">RequestContextHolder原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Invalid\"><a href=\"#Invalid\" class=\"headerlink\" title=\"Invalid\"></a>Invalid</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sageyin/article/details/114916266\">RequestContextHolder在子线程中失效的解决办法</a></li>\n<li><a href=\"https://blog.csdn.net/yu0_zhang0/article/details/106272919\">RequestContextHolder在@Async中失效的解决办法</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Validation\"><a href=\"#Validation\" class=\"headerlink\" title=\"Validation\"></a>Validation</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43692950/article/details/119247774\">SpringValidation入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_48795607/article/details/112823402\">SpringValidation进阶</a></li>\n<li><a href=\"https://blog.csdn.net/BASK2312/article/details/129317072\">SpringValidation详解</a></li>\n<li><a href=\"https://blog.csdn.net/ProLayman/article/details/114136791\">SpringValidation规则入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32352777/article/details/108424932\">SpringValidation规则详解</a></li>\n<li><a href=\"https://blog.csdn.net/Seven71111/article/details/112191229\">SpringValidation之嵌套校验</a></li>\n<li><a href=\"https://blog.csdn.net/ABIGJUN/article/details/97425805\">SpringValidation之分组校验</a></li>\n<li><a href=\"https://blog.csdn.net/HD243608836/article/details/116239908\">SpringValidation异常入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43409401/article/details/116017177\">SpringValidation异常详解</a></li>\n<li><a href=\"https://stackoverflow.com/questions/57010688/what-is-the-difference-between-constraintviolationexception-and-methodargumentno\">SpringValidation异常区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/hc1285653662/article/details/126839237\">SpringValidation异常区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42974140/article/details/113183565\">SpringValidation之@Valid和@Validated的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40603010/article/details/124056549\">SpringValidation之@NotNull和@NonNull的区别</a></li>\n<li><a href=\"https://blog.csdn.net/u010900754/article/details/91323427\">SpringValidation之IDE中支持NotNull和Nullable检测</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39751320/article/details/105090653\">SpringValidation之BindingResult入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33375499/article/details/105639446\">SpringValidation之BindingResult详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Validated和-Valid的区别\"><a href=\"#Validated和-Valid的区别\" class=\"headerlink\" title=\"@Validated和@Valid的区别\"></a>@Validated和@Valid的区别</h3><ul>\n<li>@Validated是spring的注解，@Valid是java的注解</li>\n<li>@Validated不支持标注字段，@Valid支持标注字段</li>\n<li>@Validated不支持嵌套校验，@Valid支持嵌套校验</li>\n<li>@Validated支持分组校验，@Valid不支持分组校验</li>\n</ul>\n<h3 id=\"MethodArgumentNotValidException和ConstraintViolationException的区别\"><a href=\"#MethodArgumentNotValidException和ConstraintViolationException的区别\" class=\"headerlink\" title=\"MethodArgumentNotValidException和ConstraintViolationException的区别\"></a>MethodArgumentNotValidException和ConstraintViolationException的区别</h3><ul>\n<li>BindException：表单请求数据绑定到参数出错时抛出的异常</li>\n<li>MethodArgumentNotValidException：使用@Valid和@Validated注解标注的方法参数校验失败时抛出的异常</li>\n<li>ConstraintViolationException：使用@NotNull等注解直接标注的方法参数校验失败时抛出的异常</li>\n</ul>\n<h2 id=\"Assertion\"><a href=\"#Assertion\" class=\"headerlink\" title=\"Assertion\"></a>Assertion</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jeikerxiao/article/details/82262487\">JavaAssert详解</a></li>\n<li><a href=\"https://blog.csdn.net/yangshangwei/article/details/123105926\">SpringAssert详解</a></li>\n<li><a href=\"https://blog.csdn.net/neweastsun/article/details/104006208\">AssertJ详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Converter\"><a href=\"#Converter\" class=\"headerlink\" title=\"Converter\"></a>Converter</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhuqiuhui/article/details/82316686\">SpringConverter入门</a></li>\n<li><a href=\"https://blog.csdn.net/xiewenfeng520/article/details/106992065\">SpringConverter进阶</a></li>\n<li><a href=\"https://blog.csdn.net/huangjhai/article/details/104214894\">SpringConverter详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33912453/article/details/89019947\">HttpMessageConverter入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44741023/article/details/119932980\">HttpMessageConverter进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43808717/article/details/117512315\">HttpMessageConverter详解</a></li>\n<li><a href=\"https://blog.csdn.net/Heron22/article/details/109512976\">MappingJackson2HttpMessageConverter使用和原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41959009/article/details/103652290\">SpringConverter之bean属性和参数映射规则</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Date\"><a href=\"#Date\" class=\"headerlink\" title=\"Date\"></a>Date</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012410733/article/details/72773095\">SpringMVC的Date处理类型详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhuzicc/article/details/127956849\">@DateTimeFormat详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhou520yue520/article/details/81348926\">@DateTimeFormat和@JsonFormat入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhuzicc/article/details/106529485\">@DateTimeFormat和@JsonFormat详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21567385/article/details/107303684\">SpringBoot的Date类型配置详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Enum\"><a href=\"#Enum\" class=\"headerlink\" title=\"Enum\"></a>Enum</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33306246/article/details/106933613\">SpringMVC的Enum处理类型详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Json\"><a href=\"#Json\" class=\"headerlink\" title=\"Json\"></a>Json</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/117778291\">Jackson详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/117820462\">Jackson注解入门</a></li>\n<li><a href=\"https://blog.csdn.net/blwinner/article/details/98532847\">Jackson注解详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33901843/article/details/91930287\">Jackson之处理is开头的字段</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16759541/article/details/89083510\">Jackson之@JsonProperty和@JsonAlias详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20919883/article/details/116480850\">Jackson之@JsonFormat处理date和enum</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40102894/article/details/86736162\">Jackson之@JsonValue处理enum</a></li>\n<li><a href=\"https://blog.csdn.net/Mr__Chao/article/details/121537320\">Jackson之TypeReference详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34347620/article/details/103444083\">Jackson之自定义序列化和反序列化</a></li>\n<li><a href=\"https://blog.csdn.net/zzuhkp/article/details/107749148\">Spring之ResolvableType详解</a></li>\n<li><a href=\"https://blog.csdn.net/z28126308/article/details/90276705\">Spring之Jackson配置</a></li>\n<li><a href=\"https://blog.csdn.net/fallenjency/article/details/123276600\">JsonPath详解</a></li>\n<li><a href=\"https://blog.csdn.net/w727655308/article/details/121207345\">jq详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"CORS\"><a href=\"#CORS\" class=\"headerlink\" title=\"CORS\"></a>CORS</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/JokerLJG/article/details/123659384\">@CrossOrigin详解</a></li>\n</ul>\n</blockquote>\n<p>CORS：CrossSite（跨域）</p>\n<h2 id=\"Auth\"><a href=\"#Auth\" class=\"headerlink\" title=\"Auth\"></a>Auth</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45704528/article/details/117639061\">Spring认证和授权实现方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46073538/article/details/128641746\">Spring认证和授权实现方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41496513/article/details/117259017\">Spring认证和授权实现方案之使用Filter实现</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36526703/article/details/81910680\">Spring认证和授权实现方案之使用Interceptor实现</a></li>\n<li><a href=\"https://blog.csdn.net/wzy18210825916/article/details/96435588\">Spring认证和授权实现方案之使用AOP实现</a></li>\n<li><a href=\"https://www.zhihu.com/question/473557131?utm_id=0\">Spring认证和授权之登录跳转时返回302还是401入门</a></li>\n<li><a href=\"https://www.illucit.com/en/asp-net/asp-net-5-identity-302-redirect-vs-401-unauthorized-for-api-ajax-requests\">Spring认证和授权之登录跳转时返回302还是401详解</a></li>\n</ul>\n</blockquote>\n<p>登录跳转实现方案</p>\n<ul>\n<li>后端实现<ul>\n<li>跳首页：返回302（浏览器负责实现跳转）</li>\n<li>跳当前页：返回302 + 前端将当前页地址存到sessionStorage中、返回302 + 前端请求时每次将当前页地址放到<code>自定义header</code>或者<code>参数</code>中传给后端（不推荐这个方案）</li>\n</ul>\n</li>\n<li>前端实现<ul>\n<li>跳首页：返回401（前端负责实现跳转）</li>\n<li>跳当前页：返回401 + 前端将当前页地址存到sessionStorage中</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jpgzhu/article/details/105628712\">Util和Tool的区别</a></li>\n<li><a href=\"https://blog.csdn.net/cchchunhe/article/details/89452279\">Service、Manager和Helper</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Model-1\"><a href=\"#Model-1\" class=\"headerlink\" title=\"Model\"></a>Model</h1><h2 id=\"POJO\"><a href=\"#POJO\" class=\"headerlink\" title=\"POJO\"></a>POJO</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44929168/article/details/128377849\">POJO入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40610003/article/details/109007539\">POJO详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Transform\"><a href=\"#Transform\" class=\"headerlink\" title=\"Transform\"></a>Transform</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lemon_TT/article/details/122779141\">Bean转换的几种方法</a></li>\n<li><a href=\"https://blog.csdn.net/yqw1401/article/details/120385937\">MapStruct详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"View-1\"><a href=\"#View-1\" class=\"headerlink\" title=\"View\"></a>View</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42382121/article/details/82557048\">Java的EL表达式</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Servlet\"><a href=\"#Servlet\" class=\"headerlink\" title=\"Servlet\"></a>Servlet</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45994580/article/details/123965547\">Servlet入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19782019/article/details/80292110\">Servlet详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Jsp\"><a href=\"#Jsp\" class=\"headerlink\" title=\"Jsp\"></a>Jsp</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Madeira/article/details/93377880\">Jsp入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45018290/article/details/108108207\">Jsp详解</a></li>\n<li><a href=\"https://blog.csdn.net/Mr_YanMingXin/article/details/118603852\">Jsp内置对象</a></li>\n<li><a href=\"https://blog.csdn.net/qq_48033003/article/details/117508888\">Jsp的EL表达式</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41121133/article/details/112211411\">Jsp和Servlet的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Thymeleaf\"><a href=\"#Thymeleaf\" class=\"headerlink\" title=\"Thymeleaf\"></a>Thymeleaf</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/nimaaicijdh/article/details/108510775\">Thymeleaf入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46188681/article/details/114188838\">Thymeleaf详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43605444/article/details/122028798\">SpEL入门</a></li>\n<li><a href=\"https://blog.csdn.net/neweastsun/article/details/104533662\">SpEL进阶</a></li>\n<li><a href=\"https://blog.csdn.net/likun557/article/details/107853045\">SpEL详解</a></li>\n<li><a href=\"https://blog.csdn.net/liuyueyi25/article/details/106249073\">SpEL语法</a></li>\n<li><a href=\"https://blog.csdn.net/zxx2096/article/details/102986973\">SpEL之#和$的区别</a></li>\n</ul>\n</blockquote>\n<p>spel：Spring Expression Language</p>\n<h1 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h1><h2 id=\"Protocol\"><a href=\"#Protocol\" class=\"headerlink\" title=\"Protocol\"></a>Protocol</h2><h3 id=\"Http\"><a href=\"#Http\" class=\"headerlink\" title=\"Http\"></a>Http</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yeyinfan123/article/details/106968850\">HTTP入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq15035899256/article/details/126103840\">HTTP进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45890970/article/details/122890674\">HTTP详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44739349/article/details/106097201\">Http请求库选型</a></li>\n<li><a href=\"https://blog.csdn.net/petterp/article/details/129003792\">Http请求库演进</a></li>\n<li><a href=\"https://blog.csdn.net/w372426096/article/details/82713315\">HttpClient详解</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_32237719/article/details/100125359\">OkHttp入门</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_32237719/article/details/109743388\">OkHttp进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/121877245\">OkHttp详解</a></li>\n<li><a href=\"https://blog.csdn.net/sukisabishi/article/details/121878743\">Retrofit详解</a></li>\n<li><a href=\"https://blog.csdn.net/Ares___/article/details/121620150\">RestTemplate详解</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/100713622\">RestTemplate集成HttpClient和OkHttp</a></li>\n<li><a href=\"https://blog.csdn.net/chendasheng/article/details/107075468\">OkHttp和HttpClient的区别</a></li>\n<li><a href=\"https://blog.csdn.net/fitaotao/article/details/103903429\">Retrofit和OkHttp的区别</a></li>\n<li><a href=\"https://blog.csdn.net/b644ROfP20z37485O35M/article/details/109505044\">RestTemplate和Retrofit的区别</a></li>\n<li><a href=\"https://blog.csdn.net/q1353122328/article/details/128812919\">Feign和Retrofit的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38233258/article/details/125706722\">Forest和Retrofit的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>HttpClient：Apache组织出品的较早的Http请求库，支持<code>编程式调用</code></li>\n<li>OkHttp：Square公司出品的较新的Http请求库，支持<code>编程式调用</code></li>\n<li>Retrofit：Square公司出品的较新的Http请求库，基于OkHttp和RxJava，支持<code>声明式调用</code></li>\n<li>RestTemplate：Spring中使用，可以适配多种Http请求库</li>\n<li>Feign：SpringCloud中使用，可以使用Spring的注解</li>\n</ul>\n<blockquote>\n<p>ps：客户端的http请求方式可以分为 <code>同步请求</code> 和 <code>异步请求</code></p>\n</blockquote>\n<h3 id=\"WebSocket\"><a href=\"#WebSocket\" class=\"headerlink\" title=\"WebSocket\"></a>WebSocket</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/asd051377305/article/details/108066378\">WebSocket协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/LL845876425/article/details/106393358\">WebSocket协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/sermonlizhi/article/details/118609757\">WebSocket协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq991658923/article/details/127022522\">WebSocket使用入门</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/113845879\">WebSocket使用进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_56995925/article/details/120543965\">WebSocket使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43821679/article/details/110236715\">WebSocket之数据实时更新</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42125556/article/details/120931552\">分布式WebSocket入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhuwei_clark/article/details/83547193\">分布式WebSocket进阶</a></li>\n<li><a href=\"https://blog.csdn.net/delicious_life/article/details/105305640\">分布式WebSocket详解</a></li>\n<li><a href=\"https://blog.csdn.net/aiwokache/article/details/117294920\">WebSocket和Http的关系</a></li>\n<li><a href=\"https://blog.csdn.net/cai4561/article/details/106809244\">WebSocket掉线重连</a></li>\n<li><a href=\"https://blog.csdn.net/houbin0912/article/details/110879747\">WebSocket错误码</a></li>\n<li><a href=\"https://blog.csdn.net/AnNanDu/article/details/126603005\">WebSocket保活（PingPong）机制</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RPC\"><a href=\"#RPC\" class=\"headerlink\" title=\"RPC\"></a>RPC</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qianlia/article/details/105508138\">RPC入门</a></li>\n<li><a href=\"https://blog.csdn.net/belongtocode/article/details/118639448\">RPC进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yjp198713/article/details/79410521\">RPC详解</a></li>\n<li><a href=\"https://blog.csdn.net/Ruishine/article/details/122534965\">RPC和RMI的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qian_348840260/article/details/116753405\">RPC和HTTP的关系</a></li>\n<li><a href=\"https://blog.csdn.net/weichi7549/article/details/107721623\">RPC和Restful对比</a></li>\n<li><a href=\"https://blog.csdn.net/en_joker/article/details/105556828\">RPC框架选型入门</a></li>\n<li><a href=\"https://blog.csdn.net/liutong123987/article/details/78887604\">RPC框架选型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_70730532/article/details/126543677\">RPC框架选型详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Specification\"><a href=\"#Specification\" class=\"headerlink\" title=\"Specification\"></a>Specification</h2><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/Agreoself/p/17328343.html\">Web API和Web Service的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30021219/article/details/93379588\">Web API和Web Service的区别进阶</a></li>\n<li><a href=\"https://www.cnblogs.com/realaction/p/11429253.html\">Web API和Web Service的区别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Restful（Web-API）\"><a href=\"#Restful（Web-API）\" class=\"headerlink\" title=\"Restful（Web API）\"></a>Restful（Web API）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/duninet/article/details/103835372\">Restful入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzvar/article/details/118164133\">Restful进阶</a></li>\n<li><a href=\"https://blog.csdn.net/langfeiyes/article/details/122871361\">Restful详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_33446638/article/details/111144735\">Restful之状态码设计详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42519804/article/details/106883972\">Restful之Post和Put的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/maxmao1024/article/details/79591726\">Restful之Post和Put的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/varyall/article/details/80895945\">Restful之Patch和Put的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/wufagang/article/details/105306108\">Restful之Spring的HiddenHttpMethodFilter</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SOAP（Web-Service）\"><a href=\"#SOAP（Web-Service）\" class=\"headerlink\" title=\"SOAP（Web Service）\"></a>SOAP（Web Service）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39198749/article/details/102627247\">SOAP入门</a></li>\n<li><a href=\"https://blog.csdn.net/caisini_vc/article/details/48465731\">SOAP进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44651073/article/details/129468001\">SOAP详解</a></li>\n<li><a href=\"https://blog.csdn.net/cherry_11qianqian/article/details/82660383\">WSDL入门</a></li>\n<li><a href=\"https://blog.csdn.net/DmxExcalibur/article/details/90610596\">WSDL进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19714937/article/details/68922185\">WSDL详解</a></li>\n<li><a href=\"https://blog.csdn.net/vtopqx/article/details/86674184\">SOAP和WSDL的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h2><h3 id=\"Exception-1\"><a href=\"#Exception-1\" class=\"headerlink\" title=\"Exception\"></a>Exception</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012042111/article/details/126444206\">web开发之异常处理</a></li>\n<li><a href=\"https://blog.csdn.net/psy1286479613/article/details/121368058\">web开发之异常排查</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Retry\"><a href=\"#Retry\" class=\"headerlink\" title=\"Retry\"></a>Retry</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq826654664jx/article/details/116108221\">异常处理之该不该重试</a></li>\n<li><a href=\"https://blog.csdn.net/lonelymanontheway/article/details/105829096\">异常处理之超时重试</a></li>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/128410398\">GuavaRetry和SpringRetry对比</a></li>\n<li><a href=\"https://blog.csdn.net/noaman_wgs/article/details/85940207\">GuavaRetry详解</a></li>\n<li><a href=\"https://blog.csdn.net/hongyuan19/article/details/118995696\">SpringRetry详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013467442/article/details/105746620\">@Retryable入门</a></li>\n<li><a href=\"https://blog.csdn.net/wtopps/article/details/103698635\">@Retryable详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Idempotent\"><a href=\"#Idempotent\" class=\"headerlink\" title=\"Idempotent\"></a>Idempotent</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yuhaiyang_1/article/details/81040967\">幂等入门</a></li>\n<li><a href=\"https://blog.csdn.net/afsvsv/article/details/90767910\">幂等详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41973594/article/details/109684180\">幂等实现方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/sufu1065/article/details/122335349\">幂等实现方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45701550/article/details/118276588\">幂等和重试的关系</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43684538/article/details/120014838\">幂等和去重的区别</a></li>\n</ul>\n</blockquote>\n<p>Idempotent：幂等</p>\n<h4 id=\"Repeat\"><a href=\"#Repeat\" class=\"headerlink\" title=\"Repeat\"></a>Repeat</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/CPOHUI/article/details/106439476\">重复提交问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/weter_drop/article/details/103127340\">重复提交问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/sonicwater/article/details/114872095\">防抖（debounce）和截流（throttle）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_17231297/article/details/129787384\">接口性能优化方案总结</a></li>\n<li><a href=\"https://blog.csdn.net/china_coding/article/details/128895749\">用了这些方案，接口性能提高了100倍</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Logging\"><a href=\"#Logging\" class=\"headerlink\" title=\"Logging\"></a>Logging</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/imjcoder/article/details/121688831\">java日志详解</a></li>\n<li><a href=\"https://blog.csdn.net/xintonghanchuang/article/details/90752323\">java日志框架入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28623375/article/details/114647888\">java日志框架详解</a></li>\n<li><a href=\"https://blog.csdn.net/kerongao/article/details/109679854\">SpringBoot日志入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42681787/article/details/108814614\">SpringBoot日志详解</a></li>\n<li><a href=\"https://blog.csdn.net/AlbenXie/article/details/108242318\">@Slf4j详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Library\"><a href=\"#Library\" class=\"headerlink\" title=\"Library\"></a>Library</h2><h3 id=\"log4j2\"><a href=\"#log4j2\" class=\"headerlink\" title=\"log4j2\"></a>log4j2</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sakuragio/article/details/100872454\">log4j2配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/122810961\">log4j2配置（properties版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/chen_lay/article/details/122979095\">log4j2配置（xml版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/fygkchina/article/details/107183281\">log4j2之三大核心对象</a></li>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/101628736\">log4j2之Logger详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012345283/article/details/39264245\">log4j2之Appender详解</a></li>\n<li><a href=\"https://blog.csdn.net/penriver/article/details/116526750\">log4j2之Layout详解</a></li>\n<li><a href=\"https://ask.csdn.net/questions/642815\">log4j2的线程安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/cekonghyj/article/details/101759471\">log4j2的线程安全详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"logback\"><a href=\"#logback\" class=\"headerlink\" title=\"logback\"></a>logback</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41377777/article/details/120962037\">logback配置详解</a></li>\n<li><a href=\"https://blog.csdn.net/lingbomanbu_lyl/article/details/89852037\">logback之Layout入门</a></li>\n<li><a href=\"https://blog.csdn.net/Doraemon_wu/article/details/52040859\">logback之Layout详解</a></li>\n<li><a href=\"https://blog.csdn.net/cw_hello1/article/details/51969554\">logback之Encoder入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30118563/article/details/122006358\">logback之Encoder进阶</a></li>\n<li><a href=\"https://blog.csdn.net/snail_bi/article/details/103496697\">logback之Encoder详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Optimize\"><a href=\"#Optimize\" class=\"headerlink\" title=\"Optimize\"></a>Optimize</h2><h3 id=\"Placeholder\"><a href=\"#Placeholder\" class=\"headerlink\" title=\"Placeholder\"></a>Placeholder</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangdongnihao/article/details/106460858\">java日志占位符入门</a></li>\n<li><a href=\"https://blog.csdn.net/Ahuuua/article/details/122588474\">java日志占位符详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Judgement\"><a href=\"#Judgement\" class=\"headerlink\" title=\"Judgement\"></a>Judgement</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rubenyu/article/details/6591741\">java日志打印判断入门</a></li>\n<li><a href=\"https://blog.csdn.net/new_culture/article/details/52021475\">java日志打印判断详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/java_lifeng/article/details/125989801\">log4j2怎么动态加载配置文件</a></li>\n<li><a href=\"https://blog.csdn.net/u013076044/article/details/79186138\">log4j2动态加载为什么会失效</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hkdhkdhkd/article/details/113869035\">java日志问题之多个绑定冲突</a></li>\n<li><a href=\"https://blog.csdn.net/kxcfzyk/article/details/38613861\">java日志问题之循环输出溢出</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Adapter\"><a href=\"#Adapter\" class=\"headerlink\" title=\"Adapter\"></a>Adapter</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013657993/article/details/107151047\">java日志适配入门</a></li>\n<li><a href=\"https://blog.csdn.net/Px01Ih8/article/details/120479991\">java日志适配详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Specification-1\"><a href=\"#Specification-1\" class=\"headerlink\" title=\"Specification\"></a>Specification</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/a7151593/article/details/107919163\">日志规范</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39755824/article/details/110793712\">结构化日志</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h2><h3 id=\"Event\"><a href=\"#Event\" class=\"headerlink\" title=\"Event\"></a>Event</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011692924/article/details/82422959\">事件日志记录详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42374697/article/details/111149757\">5W2H分析法入门</a></li>\n<li><a href=\"https://www.cnblogs.com/sumie/p/10041486.html\">5W2H分析法详解</a></li>\n</ul>\n</blockquote>\n<p>事件日志：程序的运行日志</p>\n<ul>\n<li>事件信息（what）</li>\n<li>事件时间（when）</li>\n<li>事件来源（who）</li>\n<li>事件位置（where）：比如线程名、记录器名称、模块名、方法名、代码行</li>\n<li>事件标签（tag）：比如事件属性、输入参数</li>\n</ul>\n<h3 id=\"Action\"><a href=\"#Action\" class=\"headerlink\" title=\"Action\"></a>Action</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37824308/article/details/121523285\">操作日志方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/wuzhiwei549/article/details/105965646\">操作日志方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42570879/article/details/108830089\">操作日志记录入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41596778/article/details/129375959\">操作日志记录详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40106836/article/details/95490497\">操作日志埋点入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014340331/article/details/112523718\">操作日志埋点详解</a></li>\n<li><a href=\"https://www.woshipm.com/pd/5638412.html\">操作日志设计入门</a></li>\n<li><a href=\"https://www.woshipm.com/user-research/3236774.html\">操作日志设计详解</a></li>\n</ul>\n</blockquote>\n<p>操作日志：用户的行为日志</p>\n<ul>\n<li>操作信息（what）</li>\n<li>操作时间（when）</li>\n<li>操作者（who）</li>\n<li>操作资源（resource）：资源名称和资源id</li>\n<li>操作变化（change）：资源变化前和变化后的状态</li>\n</ul>\n<h3 id=\"Trace\"><a href=\"#Trace\" class=\"headerlink\" title=\"Trace\"></a>Trace</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/psy1286479613/article/details/121368058\">java日志之traceId入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38117908/article/details/107285978\">java日志之traceId进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_68408835/article/details/130004943\">java日志之traceId详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012410733/article/details/109406093\">MDC详解</a></li>\n<li><a href=\"https://blog.csdn.net/yly_n123/article/details/115213203\">MDC在子线程中失效的解决办法</a></li>\n<li><a href=\"https://blog.csdn.net/GravityQ/article/details/110864607\">MDC在@Async中失效的解决办法</a></li>\n</ul>\n</blockquote>\n<p>链路日志：服务的调用日志</p>\n<h1 id=\"Testing\"><a href=\"#Testing\" class=\"headerlink\" title=\"Testing\"></a>Testing</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sinolover/article/details/111629668\">TDD详解</a></li>\n<li><a href=\"https://blog.csdn.net/tyw15/article/details/108123562\">单元测试和集成测试入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhang_xiaoyi/article/details/79041145\">单元测试和集成测试详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qf2019/article/details/118379665\">java测试框架选型入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_36328839/article/details/112543406\">java测试框架选型详解</a></li>\n<li><a href=\"https://blog.csdn.net/skh2015java/article/details/121775806\">java单元测试覆盖率框架详解</a></li>\n<li><a href=\"https://blog.csdn.net/zjuxsl/article/details/90762088\">python测试框架选型详解</a></li>\n<li><a href=\"https://blog.csdn.net/Faith_Lzt/article/details/117932831\">python测试框架pytest详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Unit-Test\"><a href=\"#Unit-Test\" class=\"headerlink\" title=\"Unit Test\"></a>Unit Test</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44170221/article/details/106463482\">Junit4详解</a></li>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/104296855\">Junit5详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45920495/article/details/128522052\">JUnit5和JUnit4对比</a></li>\n<li><a href=\"https://blog.csdn.net/u010675669/article/details/86574956\">JUnit5和JUnit4差异</a></li>\n<li><a href=\"https://blog.csdn.net/w605283073/article/details/80051229\">Junit4参数化测试</a></li>\n<li><a href=\"https://blog.csdn.net/u013019701/article/details/103330908\">Junit5参数化测试</a></li>\n<li><a href=\"https://blog.csdn.net/cunchi4221/article/details/107475374\">Junit重复测试</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33742618/article/details/91799240\">@RunWith详解</a></li>\n<li><a href=\"https://blog.csdn.net/ryo1060732496/article/details/80823898\">@ExtendWith详解</a></li>\n<li><a href=\"https://segmentfault.com/q/1010000042768525\">@ExtendWith和@RunWith的区别</a></li>\n<li><a href=\"https://blog.csdn.net/neweastsun/article/details/104006208\">AssertJ详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Junit5使用了Extend机制（@ExtendWith），可以支持多个Extend</li>\n<li>Junit4使用了Runner机制（@RunWith），只能支持一个Runner</li>\n</ul>\n<h3 id=\"Spring-Test\"><a href=\"#Spring-Test\" class=\"headerlink\" title=\"Spring Test\"></a>Spring Test</h3><blockquote>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000040803747\">Spring单元测试和集成测试详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36688143/article/details/97393949\">SpringBoot单元测试如何加快测试速度</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40569991/article/details/108253102\">SpringBoot单元测试如何不启动整个项目</a></li>\n</ul>\n</blockquote>\n<h4 id=\"SpringTest\"><a href=\"#SpringTest\" class=\"headerlink\" title=\"SpringTest\"></a>SpringTest</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/QGhurt/article/details/116322115\">SpringTest入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44895829/article/details/123508674\">SpringTest详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/114693685\">SpringTest之SpringJUnit4ClassRunner详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40775879/article/details/102968817\">SpringtTest之SpringJUnit4ClassRunner和SpringRunner的区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37941483/article/details/90727830\">SpringTest之@ContextConfiguration详解</a></li>\n<li><a href=\"https://www.codenong.com/b-spring-5-junit-config/\">SpringTest之@SpringJUnitConfig详解</a></li>\n<li><a href=\"https://blog.csdn.net/SmileLucki/article/details/105264188\">SpringTest之@ContextConfiguration和@SpringJUnitConfig的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42115003/article/details/113329348\">SpringTest之单元测试不启动整个项目</a></li>\n</ul>\n</blockquote>\n<h4 id=\"SpringBootTest\"><a href=\"#SpringBootTest\" class=\"headerlink\" title=\"SpringBootTest\"></a>SpringBootTest</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangxi06/article/details/114630426\">SpringBootTest入门</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_40770656/article/details/109322538\">SpringBootTest详解</a></li>\n<li><a href=\"https://blog.csdn.net/HD243608836/article/details/122239150\">SpringBootTest之JUnit5和JUnit4</a></li>\n<li><a href=\"https://blog.csdn.net/dnc8371/article/details/106701279\">SpringBootTest之@SpringApplicationConfiguration和@ContextConfiguration区别</a></li>\n<li><a href=\"https://blog.csdn.net/wangjie919/article/details/80347150\">SpringBootTest之@SpringApplicationConfiguration废弃和替代方案</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44750696/article/details/121360008\">SpringBootTest之@SpringBootTest详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40569991/article/details/108253102\">SpringBootTest之单元测试不启动整个项目</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Library-1\"><a href=\"#Library-1\" class=\"headerlink\" title=\"Library\"></a>Library</h2><h3 id=\"Mock-Test\"><a href=\"#Mock-Test\" class=\"headerlink\" title=\"Mock Test\"></a>Mock Test</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33561055/article/details/103978412\">Mock测试之修改字段</a></li>\n</ul>\n</blockquote>\n<h4 id=\"MockMvc\"><a href=\"#MockMvc\" class=\"headerlink\" title=\"MockMvc\"></a>MockMvc</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42105629/article/details/104652955\">MockMvc入门</a></li>\n<li><a href=\"https://blog.csdn.net/IManiy/article/details/120833041\">MockMvc进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wo541075754/article/details/88983708\">MockMvc详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Mockito\"><a href=\"#Mockito\" class=\"headerlink\" title=\"Mockito\"></a>Mockito</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44668898/article/details/121912233\">Mockito入门</a></li>\n<li><a href=\"https://blog.csdn.net/nanchengyu/article/details/112431258\">Mockito进阶</a></li>\n<li><a href=\"https://blog.csdn.net/IT_LanTian/article/details/121356565\">Mockito详解</a></li>\n<li><a href=\"https://blog.csdn.net/b1480521874/article/details/100972837\">Mockito之打桩入门</a></li>\n<li><a href=\"https://blog.csdn.net/Aqu415/article/details/118445876\">Mockito之打桩进阶</a></li>\n<li><a href=\"https://blog.csdn.net/moshowgame/article/details/100983711\">Mockito之打桩详解</a></li>\n<li><a href=\"https://blog.csdn.net/dihuadihua/article/details/113190755\">Mockito之打桩精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30141957/article/details/81273829\">Mockito之Mock和Spy的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/csdn_tiger1993/article/details/127209370\">Mockito之Mock和Spy的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37514242/article/details/116958609\">Mockito之Mock和Spy的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/u011047968/article/details/91970070\">Mockito之@InjectMocks入门</a></li>\n<li><a href=\"https://blog.csdn.net/jieyingxiao/article/details/98217955\">Mockito之@InjectMocks进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lzhcoder/article/details/121466257\">Mockito之@InjectMocks详解</a></li>\n<li><a href=\"https://blog.csdn.net/tcctcszhanghao/article/details/107079445\">Mockito之修改字段</a></li>\n<li><a href=\"https://blog.csdn.net/jamesdoctor/article/details/50019103\">Mockito原理入门</a></li>\n<li><a href=\"https://juejin.cn/post/7034528267721768990\">Mockito原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/124044126\">Mockito原理之字节码增强技术</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Spock\"><a href=\"#Spock\" class=\"headerlink\" title=\"Spock\"></a>Spock</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/q15858187033/article/details/106940780\">Spock入门</a></li>\n<li><a href=\"https://blog.csdn.net/csdnlijingran/article/details/123405187\">Spock进阶</a></li>\n<li><a href=\"https://blog.csdn.net/vipshop_fin_dev/article/details/117908916\">Spock详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Assert-Test\"><a href=\"#Assert-Test\" class=\"headerlink\" title=\"Assert Test\"></a>Assert Test</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_34309543/article/details/89627307\">AssertJ入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_67401761/article/details/126553636\">AssertJ进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zuozewei/article/details/86567263\">AssertJ详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_52740442/article/details/118928219\">java测试工具详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Benchmark-Test\"><a href=\"#Benchmark-Test\" class=\"headerlink\" title=\"Benchmark Test\"></a>Benchmark Test</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_48121024/article/details/129145124\">java压力测试工具</a></li>\n<li><a href=\"https://blog.csdn.net/cky8792/article/details/100208747\">Jmeter与LoadRunner的区别</a></li>\n<li><a href=\"https://blog.csdn.net/basicworld/article/details/117828986\">Jmeter与Apache Benchmark的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40943297/article/details/96480607\">Jmeter详解</a></li>\n<li><a href=\"https://blog.csdn.net/sangyongjia/article/details/49093945\">Apache Benchmark详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq1620657419/article/details/111669194\">JMH详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Automation-Test\"><a href=\"#Automation-Test\" class=\"headerlink\" title=\"Automation Test\"></a>Automation Test</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44534541/article/details/108556764\">java自动化测试工具</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51156601/article/details/126886040\">自动化测试工具之playwright</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"WebContainer\"><a href=\"#WebContainer\" class=\"headerlink\" title=\"WebContainer\"></a>WebContainer</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/JAVA_MHH/article/details/115417612\">Spring内置容器切换</a></li>\n<li><a href=\"https://blog.csdn.net/yiyuzz/article/details/117169403\">tomcat和jetty、netty的区别</a></li>\n<li><a href=\"https://blog.csdn.net/kerongao/article/details/109576388\">如何在SpringBoot中不启动WebServer</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Tomcat\"><a href=\"#Tomcat\" class=\"headerlink\" title=\"Tomcat\"></a>Tomcat</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Jiangbohao_/article/details/107033497\">tomcat最大线程数、最大等待数和最大连接数</a></li>\n</ul>\n</blockquote>\n<h2 id=\"WebFlux\"><a href=\"#WebFlux\" class=\"headerlink\" title=\"WebFlux\"></a>WebFlux</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41805792/article/details/86605549\">WebFlux简介</a></li>\n<li><a href=\"https://blog.csdn.net/qq_65647788/article/details/124421641\">WebFlux入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhang33565417/article/details/122012459\">WebFlux进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43404873/article/details/112135552\">WebFlux详解</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/113201320\">WebFlux专题</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/112977951\">WebFlux演示</a></li>\n</ul>\n</blockquote>\n<h2 id=\"GraphQL\"><a href=\"#GraphQL\" class=\"headerlink\" title=\"GraphQL\"></a>GraphQL</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kevin_tech/article/details/120735500\">GraphQL详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"annotation","url":"/2017/07/01/lang/lang-1-java/junior/java-9-annotation/","content":"<h1 id=\"Annotation\"><a href=\"#Annotation\" class=\"headerlink\" title=\"Annotation\"></a>Annotation</h1><p>注意：java中的注解书写顺序没有要求，不像python中的装饰器对书写顺序有要求</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43888891/article/details/126963074\">java注解入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44885775/article/details/124265154\">java注解详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41378597/article/details/102934784\">java注解语法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29039853/article/details/83931196\">java注解属性</a></li>\n<li><a href=\"https://blog.csdn.net/zbw125/article/details/110413226\">java常用注解</a></li>\n<li><a href=\"https://blog.csdn.net/ai_xao/article/details/113863105\">java重复注解</a></li>\n<li><a href=\"https://blog.csdn.net/chengqiuming/article/details/95854279\">java类型注解</a></li>\n<li><a href=\"https://blog.csdn.net/agonie201218/article/details/125105295\">java继承注解</a></li>\n<li><a href=\"https://blog.csdn.net/csdn_zaw/article/details/107189808\">java组合注解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42272869/article/details/122300822\">java校验注解</a></li>\n<li><a href=\"https://blog.csdn.net/a__int__/article/details/108279340\">java注解和python装饰器对比</a></li>\n<li><a href=\"https://blog.csdn.net/qdPython/article/details/115575719\">Python装饰器执行顺序详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Annotation（Custom）\"><a href=\"#Annotation（Custom）\" class=\"headerlink\" title=\"Annotation（Custom）\"></a>Annotation（Custom）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43737917/article/details/107952140\">java自定义注解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Annotation（Processor）\"><a href=\"#Annotation（Processor）\" class=\"headerlink\" title=\"Annotation（Processor）\"></a>Annotation（Processor）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/caoshen2014/article/details/100642435\">java注解处理器入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45295475/article/details/121595963\">java注解处理器详解</a></li>\n<li><a href=\"https://blog.csdn.net/czz__czz/article/details/109714724\">java注解处理器之APT和JavaPoet</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43621091/article/details/107080827\">java注解处理器之APT详解</a></li>\n<li><a href=\"https://blog.csdn.net/IO_Field/article/details/89355941\">java注解处理器之JavaPoet详解</a></li>\n<li><a href=\"https://blog.csdn.net/A_zhenzhen/article/details/86065063\">java注解处理器之修改语法树</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Utils\"><a href=\"#Utils\" class=\"headerlink\" title=\"Utils\"></a>Utils</h1><h2 id=\"Java\"><a href=\"#Java\" class=\"headerlink\" title=\"Java\"></a>Java</h2><h2 id=\"Apache-Commons\"><a href=\"#Apache-Commons\" class=\"headerlink\" title=\"Apache Commons\"></a>Apache Commons</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/han12398766/article/details/104629878\">Apache Commons AnnotationUtils详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Google-Guava\"><a href=\"#Google-Guava\" class=\"headerlink\" title=\"Google Guava\"></a>Google Guava</h2>","categories":["+ lang + java + junior"],"tags":["+ java"]},{"title":"spring-data","url":"/2017/07/01/lang/lang-1-java/senior/java-3-spring-data/","content":"<h1 id=\"SpringData\"><a href=\"#SpringData\" class=\"headerlink\" title=\"SpringData\"></a>SpringData</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011213044/article/details/104453319\">SpringData详解</a></li>\n<li><a href=\"https://blog.csdn.net/TingheZhang/article/details/123533294\">数据库分类入门</a></li>\n<li><a href=\"https://blog.csdn.net/uiuan00/article/details/103005496\">数据库分类进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wangshihuidev/article/details/99894621\">数据库分类详解</a></li>\n<li><a href=\"https://blog.csdn.net/killingbow/article/details/53809379\">数据库存储模型</a></li>\n<li><a href=\"https://blog.csdn.net/hebtu666/article/details/102667316\">关系数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/wohu1104/article/details/119839487\">键值数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/miaoyibo12/article/details/121084366\">文档数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/a13407142317/article/details/109188295\">图形数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/lifewujianqiang/article/details/112325024\">时序数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/margiex2/article/details/106974790\">列式数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/Forward__/article/details/80472665\">行式存储和列式存储入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43543789/article/details/108662140\">行式存储和列式存储进阶</a></li>\n<li><a href=\"https://blog.csdn.net/allensandy/article/details/107683827\">行式存储和列式存储详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39007083/article/details/120348781\">行式存储和列式存储精进</a></li>\n<li><a href=\"https://blog.csdn.net/PUSHIAI/article/details/119456030\">图形数据库可视化工具详解</a></li>\n</ul>\n</blockquote>\n<p>按应用场景分</p>\n<ul>\n<li>关系数据库：Mysql、PostgreSQL、Oracle、SqlServer、SQLite</li>\n<li>键值数据库：Redis、Memcached、LevelDB、RocksDB、Tair</li>\n<li>文档数据库：MongoDB</li>\n<li>图形数据库：Neo4j</li>\n<li>时序数据库：OpenTSDB、InfluxDB</li>\n<li>列式数据库：Hbase</li>\n</ul>\n<p>按存储方式分</p>\n<ul>\n<li>行式存储数据库 </li>\n<li>列式存储数据库</li>\n<li>键值存储数据库</li>\n<li>文档存储数据库</li>\n<li>图形存储数据库</li>\n</ul>\n<h1 id=\"SpringMysql\"><a href=\"#SpringMysql\" class=\"headerlink\" title=\"SpringMysql\"></a>SpringMysql</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/103721782\">JDBC和JPA的区别</a></li>\n<li><a href=\"https://blog.csdn.net/jonwu0102/article/details/81476189\">mysql与java数据类型对应关系</a></li>\n<li><a href=\"https://blog.csdn.net/cenxuu/article/details/86685662\">数据库变更管理入门</a></li>\n<li><a href=\"https://blog.csdn.net/Herishwater/article/details/128073106\">数据库变更管理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hhejunn/article/details/118942807\">数据库变更管理详解</a></li>\n<li><a href=\"https://blog.csdn.net/lc1025082182/article/details/122442411\">数据库版本管理入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42073629/article/details/105804305\">数据库版本管理详解</a></li>\n<li><a href=\"https://blog.csdn.net/kingwinstar/article/details/118513044\">数据库密码加密详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bobozai86/article/details/106595167\">sql方言入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45309636/article/details/108740212\">sql方言进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yxl_1207/article/details/81293134\">sql方言详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Jdbc\"><a href=\"#Jdbc\" class=\"headerlink\" title=\"Jdbc\"></a>Jdbc</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_22172133/article/details/81266048\">Jdbc入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53601359/article/details/115574284\">Jdbc进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37761437/article/details/110468944\">Jdbc详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013905744/article/details/52437597\">Jdbc之DriverManager和DataSource</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52687456/article/details/120127179\">Jdbc之Connection入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44945344/article/details/107497826\">Jdbc之Connection进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39591031/article/details/110900414\">Jdbc之Connection详解</a></li>\n<li><a href=\"https://blog.csdn.net/liaoshanggang/article/details/70173413\">Jdbc之Statement入门</a></li>\n<li><a href=\"https://blog.csdn.net/xiaodanjava/article/details/8127805\">Jdbc之Statement进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Re_view/article/details/97260270\">Jdbc之Statement详解</a></li>\n<li><a href=\"https://blog.csdn.net/zl5230/article/details/105233436\">Jdbc之ResultSet入门</a></li>\n<li><a href=\"https://blog.csdn.net/rart2008/article/details/5634612\">Jdbc之ResultSet进阶</a></li>\n<li><a href=\"https://blog.csdn.net/de273364045/article/details/84423669\">Jdbc之ResultSet详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"JdbcUtils\"><a href=\"#JdbcUtils\" class=\"headerlink\" title=\"JdbcUtils\"></a>JdbcUtils</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43908649/article/details/110239301\">JdbcUtils入门</a></li>\n<li><a href=\"https://blog.csdn.net/csucsgoat/article/details/115685094\">JdbcUtils详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"JdbcTemplate\"><a href=\"#JdbcTemplate\" class=\"headerlink\" title=\"JdbcTemplate\"></a>JdbcTemplate</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40001125/article/details/88538576\">JdbcTemplate入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40643699/article/details/115582536\">JdbcTemplate详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Jpa\"><a href=\"#Jpa\" class=\"headerlink\" title=\"Jpa\"></a>Jpa</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/localhost01/article/details/83422893\">Jpa入门</a></li>\n<li><a href=\"https://blog.csdn.net/snailisBigbull/article/details/97288828\">Jpa进阶</a></li>\n<li><a href=\"https://blog.csdn.net/CZW2181119177/article/details/126172117\">Jpa详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Hibernate\"><a href=\"#Hibernate\" class=\"headerlink\" title=\"Hibernate\"></a>Hibernate</h4><blockquote>\n<ul>\n<li><a href=\"https://hibernate.net.cn/\">Hibernate文档</a></li>\n<li><a href=\"https://blog.csdn.net/yerenyuan_pku/article/details/52733275\">Hibernate入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45384482/article/details/107589613\">Hibernate详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"JpaTemplate\"><a href=\"#JpaTemplate\" class=\"headerlink\" title=\"JpaTemplate\"></a>JpaTemplate</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bigtree_3721/article/details/50835903\">JpaTemplate入门</a></li>\n<li><a href=\"https://blog.csdn.net/ydonghao2/article/details/107057022\">JpaTemplate进阶</a></li>\n<li><a href=\"https://blog.csdn.net/loushangdeanshi/article/details/105612514\">JpaTemplate详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Mybatis\"><a href=\"#Mybatis\" class=\"headerlink\" title=\"Mybatis\"></a>Mybatis</h3><blockquote>\n<ul>\n<li><a href=\"https://mybatis.org/mybatis-3/zh/getting-started.html\">Mybatis文档</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42662759/article/details/116535649\">Mybatis入门</a></li>\n<li><a href=\"https://blog.csdn.net/li643937579/article/details/109194467\">Mybatis进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Xzh_java/article/details/125090765\">Mybatis详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38192427/article/details/123279599\">Mybatis核心</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37495786/article/details/82799910\">Mybatis日志</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37989980/article/details/104521920\">mybatis-generator详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h4><h5 id=\"SqlSession\"><a href=\"#SqlSession\" class=\"headerlink\" title=\"SqlSession\"></a>SqlSession</h5><blockquote>\n<ul>\n<li><a href=\"http://www.mybatis.cn/archives/28.html\">Mybatis之SqlSession入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43860634/article/details/127523712\">Mybatis之SqlSession进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38192427/article/details/123298724\">Mybatis之SqlSession详解</a></li>\n<li><a href=\"https://blog.csdn.net/Zhs901026/article/details/103997750\">Mybatis之SqlSession线程安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/wuqinduo/article/details/103750005\">Mybatis之SqlSession和Connection入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011649691/article/details/116045188\">Mybatis之SqlSession和Connection进阶</a></li>\n<li><a href=\"https://blog.csdn.net/AiMaiShanHuHai/article/details/102984764\">Mybatis之SqlSession和Connection详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42419406/article/details/118974116\">Mybatis之SqlSession和Statement入门</a></li>\n<li><a href=\"https://blog.csdn.net/javageektech/article/details/96539536\">Mybatis之SqlSession和Statement进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Zack_tzh/article/details/112281176\">Mybatis之SqlSession和Statement详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45085295/article/details/121284367\">Mybatis之SqlSession和ResultMap</a></li>\n<li><a href=\"https://blog.csdn.net/zhoushimiao1990/article/details/99944357\">Mybatis之SqlSession和ResultMap</a></li>\n<li><a href=\"https://blog.csdn.net/qq_14945437/article/details/105227392\">Mybatis之SqlSession和ResultMap</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42412601/article/details/104807547\">Mybatis之SqlSession和Mapper入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16159433/article/details/121128555\">Mybatis之SqlSession和Mapper进阶</a></li>\n<li><a href=\"https://blog.csdn.net/AiMaiShanHuHai/article/details/102985294\">Mybatis之SqlSession和Mapper详解</a></li>\n<li><a href=\"https://blog.csdn.net/yqf66/article/details/108347742\">SqlSessionTemplate入门</a></li>\n<li><a href=\"https://blog.csdn.net/yu_kang/article/details/88941908\">SqlSessionTemplate进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010841296/article/details/89367296\">SqlSessionTemplate详解</a></li>\n<li><a href=\"https://blog.csdn.net/Yang975222579/article/details/119540063\">SqlSessionManager入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45074341/article/details/113568774\">SqlSessionManager进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44479910/article/details/87185628\">SqlSessionManager详解</a></li>\n</ul>\n</blockquote>\n<p>SqlSession是对Connection和Statement的高级封装</p>\n<h5 id=\"Mapper\"><a href=\"#Mapper\" class=\"headerlink\" title=\"Mapper\"></a>Mapper</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44238142/article/details/89391282\">Mybatis之Mapper入门</a></li>\n<li><a href=\"https://blog.csdn.net/song_hai_lei/article/details/121425311\">Mybatis之Mapper进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42192693/article/details/116446346\">Mybatis之Mapper详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43883917/article/details/113830667\">Mybatis之Mapper注解入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43791238/article/details/93527217\">Mybatis之Mapper注解进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46138492/article/details/129477550\">Mybatis之Mapper注解详解</a></li>\n<li><a href=\"https://blog.csdn.net/wolfcode_cn/article/details/82665660\">Mybatis之Mapper原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011567616/article/details/112695283\">Mybatis之Mapper原理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Howinfun/article/details/106383895\">Mybatis之Mapper原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/zmx729618/article/details/78646328\">Mybatis之Mapper实现类是什么时候生成的</a></li>\n<li><a href=\"https://blog.csdn.net/chenxiaozhou0955/article/details/101040147\">Mybatis之Mapper线程安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/dwf_android/article/details/79359360\">Mybatis通用Mapper详解</a></li>\n<li><a href=\"https://blog.csdn.net/isea533/article/details/78493852\">Mybatis通用Mapper原理</a></li>\n<li><a href=\"https://blog.csdn.net/baidu_27414099/article/details/104440442\">Mybatis映射之Mapper和xml的映射规范</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36658706/article/details/109582557\">Mybatis映射之Mapper的方法重载</a></li>\n</ul>\n</blockquote>\n<p>Mapper是对SqlSession的高级封装</p>\n<p>Mapper执行sql是通过SqlSession和ThreadLocal实现的</p>\n<ul>\n<li>无事务时每次都创建新的SqlSession（不共享）</li>\n<li>有事务时用ThreadLocal存储SqlSession并重复使用（事务结束后会销毁）</li>\n</ul>\n<blockquote>\n<p>ps：SqlSession不是线程安全的，但是每次都创建新的SqlSession和用ThreadLocal存储SqlSession可以保证Mapper是线程安全的</p>\n</blockquote>\n<h4 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h4><h5 id=\"Field\"><a href=\"#Field\" class=\"headerlink\" title=\"Field\"></a>Field</h5><h6 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44290077/article/details/119582418\">Mybatis插入后返回id</a></li>\n<li><a href=\"https://blog.csdn.net/sswqzx/article/details/84337921\">Mybatis主键生成策略</a></li>\n<li><a href=\"https://blog.csdn.net/my_momo_csdn/article/details/88535993\">Mybatis主键之自增ID</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36956154/article/details/79806482\">Mybatis主键之UUID</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53402685/article/details/124253722\">Mybatis主键之雪花ID</a></li>\n</ul>\n</blockquote>\n<p>返回主键方案</p>\n<ul>\n<li>数据库支持主键自增时：useGeneratedKeys + keyProperty</li>\n<li>数据库不支持主键自增时：selectKey</li>\n</ul>\n<h6 id=\"mapping\"><a href=\"#mapping\" class=\"headerlink\" title=\"mapping\"></a>mapping</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37040929/article/details/120615716\">Mybatis映射之bean属性名和数据库列名的匹配规则</a></li>\n<li><a href=\"https://blog.csdn.net/wuzhenwei0419/article/details/90643798\">Mybatis映射之实体类中的属性名和表中的字段名不一样怎么办</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Param\"><a href=\"#Param\" class=\"headerlink\" title=\"Param\"></a>Param</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Mrqiang9001/article/details/79520436\">MyBatis参数之@Param注解详解</a></li>\n<li><a href=\"https://blog.csdn.net/neusoft2016/article/details/110818507\">MyBatis参数之@Param到底需不需要加</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SGLP521/article/details/121509714\">MyBatis查询之动态sql</a></li>\n</ul>\n</blockquote>\n<p>动态 sql 标签</p>\n<ul>\n<li><code>&lt;if&gt;&lt;/if&gt;</code></li>\n<li><code>&lt;choose&gt;&lt;/choose&gt;(when, otherwise)</code></li>\n<li><code>&lt;foreach&gt;&lt;/foreach&gt;</code></li>\n<li><code>&lt;where&gt;&lt;/where&gt;</code></li>\n<li><code>&lt;set&gt;&lt;/set&gt;</code></li>\n<li><code>&lt;trim&gt;&lt;/trim&gt;</code></li>\n<li><code>&lt;bind/&gt;</code></li>\n</ul>\n<h6 id=\"fuzzy（模糊查询）\"><a href=\"#fuzzy（模糊查询）\" class=\"headerlink\" title=\"fuzzy（模糊查询）\"></a>fuzzy（模糊查询）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhenwei1994/article/details/81876278\">Mybatis模糊查询之like查询</a></li>\n</ul>\n</blockquote>\n<h6 id=\"pagenation（分页查询）\"><a href=\"#pagenation（分页查询）\" class=\"headerlink\" title=\"pagenation（分页查询）\"></a>pagenation（分页查询）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fhuqw/article/details/120635254\">Mybatis分页入门</a></li>\n<li><a href=\"https://blog.csdn.net/wojiao228925661/article/details/82051654\">Mybatis分页进阶</a></li>\n<li><a href=\"https://blog.csdn.net/huweiliyi/article/details/107910959\">Mybatis分页详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43505211/article/details/128050083\">Mybatis拦截器详解</a></li>\n<li><a href=\"https://pagehelper.github.io/\">Mybatis之PageHelper文档</a></li>\n<li><a href=\"https://blog.csdn.net/csucsgoat/article/details/116680557\">Mybatis之PageHelper入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37699336/article/details/113795004\">Mybatis之PageHelper进阶</a></li>\n<li><a href=\"https://blog.csdn.net/admin123404/article/details/114674158\">Mybatis之PageHelper详解</a></li>\n<li><a href=\"https://blog.csdn.net/MarcoAsensio/article/details/104942041\">Mybatis之PageHelper原理</a></li>\n</ul>\n</blockquote>\n<p>分页查询方案</p>\n<ul>\n<li>使用RowBounds来完成内存分页（它是针对ResultSet结果集执行的内存分页，而非物理分页）</li>\n<li>直接在sql中写分页条件来完成物理分页</li>\n<li>通过分页插件来完成物理分页</li>\n</ul>\n<blockquote>\n<p>ps：分页插件的基本原理是使用Mybatis提供的插件接口，实现自定义插件，在插件的拦截方法内拦截待执行的 sql并改写sql，改写时会根据方言（dialect）添加对应的物理分页条件</p>\n</blockquote>\n<h6 id=\"reference（关联查询）\"><a href=\"#reference（关联查询）\" class=\"headerlink\" title=\"reference（关联查询）\"></a>reference（关联查询）</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010358168/article/details/118193792\">MyBatis关联查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37829947/article/details/117229334\">MyBatis关联查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44276313/article/details/115719525\">MyBatis关联查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/sayyy/article/details/107672721\">MyBatis关联查询之使用association实现一对一关联</a></li>\n<li><a href=\"https://sayyy.blog.csdn.net/article/details/120106764\">MyBatis关联查询之使用collection实现一对多关联</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43700340/article/details/124104386\">MyBatis关联查询之懒加载和急加载</a></li>\n<li><a href=\"https://blog.csdn.net/WSheng_Pyhon/article/details/113527471\">MyBatis关联查询之懒加载原理</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>一对一查询（selectOne）： association + join、association + select</li>\n<li>一对多查询（selectOne）：collection + join、collection + select</li>\n<li>多对一查询（selectMany）： association + join、association + select</li>\n<li>多对多查询（selectMany）：collection + join、collection + select</li>\n</ul>\n<blockquote>\n<p>ps： <code>多对一</code> 本质上还是 <code>一对一</code> ， <code>多对多</code> 本质上还是 <code>一对多</code></p>\n</blockquote>\n<h4 id=\"Extend\"><a href=\"#Extend\" class=\"headerlink\" title=\"Extend\"></a>Extend</h4><h5 id=\"tkMybatis\"><a href=\"#tkMybatis\" class=\"headerlink\" title=\"tkMybatis\"></a>tkMybatis</h5><blockquote>\n<ul>\n<li><a href=\"https://github.com/wanghengbin/tk-mybatis\">tkMybatis文档</a></li>\n<li><a href=\"https://blog.csdn.net/dgh112233/article/details/117372645\">tkMybatis详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_32247833/article/details/103335446\">tkMybatis主键策略</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42707397/article/details/96437150\">tkMybatis主键之UUID</a></li>\n<li><a href=\"https://blog.csdn.net/dai909237869/article/details/111176110\">tkMybatis主键之雪花ID</a></li>\n<li><a href=\"https://blog.csdn.net/u011923621/article/details/116292375\">tk-mybatis-generator详解</a></li>\n</ul>\n</blockquote>\n<p>ps：insert、update有Selective方法代表插入或者更新非null字段</p>\n<h5 id=\"MybatisPlus\"><a href=\"#MybatisPlus\" class=\"headerlink\" title=\"MybatisPlus\"></a>MybatisPlus</h5><blockquote>\n<ul>\n<li><a href=\"https://baomidou.com/\">MybatisPlus文档</a></li>\n<li><a href=\"https://blog.csdn.net/zdsg45/article/details/105138493\">MybatisPlus详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44313584/article/details/109701993\">MybatisPlus主键策略</a></li>\n<li><a href=\"https://blog.csdn.net/u010638673/article/details/88891122\">MybatisPlus主键之UUID</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/126464497\">MybatisPlus主键之雪花ID</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42682745/article/details/120626012\">mybatis-plus-generator详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"MyBatisFlex\"><a href=\"#MyBatisFlex\" class=\"headerlink\" title=\"MyBatisFlex\"></a>MyBatisFlex</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/boonya/article/details/130059483\">MyBatisFlex和MybatisPlus对比</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h4><h5 id=\"和-的区别\"><a href=\"#和-的区别\" class=\"headerlink\" title=\"${}和#{}的区别\"></a>${}和#{}的区别</h5><ul>\n<li>${}是属性替换符，生成sql时会直接替换成属性的值（不会被转义）</li>\n<li>#{}是参数占位符，生成sql时会被处理为问号并通过PreparedStatement设置参数执行（会转义）</li>\n</ul>\n<h5 id=\"where中的1-x3D-1的作用\"><a href=\"#where中的1-x3D-1的作用\" class=\"headerlink\" title=\"where中的1&#x3D;1的作用\"></a>where中的1&#x3D;1的作用</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46163590/article/details/114222511\">MyBatis查询之where中1&#x3D;1入门</a></li>\n<li><a href=\"https://blog.csdn.net/idomyway/article/details/78903822\">MyBatis查询之where中1&#x3D;1详解</a></li>\n<li><a href=\"https://blog.csdn.net/shouchenchuan5253/article/details/104021767\">MyBatis查询之where中1&#x3D;1会影响性能吗</a></li>\n<li><a href=\"https://blog.csdn.net/xinpz/article/details/108669742\">MyBatis查询之where中1&#x3D;1会影响索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/Z__Sheng/article/details/110049009\">MyBatis查询之where中1&#x3D;1的更优替代方案</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h4><h5 id=\"Cache\"><a href=\"#Cache\" class=\"headerlink\" title=\"Cache\"></a>Cache</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010953880/article/details/104412646\">Mybatis缓存入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42100694/article/details/113729891\">Mybatis缓存进阶</a></li>\n<li><a href=\"https://blog.csdn.net/2301_76672095/article/details/129205895\">Mybatis缓存详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"一级缓存\"><a href=\"#一级缓存\" class=\"headerlink\" title=\"一级缓存\"></a>一级缓存</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/heroqiang/article/details/85339834\">Mybatis缓存之一级缓存的缓存一致性问题</a></li>\n</ul>\n</blockquote>\n<p>一级缓存是session范围的</p>\n<p>问题为BSession的更新不会使ASession的缓存失效，ASession再次查询时还会读缓存，导致BSession数据的更新读不到</p>\n<h6 id=\"二级缓存\"><a href=\"#二级缓存\" class=\"headerlink\" title=\"二级缓存\"></a>二级缓存</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39312465/article/details/86624486\">Mybatis缓存之二级缓存的缓存一致性问题</a></li>\n</ul>\n</blockquote>\n<p>二级缓存是mapper范围的</p>\n<p>问题为BMapper的更新不会使AMapper的缓存失效，AMapper再次查询时还会读缓存，导致BMapper数据的更新读不到</p>\n<h2 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h2><h3 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/donggua3694857/article/details/69858827\">Spring事务入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58761900/article/details/129032525\">Spring事务进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kangkang12221222/article/details/123482521\">Spring事务详解</a></li>\n<li><a href=\"https://blog.csdn.net/wei_gg/article/details/115575391\">Spring事务之线程安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/crazestone0614/article/details/127619563\">Spring事务之线程隔离详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Usage-1\"><a href=\"#Usage-1\" class=\"headerlink\" title=\"Usage\"></a>Usage</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mufeng633/article/details/88552245\">spring事务的实现方式</a></li>\n<li><a href=\"https://blog.csdn.net/xieqj_0511/article/details/129277531\">TransactionTemplate详解</a></li>\n<li><a href=\"https://blog.csdn.net/bklydxz/article/details/116266200\">TransactionManager详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37683758/article/details/71079904\">TransactionProxyFactoryBean详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33738982/article/details/92259663\">TransactionProxyFactoryBean原理</a></li>\n<li><a href=\"https://blog.csdn.net/robinson_911/article/details/124122457\">TransactionSynchronizationManager详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>编程式事务管理：TransactionTemplate、TransactionManager</li>\n<li>声明式事务管理：@Transactional、TransactionProxyFactoryBean</li>\n<li>配置式事务管理：Aspectj AOP</li>\n</ul>\n<h3 id=\"Invalid\"><a href=\"#Invalid\" class=\"headerlink\" title=\"Invalid\"></a>Invalid</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hanjiaqian/article/details/120501741\">Spring事务失效的场景</a></li>\n</ul>\n</blockquote>\n<p>事务不生效的场景</p>\n<ul>\n<li>所有AOP失效的场景</li>\n<li>多线程或者异步调用（事务是线程隔离的）</li>\n</ul>\n<p>事务不回滚的场景</p>\n<ul>\n<li>异常被吞掉了</li>\n<li>未指定rollbackFor参数时抛出的异常不是RuntimeException</li>\n<li>指定rollbackFor参数时抛出的异常和指定的异常不匹配</li>\n</ul>\n<blockquote>\n<p>ps：@Transactional是通过AOP实现的，所以失效的场景包含AOP失效的场景</p>\n</blockquote>\n<h3 id=\"Isolation\"><a href=\"#Isolation\" class=\"headerlink\" title=\"Isolation\"></a>Isolation</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38526573/article/details/87898730\">Spring事务隔离级别详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Propagation\"><a href=\"#Propagation\" class=\"headerlink\" title=\"Propagation\"></a>Propagation</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_36162966/article/details/106575192\">Spring事务传播入门</a></li>\n<li><a href=\"https://blog.csdn.net/t_t2_3/article/details/114548914\">Spring事务传播进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yanyan19880509/article/details/53041564\">Spring事务传播详解</a></li>\n<li><a href=\"https://blog.csdn.net/wit_cx/article/details/107939546\">Spring事务传播之NESTED和REQUIRED的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/yanxin1213/article/details/100582643\">Spring事务传播之NESTED和REQUIRED的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/CPLASF_/article/details/119293129\">Spring事务传播之挂起事务和恢复事务</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39355504/article/details/109893065\">Spring事务传播之事务方法和非事务方法的调用问题</a></li>\n<li><a href=\"https://blog.csdn.net/levae1024/article/details/82998386\">Spring事务传播之不同类的事务方法和事务方法的调用问题</a></li>\n<li><a href=\"https://blog.csdn.net/libusi001/article/details/127355073\">Spring事务传播之同一个类的事务方法和事务方法的调用问题</a></li>\n</ul>\n</blockquote>\n<p>事务传播方式处理的是1个请求里面多个@Transactional注解的关系，比如加入事务或者新建事务等等</p>\n<ul>\n<li>新建事务<ul>\n<li>PROPAGATION_REQUIRED：如果当前存在事务就加入当前事务，否则就新建事务运行</li>\n<li>PROPAGATION_REQUIRES_NEW：不管当前存不存在事务都新建事务运行</li>\n<li>PROPAGATION_NESTED：如果当前存在事务就开启嵌套事务运行，否则就新建事务运行</li>\n</ul>\n</li>\n<li>非事务运行<ul>\n<li>PROPAGATION_SUPPORTS：如果当前存在事务就加入当前事务，否则就以非事务的方式运行</li>\n<li>PROPAGATION_NOT_SUPPORTED：不管当前存不存在事务都以非事务的方式运行</li>\n</ul>\n</li>\n<li>抛异常<ul>\n<li>PROPAGATION_MANDATORY：如果当前存在事务就加入当前事务，否则就抛出异常</li>\n<li>PROPAGATION_NEVER：如果当前存在事务就抛出异常，否则以非事务的方式运行</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：传播方式为PROPAGATION_REQUIRES_NEW和PROPAGATION_NOT_SUPPORTED时如果存在当前事务，当前事务会被挂起</p>\n</blockquote>\n<h3 id=\"Asynchronous\"><a href=\"#Asynchronous\" class=\"headerlink\" title=\"Asynchronous\"></a>Asynchronous</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sinat_36454672/article/details/106937905\">Spring事务之@Async和插入后查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/LOVE_sel/article/details/89715198\">Spring事务之@Async和更新后查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40085888/article/details/107664805\">Spring事务和@Async混合使用入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34540951/article/details/114251004\">Spring事务之@Async混合使用详解</a></li>\n<li><a href=\"https://blog.csdn.net/f641385712/article/details/98642777\">Spring事务和@Async混合之线程隔离</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37044995/article/details/118857239\">Spring事务之提交成功后再进行异步操作入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32495261/article/details/108275743\">Spring事务之提交成功后再进行异步操作进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32519415/article/details/113850117\">Spring事务之提交成功后再进行异步操作详解</a></li>\n</ul>\n</blockquote>\n<p>事务方法A调用异步方法B会启动另一个事务B（因为事务是线程隔离的），因为事务A和B之间存在隔离性，所以异步方法B执行时，如果事务方法A未结束时是查不到变更的数据的（因为此时事务A还未提交），如果事务方法A已结束是可以查到变更的数据的（因为此时事务A已提交）</p>\n<h3 id=\"MultipleThread\"><a href=\"#MultipleThread\" class=\"headerlink\" title=\"MultipleThread\"></a>MultipleThread</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41070914/article/details/107211146\">Spring事务之多线程回滚入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43842467/article/details/105836914\">Spring事务之多线程回滚进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010978399/article/details/117771620\">Spring事务之多线程回滚详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jifashihan/article/details/108323991\">Spring事务之为什么要加在Service层</a></li>\n<li><a href=\"https://blog.csdn.net/m0_48203500/article/details/124164863\">Spring事务之到底能不能加到Controller层</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem\"></a>Problem</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BigBull111/article/details/115506713\">Spring事务之同一事务中更新后查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/shy_1762538422/article/details/111949987\">Spring事务之同一事务中更新后查询详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringCache\"><a href=\"#SpringCache\" class=\"headerlink\" title=\"SpringCache\"></a>SpringCache</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Sqdmn/article/details/106974843\">JavaCache详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32448349/article/details/101696892\">SpringCache详解</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/109164728\">Spring多级缓存</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37391229/article/details/118522247\">EhCache详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29595463/article/details/117516508\">GuavaCache详解</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/113751575\">Caffeine详解</a></li>\n<li><a href=\"https://blog.csdn.net/lgxzzz/article/details/123902871\">Caffeine和EhCache对比</a></li>\n<li><a href=\"https://blog.csdn.net/zhangyunfeihhhh/article/details/108105928\">Caffeine和Guava对比</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Framework-1\"><a href=\"#Framework-1\" class=\"headerlink\" title=\"Framework\"></a>Framework</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/youanyyou/article/details/104666500\">Jedis和Redisson对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46485771/article/details/122898882\">Jedis和Redisson对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41715077/article/details/102403763\">Jedis和Redisson对比详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Jedis\"><a href=\"#Jedis\" class=\"headerlink\" title=\"Jedis\"></a>Jedis</h3><blockquote>\n<ul>\n<li><a href=\"\"></a></li>\n<li><a href=\"\"></a></li>\n<li><a href=\"\"></a></li>\n</ul>\n</blockquote>\n<h3 id=\"Redisson\"><a href=\"#Redisson\" class=\"headerlink\" title=\"Redisson\"></a>Redisson</h3><blockquote>\n<ul>\n<li><a href=\"\"></a></li>\n<li><a href=\"\"></a></li>\n<li><a href=\"\"></a></li>\n</ul>\n</blockquote>\n<h3 id=\"RedisTemplate\"><a href=\"#RedisTemplate\" class=\"headerlink\" title=\"RedisTemplate\"></a>RedisTemplate</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zzvar/article/details/118388897\">RedisTemplate入门</a></li>\n<li><a href=\"https://blog.csdn.net/Ruby_One/article/details/79141940\">RedisTemplate进阶</a></li>\n<li><a href=\"https://blog.csdn.net/csdn2497242041/article/details/102675435\">RedisTemplate详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringMongoDB\"><a href=\"#SpringMongoDB\" class=\"headerlink\" title=\"SpringMongoDB\"></a>SpringMongoDB</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013190145/article/details/110847118\">SpringMongoDB入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42799615/article/details/113844852\">SpringMongoDB进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46112274/article/details/117425532\">SpringMongoDB详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringElasticsearch\"><a href=\"#SpringElasticsearch\" class=\"headerlink\" title=\"SpringElasticsearch\"></a>SpringElasticsearch</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hzj_java/article/details/118096157\">SpringElasticsearch入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44757034/article/details/119785326\">SpringElasticsearch进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45297578/article/details/116273017\">SpringElasticsearch详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-security","url":"/2017/07/01/lang/lang-1-java/senior/java-4-spring-security/","content":"<h1 id=\"Security\"><a href=\"#Security\" class=\"headerlink\" title=\"Security\"></a>Security</h1><h2 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/penriver/article/details/119875226\">java安全体系详解</a></li>\n<li><a href=\"https://blog.csdn.net/gonghaiyu/article/details/109151198\">java使用无限制的加密算法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29689487/article/details/81634057\">对称加密和非对称加密的区别</a></li>\n<li><a href=\"https://blog.csdn.net/boweiqiang/article/details/105737017\">加密（Encryption）和签名（Signature）的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44848480/article/details/129037634\">认证（Authentication）和授权（Authorization）详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Crypto：密码（学）</li>\n<li>Cipher：密码（工具）</li>\n<li>Secret：密钥（密码）、密文</li>\n<li>SecretKey：秘钥</li>\n<li>PublicKey：公钥</li>\n<li>PrivateKey：私钥</li>\n<li>Encrypt&#x2F;Encryption：加密</li>\n<li>Decrypt&#x2F;Decryption：解密</li>\n<li>Sign&#x2F;Signature：签名</li>\n<li>Verify&#x2F;Verification：校验</li>\n<li>Authenticate&#x2F;Authentication：认证</li>\n<li>Authorize&#x2F;Authorization：授权</li>\n</ul>\n<h3 id=\"Secret\"><a href=\"#Secret\" class=\"headerlink\" title=\"Secret\"></a>Secret</h3><p>密钥 加密的钥匙，分为 <code>非对称密钥</code> 和 <code>对称密钥</code></p>\n<ul>\n<li>非对称密钥：包含<code>秘钥</code>（需要秘密保存的钥匙，不能泄露），加密和解密都是同一把钥匙</li>\n<li>对称密钥：包含<code>公钥</code>（需要公开的钥匙）和<code>私钥</code>（需要私藏的钥匙），其中一把加密，必须用另一把钥匙解密</li>\n</ul>\n<blockquote>\n<p>ps： <code>公钥</code> 和 <code>私钥</code> 都具备加密和解密的功能，但是不能自己加密又自己解密，如果其中一把钥匙既能加密又能自己解密，那就相当于 <code>秘钥</code> 了</p>\n</blockquote>\n<h3 id=\"Auth\"><a href=\"#Auth\" class=\"headerlink\" title=\"Auth\"></a>Auth</h3><p><code>认证</code> 的作用：验证用户的身份<br><code>授权</code> 的作用：检验用户的权限</p>\n<h2 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37771475/article/details/86153799\">SpringSecurity入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43847283/article/details/124075302\">SpringSecurity详解</a></li>\n<li><a href=\"https://blog.csdn.net/Jianyang_usst/article/details/121381839\">SpringSecurity之过滤链FilterChain</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45393094/article/details/104929720\">ApacheShiro入门</a></li>\n<li><a href=\"https://blog.csdn.net/Yearingforthefuture/article/details/117384035\">ApacheShiro详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42759582/article/details/113853921\">SpringSecurity和ApacheShiro对比</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39652397/article/details/123070913\">不再推荐使用WebSecurityConfigurerAdapter</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SecureRandom\"><a href=\"#SecureRandom\" class=\"headerlink\" title=\"SecureRandom\"></a>SecureRandom</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/white_hats/article/details/89382843\">java安全之SecureRandom入门</a></li>\n<li><a href=\"https://blog.csdn.net/libusi001/article/details/113586904\">java安全之SecureRandom进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31635851/article/details/120203046\">java安全之SecureRandom详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"MessageDigest\"><a href=\"#MessageDigest\" class=\"headerlink\" title=\"MessageDigest\"></a>MessageDigest</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lanfeng_lan/article/details/120868628\">java安全之MessageDigest入门</a></li>\n<li><a href=\"https://blog.csdn.net/xiao__gui/article/details/8148203\">java安全之MessageDigest进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41918166/article/details/115552035\">java安全之MessageDigest详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Cipher\"><a href=\"#Cipher\" class=\"headerlink\" title=\"Cipher\"></a>Cipher</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/b1303110335/article/details/109717838\">java安全之Cipher入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/106170060\">java安全之Cipher进阶</a></li>\n<li><a href=\"https://blog.csdn.net/SeptDays/article/details/121102385\">java安全之Cipher详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"KeyGenerator\"><a href=\"#KeyGenerator\" class=\"headerlink\" title=\"KeyGenerator\"></a>KeyGenerator</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42272869/article/details/124293081\">java安全之KeyGenerator入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/124069708\">java安全之KeyGenerator进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yanbin0830/article/details/89929045\">java安全之KeyGenerator详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"KeyStore\"><a href=\"#KeyStore\" class=\"headerlink\" title=\"KeyStore\"></a>KeyStore</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_31856061/article/details/125542695\">java安全之KeyStore入门</a></li>\n<li><a href=\"https://blog.csdn.net/zlfing/article/details/77648444\">java安全之KeyStore进阶</a></li>\n<li><a href=\"https://blog.csdn.net/dnc8371/article/details/106704333\">java安全之KeyStore详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h2><h3 id=\"安全有哪些方向\"><a href=\"#安全有哪些方向\" class=\"headerlink\" title=\"安全有哪些方向\"></a>安全有哪些方向</h3><p>数据安全、服务安全（API和WEB）、机器安全、网络安全、信息安全</p>\n<h3 id=\"安全有哪些技术\"><a href=\"#安全有哪些技术\" class=\"headerlink\" title=\"安全有哪些技术\"></a>安全有哪些技术</h3><h4 id=\"古代有哪些安全相关的技术\"><a href=\"#古代有哪些安全相关的技术\" class=\"headerlink\" title=\"古代有哪些安全相关的技术\"></a>古代有哪些安全相关的技术</h4><ul>\n<li>签字</li>\n<li>画押</li>\n<li>印章<ul>\n<li>私印（私（印）章，适用于书画）</li>\n<li>官印（公（印）章，适用于公文）</li>\n</ul>\n</li>\n<li>银票</li>\n<li>地契</li>\n</ul>\n<h4 id=\"近代有哪些安全相关的技术\"><a href=\"#近代有哪些安全相关的技术\" class=\"headerlink\" title=\"近代有哪些安全相关的技术\"></a>近代有哪些安全相关的技术</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/panshi5188/article/details/110492745\">数字证书和电子签名、电子印章详解</a></li>\n<li><a href=\"https://blog.csdn.net/s1441101265/article/details/115486810\">java实现电子发票</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>数字证书</li>\n<li>电子签名</li>\n<li>电子印章<ul>\n<li>电子发票</li>\n<li>电子合同</li>\n</ul>\n</li>\n<li>电子证件（身份证，驾驶证）</li>\n<li>数字人名币</li>\n</ul>\n<blockquote>\n<p>ps：电子邮件（email）也是电子的，电子邮件（email）是邮件（mail）的一种</p>\n</blockquote>\n<h1 id=\"Algorithm（算法）\"><a href=\"#Algorithm（算法）\" class=\"headerlink\" title=\"Algorithm（算法）\"></a>Algorithm（算法）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq877728715/article/details/104387739\">常见的安全算法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34845394/article/details/102720288\">常见的编码算法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43354104/article/details/106452921\">常见的摘要算法</a></li>\n<li><a href=\"https://blog.csdn.net/u012391423/article/details/116465048\">常见的哈希算法</a></li>\n<li><a href=\"https://blog.csdn.net/zhuimeng_by/article/details/111768041\">常见的加密算法</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Codec（编码算法）\"><a href=\"#Codec（编码算法）\" class=\"headerlink\" title=\"Codec（编码算法）\"></a>Codec（编码算法）</h2><h3 id=\"Url\"><a href=\"#Url\" class=\"headerlink\" title=\"Url\"></a>Url</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/122189358\">URLEncode入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhanshixiang/article/details/122876377\">URLEncode详解</a></li>\n<li><a href=\"https://blog.csdn.net/androidyue/article/details/106545324\">URLEncode之encodeURI和encodeURIComponent的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Base64\"><a href=\"#Base64\" class=\"headerlink\" title=\"Base64\"></a>Base64</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ShuSheng0007/article/details/118220299\">Base64算法详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19782019/article/details/88117150\">Base64算法原理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Digest（摘要算法）\"><a href=\"#Digest（摘要算法）\" class=\"headerlink\" title=\"Digest（摘要算法）\"></a>Digest（摘要算法）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/notechsolution/article/details/106270315\">Hash算法入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43935927/article/details/109126787\">Hash算法进阶</a></li>\n<li><a href=\"https://blog.csdn.net/tanggao1314/article/details/51457585\">Hash算法详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"CRC32\"><a href=\"#CRC32\" class=\"headerlink\" title=\"CRC32\"></a>CRC32</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_61298445/article/details/124360115\">CRC32算法入门</a></li>\n<li><a href=\"https://blog.csdn.net/lianyunyouyou/article/details/107217125\">CRC32算法详解</a></li>\n<li><a href=\"https://blog.csdn.net/jc_benben/article/details/107905030\">CRC32算法原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"MD5\"><a href=\"#MD5\" class=\"headerlink\" title=\"MD5\"></a>MD5</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/105241661\">MD5和CRC32的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37730370/article/details/98595464\">MD5和Base64的区别</a></li>\n<li><a href=\"https://blog.csdn.net/Dean_xiu/article/details/123059413\">MD5和SHA1的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SHA1\"><a href=\"#SHA1\" class=\"headerlink\" title=\"SHA1\"></a>SHA1</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yinkai1205/article/details/8313589\">HMAC_SHA1和SHA1的区别</a></li>\n<li><a href=\"https://blog.csdn.net/linuxprobe2017/article/details/62049001\">hash碰撞之SHA1</a></li>\n<li><a href=\"https://www.zhihu.com/question/23789956\">hash碰撞之Git</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Crypto（加密算法）\"><a href=\"#Crypto（加密算法）\" class=\"headerlink\" title=\"Crypto（加密算法）\"></a>Crypto（加密算法）</h2><h3 id=\"对称加密\"><a href=\"#对称加密\" class=\"headerlink\" title=\"对称加密\"></a>对称加密</h3><p>DES（已经不安全了）、AES</p>\n<h3 id=\"非对称加密\"><a href=\"#非对称加密\" class=\"headerlink\" title=\"非对称加密\"></a>非对称加密</h3><p>RSA</p>\n<h3 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h3><h4 id=\"base64和md5是加密算法吗\"><a href=\"#base64和md5是加密算法吗\" class=\"headerlink\" title=\"base64和md5是加密算法吗\"></a>base64和md5是加密算法吗</h4><p>base64和md5不是加密算法</p>\n<p>加密算法保密性的特性</p>\n<ol>\n<li>隐蔽的传递信息</li>\n<li>自己人（持有密钥或者密码本）可以解密</li>\n<li>其他人（不持有密钥或者密码本）不能解密</li>\n</ol>\n<p>urlencode base64 任何人可以编码和解码，所以不能算加密算法，只能算编码算法</p>\n<p>crc32 md5 sha1 任何人不能不依靠查表解密，所以也不算加密算法，只能算摘要算法</p>\n<p>如果依靠不能简单读懂来判断base64和md5算加密算法的话，那</p>\n<p>方言（dialect）<br>压缩（compress）<br>进制（十六进制 hex、八进制 octal、二进制 binary）转换</p>\n<p>岂不是也能算作加密算法</p>\n<h1 id=\"Authentication（认证）\"><a href=\"#Authentication（认证）\" class=\"headerlink\" title=\"Authentication（认证）\"></a>Authentication（认证）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39766005/article/details/120976857\">常见的认证方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/zwkkkk1/article/details/82179310\">常见的认证方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u012324798/article/details/104533817\">常见的认证方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/maoliran/article/details/51841420\">认证之WWW-Authenticate的作用</a></li>\n<li><a href=\"https://blog.csdn.net/xiaokanfuchen86/article/details/123033611\">认证之Authorization的Basic和Bearer区别</a></li>\n</ul>\n</blockquote>\n<p>认证的常见方式</p>\n<ul>\n<li>账号密码</li>\n<li>邮箱链接</li>\n<li>手机号验证码</li>\n<li>指纹</li>\n<li>眼纹</li>\n<li>脸纹</li>\n<li>签名</li>\n</ul>\n<p>认证成功后返回的是 <code>令牌（token）</code> ， token关联或者包含了用户的 <code>身份</code> 和 <code>权限</code> 信息</p>\n<h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><h3 id=\"Private\"><a href=\"#Private\" class=\"headerlink\" title=\"Private\"></a>Private</h3><p>注册：Register、Sign Up<br>登录：Login、Sign In<br>登出：Logout、Sign Out</p>\n<h4 id=\"Register\"><a href=\"#Register\" class=\"headerlink\" title=\"Register\"></a>Register</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/youdingte/article/details/128492393\">多租户系统架构设计</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40392053/article/details/116460406\">用户UID的几种生成方案</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41990222/article/details/111587331\">微信之appid、openid、unionid的区别和关联</a></li>\n<li><a href=\"https://blog.csdn.net/xcjing/article/details/73826889\">OpenID入门</a></li>\n<li><a href=\"https://blog.csdn.net/cnwuyuqun/article/details/5685518\">OpenID进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24550639/article/details/111089296\">OpenID详解</a></li>\n</ul>\n</blockquote>\n<p>账号的常见方式</p>\n<ul>\n<li>自动分配</li>\n<li>手动选号</li>\n<li>邮箱号</li>\n<li>手机号</li>\n<li>身份证号</li>\n</ul>\n<h4 id=\"Login\"><a href=\"#Login\" class=\"headerlink\" title=\"Login\"></a>Login</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lixinyi0622/article/details/107197720\">登录认证方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/huangpb123/article/details/103933400\">登录认证方案之Cookie、Session、Token入门</a></li>\n<li><a href=\"https://blog.csdn.net/ChaITSimpleLove/article/details/108814753\">登录认证方案之Cookie、Session、Token进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yaoyaochengxian/article/details/117138791\">登录认证方案之Cookie、Session、Token详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43556773/article/details/113737921\">登录认证方案之基于Session的和基于Token的方案对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/swq463/article/details/107810849\">登录认证方案之基于Session的和基于Token的方案对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58719994/article/details/128452426\">登录的常见方式之邮箱登录详解</a></li>\n<li><a href=\"https://blog.csdn.net/david2000999/article/details/122249949\">登录的常见方式之手机号登录详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangwenzhe222/article/details/121781950\">登录的常见方式之第三方登录详解</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_40770656/article/details/120895653\">登录的常见方式之扫码登录入门</a></li>\n<li><a href=\"https://blog.csdn.net/z694644032/article/details/105237912\">登录的常见方式之扫码登录详解</a></li>\n</ul>\n</blockquote>\n<p>登录的常见方式</p>\n<ul>\n<li>账号密码登录</li>\n<li>邮箱链接登录</li>\n<li>手机号验证码登录</li>\n<li>第三方登录</li>\n<li>扫码登录</li>\n<li>动态密码登录</li>\n<li>动态令牌登录</li>\n</ul>\n<h5 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xw_LazyCat/article/details/79786195\">基于Cookie的登录认证方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38148024/article/details/108148876\">基于Cookie的登录认证方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/awhip9/article/details/78007600\">基于Cookie的登录认证方案详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43972437/article/details/106187588\">基于Session的登录认证方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_56444564/article/details/128840277\">基于Session的登录认证方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44176696/article/details/107140955\">基于Session的登录认证方案详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Token\"><a href=\"#Token\" class=\"headerlink\" title=\"Token\"></a>Token</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/oscar999/article/details/102728303\">基于Token的登录认证方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38658567/article/details/107840554\">基于Token的登录认证方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Top_L398/article/details/109361680\">基于Token的登录认证方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45070175/article/details/118559272\">JWT详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42764468/article/details/107731844\">JWT注销问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/a704397849/article/details/90216739\">JWT过期问题详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Logout\"><a href=\"#Logout\" class=\"headerlink\" title=\"Logout\"></a>Logout</h4><h3 id=\"Public\"><a href=\"#Public\" class=\"headerlink\" title=\"Public\"></a>Public</h3><p>开放接口使用的不是 <code>登录认证</code> ，而是 <code>签名认证</code></p>\n<h4 id=\"OpenAPI\"><a href=\"#OpenAPI\" class=\"headerlink\" title=\"OpenAPI\"></a>OpenAPI</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44155115/article/details/105086219\">免费的开放接口大全入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41856814/article/details/89290195\">免费的开放接口大全详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_36836847/article/details/95206329\">开放接口（OpenAPI）入门</a></li>\n<li><a href=\"https://blog.csdn.net/chuijiongye5810/article/details/101021508\">开放接口（OpenAPI）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoyi52/article/details/121198620\">开放接口（OpenAPI）详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Signature\"><a href=\"#Signature\" class=\"headerlink\" title=\"Signature\"></a>Signature</h5><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/hjzgg/p/11062043.html\">接口签名入门</a></li>\n<li><a href=\"https://www.cnblogs.com/hujunzheng/p/9725168.html\">接口签名进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq877728715/article/details/113555907\">接口签名详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_63437643/article/details/124061112\">接口签名精进</a></li>\n<li><a href=\"https://blog.csdn.net/inthat/article/details/103140515\">接口签名之appkey和appsecret详解</a></li>\n<li><a href=\"https://blog.csdn.net/dsq_MaDing/article/details/128807455\">接口签名之AK（AccessKey）&#x2F;SK（SecretKey）入门</a></li>\n<li><a href=\"https://blog.csdn.net/makenothing/article/details/81158481\">接口签名之AK（AccessKey）&#x2F;SK（SecretKey）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lijialexiao/article/details/121288347\">接口签名之AK（AccessKey）&#x2F;SK（SecretKey）详解</a></li>\n<li><a href=\"https://blog.csdn.net/u011627980/article/details/52778326\">接口签名之MD5</a></li>\n<li><a href=\"https://blog.csdn.net/u012105931/article/details/51088312\">接口签名之SHA1</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43040108/article/details/120760046\">接口签名之HmacSHA1</a></li>\n<li><a href=\"https://cnodejs.org/topic/5955f21e984e31dd458c15f2\">接口签名之客户端如何保证appsecret的安全讨论1</a></li>\n<li><a href=\"https://www.zhihu.com/question/24575506\">接口签名之客户端如何保证appsecret的安全讨论2</a></li>\n<li><a href=\"https://segmentfault.com/q/1010000004603922\">接口签名之客户端如何保证appsecret的安全讨论3</a></li>\n<li><a href=\"https://developers.weixin.qq.com/community/minihome/doc/0004a84fcb0bb0e89eddbaa5156401\">接口签名之如何保证微信的AppSecret的安全</a></li>\n<li><a href=\"https://blog.csdn.net/lishirong/article/details/52851014\">接口签名之如何保证云存储服务的SecretKey的安全</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h2><h3 id=\"SSO\"><a href=\"#SSO\" class=\"headerlink\" title=\"SSO\"></a>SSO</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xue_xiaofei/article/details/110061862\">SSO入门</a></li>\n<li><a href=\"https://blog.csdn.net/ban_tang/article/details/80015946\">SSO进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ruanchengshen/article/details/129493166\">SSO详解</a></li>\n<li><a href=\"https://blog.csdn.net/FDXCG_X/article/details/116783857\">SSO实现方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013905744/article/details/111225420\">SSO实现方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/lipei1220/article/details/107616418\">SSO和Oauth2的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18746961/article/details/118223010\">SSO和Oauth2的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/hancky/article/details/79449588\">SSO和Cookie入门</a></li>\n<li><a href=\"https://blog.csdn.net/shallum/article/details/117735532\">SSO和Cookie详解</a></li>\n<li><a href=\"https://blog.csdn.net/makenothing/article/details/101678229\">SSO和JWT入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhang_java_11/article/details/107690042\">SSO和JWT进阶</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Authorization（授权）\"><a href=\"#Authorization（授权）\" class=\"headerlink\" title=\"Authorization（授权）\"></a>Authorization（授权）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/brother_Cheng_Py/article/details/121970486\">常见的授权模型入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43314519/article/details/118365309\">常见的授权模型详解</a></li>\n</ul>\n</blockquote>\n<p>常见的权限模型</p>\n<ul>\n<li>ACL：Access Control List，基于控制列表的权限验证</li>\n<li>RBAC：Role-Based Access Control，基于角色的权限验证</li>\n<li>ABAC：Attribute-Based Access Control，基于属性的权限验证</li>\n</ul>\n<h2 id=\"Application-1\"><a href=\"#Application-1\" class=\"headerlink\" title=\"Application\"></a>Application</h2><h3 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h3><p>Linux的文件权限是基于ACL权限模型实现的</p>\n<p>基于控制列表的认证</p>\n<h3 id=\"Database\"><a href=\"#Database\" class=\"headerlink\" title=\"Database\"></a>Database</h3><p>Database的操作权限是基于RBAC权限模型实现的</p>\n<p>基于用户角色的认证</p>\n<h2 id=\"Service-1\"><a href=\"#Service-1\" class=\"headerlink\" title=\"Service\"></a>Service</h2><h3 id=\"OAuth2\"><a href=\"#OAuth2\" class=\"headerlink\" title=\"OAuth2\"></a>OAuth2</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/TheWindOfSon/article/details/107703234\">OAuth2入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012324798/article/details/105612706\">OAuth2进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zou8944/article/details/122116339\">OAuth2详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhoubangbang1/article/details/124087698\">OAuth2精进</a></li>\n<li><a href=\"https://blog.csdn.net/best_luxi/article/details/121960777\">OAuth2和JWT入门</a></li>\n<li><a href=\"https://blog.csdn.net/grd_java/article/details/107584578\">OAuth2和JWT详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39973810/article/details/84673548\">OAuth2之Bearer Token和MAC Token的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44388689/article/details/121602585\">OAuth2之accessToken和refreshToken的区别</a></li>\n<li><a href=\"https://developers.weixin.qq.com/doc/oplatform/Mobile_App/WeChat_Login/Development_Guide.html\">OAuth2之微信小程序</a></li>\n</ul>\n</blockquote>\n<p>OAuth是一个行业标准的授权协议，包含一系列流程和标准</p>\n<h1 id=\"Data（数据安全）\"><a href=\"#Data（数据安全）\" class=\"headerlink\" title=\"Data（数据安全）\"></a>Data（数据安全）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_63108102/article/details/128414214\">数据脱敏和数据加密入门</a></li>\n</ul>\n</blockquote>\n<p>数据脱敏、数据加密</p>\n<h2 id=\"Password\"><a href=\"#Password\" class=\"headerlink\" title=\"Password\"></a>Password</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zgl_cyy/article/details/113826689\">用户密码加密方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/a1405/article/details/112801976\">用户密码加密方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39234639/article/details/122386502\">用户密码加密之MD5和Bcrypt</a></li>\n<li><a href=\"https://blog.csdn.net/Debug_zhang/article/details/50895732\">用户密码加密之哈希加盐详解</a></li>\n<li><a href=\"https://blog.csdn.net/acm_yuuji/article/details/27642221\">用户密码加密之哈希加盐流程</a></li>\n<li><a href=\"https://blog.csdn.net/GrassEva/article/details/82656524\">用户密码加密之哈希加盐实现</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Service（服务安全）\"><a href=\"#Service（服务安全）\" class=\"headerlink\" title=\"Service（服务安全）\"></a>Service（服务安全）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kevinxxw/article/details/105603571\">客户端和服务端通信安全详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"API（接口安全）\"><a href=\"#API（接口安全）\" class=\"headerlink\" title=\"API（接口安全）\"></a>API（接口安全）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yifan_lion/article/details/105180779\">接口安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33642970/article/details/129236360\">接口安全进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq877728715/article/details/112032081\">接口安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN_WYL2016/article/details/113861997\">接口安全精进</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46700042/article/details/109029455\">接口安全之重放攻击详解</a></li>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/109400717\">接口安全之洪泛攻击详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30566629/article/details/109783888\">接口安全之DDos攻击详解</a></li>\n<li><a href=\"https://blog.csdn.net/xsjzn/article/details/116144781\">接口安全之Sync攻击详解</a></li>\n<li><a href=\"https://blog.csdn.net/ThinPikachu/article/details/123443911\">接口安全之中间人攻击详解</a></li>\n<li><a href=\"https://blog.csdn.net/maocai008/article/details/79064542\">接口安全之防非法访问之令牌（token）详解</a></li>\n<li><a href=\"https://blog.csdn.net/lvxiangan/article/details/96331706\">接口安全之防重放攻击之随机数（nonce）详解</a></li>\n<li><a href=\"https://blog.csdn.net/wjg8209/article/details/118806853\">接口安全之防洪泛攻击之时间戳（timestamp）详解</a></li>\n<li><a href=\"https://blog.csdn.net/TL_ATC/article/details/113092201\">接口安全之防中间人攻击之签名（sign）详解</a></li>\n</ul>\n</blockquote>\n<p>洪泛攻击：DDos攻击（分布式拒绝服务攻击）、SYN攻击（TCP）<br>中间人工具：通过抓包工具破解和篡改数据进行攻击（需注意https也是可以抓包的）</p>\n<p>接口安全的主要内容</p>\n<ul>\n<li>接口认证：防止系统被非法访问</li>\n<li>接口签名：防止接口参数被篡改</li>\n<li>接口加密：防止接口参数被破解</li>\n</ul>\n<p>接口安全的主要机制</p>\n<ul>\n<li>token：防非法访问</li>\n<li>nouce：防重放攻击</li>\n<li>timestamp：防洪泛攻击</li>\n<li>sign：防中间人攻击（防篡改param、nouce、timestamp）</li>\n<li>key：签名时用的密钥</li>\n</ul>\n<h3 id=\"Authentication\"><a href=\"#Authentication\" class=\"headerlink\" title=\"Authentication\"></a>Authentication</h3><p><a href=\"#Private\">参考认证的部分</a></p>\n<h3 id=\"Signature-1\"><a href=\"#Signature-1\" class=\"headerlink\" title=\"Signature\"></a>Signature</h3><p><a href=\"#Public\">参考认证的部分</a></p>\n<h3 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43199016/article/details/106999613\">接口加密入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37636884/article/details/82689849\">接口加密进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lxf2323881/article/details/78845822\">接口加密详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37284798/article/details/128397671\">接口加密精进</a></li>\n<li><a href=\"https://blog.csdn.net/gdutxiaoxu/article/details/107393249\">接口加密之https不是绝对安全</a></li>\n<li><a href=\"https://blog.csdn.net/u014294681/article/details/86599741\">接口加密之https和二次加密</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Captcha\"><a href=\"#Captcha\" class=\"headerlink\" title=\"Captcha\"></a>Captcha</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/XZ85201/article/details/124913874\">接口安全之验证码详解</a></li>\n</ul>\n</blockquote>\n<p>图形验证码：防爬虫<br>手机验证码：防他人</p>\n<h3 id=\"Crawler\"><a href=\"#Crawler\" class=\"headerlink\" title=\"Crawler\"></a>Crawler</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46092061/article/details/119807084\">接口安全之反爬虫详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Web（Web安全）\"><a href=\"#Web（Web安全）\" class=\"headerlink\" title=\"Web（Web安全）\"></a>Web（Web安全）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38936266/article/details/108520281\">常见的漏洞概念</a></li>\n<li><a href=\"https://blog.csdn.net/2201_75362610/article/details/129851907\">常见的Web漏洞</a></li>\n<li><a href=\"https://blog.csdn.net/java_collect/article/details/95019422\">常见的Web攻击方式</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45996361/article/details/124348023\">同源策略（sop）和跨域资源（cors）共享详解</a></li>\n<li><a href=\"https://blog.csdn.net/l_ppp/article/details/106402136\">同源策略入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41688840/article/details/108719837\">同源策略详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43272781/article/details/104524786\">同源策略之跨域方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/guorui_java/article/details/107345499\">同源策略之jsonp原理</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43972437/article/details/107291071\">同源策略之vue代理原理</a></li>\n<li><a href=\"https://blog.csdn.net/unlilalila/article/details/121107428\">跨域资源共享入门</a></li>\n<li><a href=\"https://blog.csdn.net/AnitaSun/article/details/117917945\">跨域资源共享详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43571641/article/details/119847981\">跨域资源共享之漏洞入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46622976/article/details/128452494\">跨域资源共享之漏洞详解</a></li>\n</ul>\n</blockquote>\n<p>攻击方式：sql注入、跨站脚本攻击（xss）、跨站请求伪造（csrf）<br>安全策略：同源策略（sop）<br>资源共享：跨域资源共享（cors）</p>\n<p>sql注入：Sql Injection<br>跨站脚本攻击（xss）：Cross Site Scripting<br>跨站请求伪造（csrf）： Cross-site Request Forgery<br>同源策略（sop）：Same Origin Policy<br>跨域资源共享（cors）：Cross-Origin Resource Sharing</p>\n<h3 id=\"Https\"><a href=\"#Https\" class=\"headerlink\" title=\"Https\"></a>Https</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiaoming100001/article/details/81109617\">Https入门</a></li>\n<li><a href=\"https://blog.csdn.net/seujava_er/article/details/90018326\">Https进阶</a></li>\n<li><a href=\"https://blog.csdn.net/scanf_linux/article/details/107614117\">Https详解</a></li>\n<li><a href=\"https://blog.csdn.net/sarafina527/article/details/89333536\">Https之握手过程图解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31442743/article/details/116199453\">Https之三个随机数的作用</a></li>\n<li><a href=\"https://blog.csdn.net/enweitech/article/details/81781405\">HTTPS、SSL、TLS三者之间的联系和区别</a></li>\n<li><a href=\"https://blog.csdn.net/oZhuZhiYuan/article/details/106650944\">Https之中间人攻击</a></li>\n<li><a href=\"https://blog.csdn.net/guolin_blog/article/details/117618940\">Https之抓包</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013258415/article/details/77863043\">抓包工具之fiddler和wireshark对比</a></li>\n<li><a href=\"https://blog.csdn.net/L_980317/article/details/130332874\">抓包工具之fiddler和charles对比</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Certificate\"><a href=\"#Certificate\" class=\"headerlink\" title=\"Certificate\"></a>Certificate</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/129037600\">数字证书简介</a></li>\n<li><a href=\"https://blog.csdn.net/swadian2008/article/details/130177577\">数字证书入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38425803/article/details/106730288\">数字证书进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xw_classmate/article/details/109324109\">数字证书详解</a></li>\n<li><a href=\"https://blog.csdn.net/lk2684753/article/details/100160856\">数字证书精进</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38451161/article/details/108180919\">数字证书之X509详解</a></li>\n<li><a href=\"https://blog.csdn.net/sky8336/article/details/113696551\">数字证书之证书链详解</a></li>\n<li><a href=\"https://blog.csdn.net/GDUT_xin/article/details/109307374\">数字证书之CA证书和机构详解</a></li>\n<li><a href=\"https://blog.csdn.net/yxg520s/article/details/121358679\">数字证书之支持多域名吗</a></li>\n<li><a href=\"https://blog.csdn.net/shyrainxy/article/details/108804666\">数字证书之单向认证和双向认证</a></li>\n<li><a href=\"https://blog.csdn.net/caomiao2006/article/details/23677565\">数字证书之x509和pkcs的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weter_drop/article/details/108066426\">数字证书之crt和key的区别</a></li>\n<li><a href=\"https://blog.csdn.net/itworld123/article/details/115553346\">数字证书之crt和pfx的区别</a></li>\n<li><a href=\"https://blog.csdn.net/kq1983/article/details/100680170\">数字证书之crt和csr的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33745102/article/details/123280477\">数字证书之crt和pem的区别</a></li>\n<li><a href=\"https://blog.csdn.net/zhangh571354026/article/details/129040023\">数字证书之pem和key的区别</a></li>\n<li><a href=\"https://blog.csdn.net/yetugeng/article/details/100629159\">数字证书之pem和der的区别</a></li>\n<li><a href=\"https://blog.csdn.net/hhr603894090/article/details/108758969\">数字证书之dsa和rsa的区别</a></li>\n</ul>\n</blockquote>\n<p>数字证书（Certificate）的主要作用</p>\n<ul>\n<li>加密（Encrypt）：防泄密（保密性）</li>\n<li>签名（Sign）和校验（Verify）：防抵赖（不可否认性）、防伪造（真实性）、防篡改（完整性）</li>\n</ul>\n<blockquote>\n<p>ps：签名是私钥加密，公钥解密，所以不能抵赖，不能伪造，不能篡改</p>\n</blockquote>\n<p>数字证书（Certificate）的主要内容</p>\n<ul>\n<li>证书主体（Subject）：持有者的身份信息</li>\n<li>证书公钥（PublicKey）：解密证书摘要</li>\n<li>证书摘要（Digest）：证书内容的摘要信息</li>\n<li>证书签名（Signature）：证书摘要的签名信息（使用私钥签名和公钥解签可以检验证书的真实性）</li>\n<li>证书链（Chain）：检查证书链可以检验证书是否可信</li>\n<li>版本</li>\n<li>序列号</li>\n<li>过期时间</li>\n<li>颁发机构</li>\n<li>签名算法</li>\n</ul>\n<h4 id=\"Tools-1\"><a href=\"#Tools-1\" class=\"headerlink\" title=\"Tools\"></a>Tools</h4><h5 id=\"KeyTool\"><a href=\"#KeyTool\" class=\"headerlink\" title=\"KeyTool\"></a>KeyTool</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w47_csdn/article/details/87564029\">KeyTool入门</a></li>\n<li><a href=\"https://blog.csdn.net/HD243608836/article/details/109105540\">KeyTool进阶</a></li>\n<li><a href=\"https://blog.csdn.net/a82514921/article/details/104588573\">KeyTool详解</a></li>\n<li><a href=\"https://blog.csdn.net/xzlAwin/article/details/115013255\">KeyTool精进</a></li>\n<li><a href=\"https://blog.csdn.net/kunlyy/article/details/105399255\">KeyTool生成自签名证书详解</a></li>\n<li><a href=\"https://blog.csdn.net/chuzhanhuang0199/article/details/101055604\">KeyTool之keypass和storepass的区别</a></li>\n<li><a href=\"https://blog.csdn.net/andy_zhang2007/article/details/78805578\">KeyTool之KeyStore和TrustStore的区别</a></li>\n<li><a href=\"https://blog.csdn.net/LawssssCat/article/details/104870347\">Keytool和OpenSSL的区别</a></li>\n<li><a href=\"https://blog.csdn.net/NewTWG/article/details/104478220\">Keytool和OpenSSL互转</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Openssl\"><a href=\"#Openssl\" class=\"headerlink\" title=\"Openssl\"></a>Openssl</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zyhse/article/details/112029649\">Openssl入门</a></li>\n<li><a href=\"https://blog.csdn.net/Mzxy_1/article/details/130252776\">Openssl进阶</a></li>\n<li><a href=\"https://blog.csdn.net/scuyxi/article/details/54884976\">Openssl详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39565764/article/details/120419199\">Openssl精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22239675/article/details/86541088\">Openssl生成自签名证书详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"ssh-keygen\"><a href=\"#ssh-keygen\" class=\"headerlink\" title=\"ssh-keygen\"></a>ssh-keygen</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40932679/article/details/117487540\">ssh-keygen详解</a></li>\n<li><a href=\"https://blog.csdn.net/MumuziD/article/details/122640155\">ssh使用密钥登录入门</a></li>\n<li><a href=\"https://blog.csdn.net/clover661/article/details/112796091\">ssh使用密钥登录详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Android\"><a href=\"#Android\" class=\"headerlink\" title=\"Android\"></a>Android</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ming54ming/article/details/85067403\">数字证书之Android自定义信任策略入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiushi1995/article/details/114021074\">数字证书之Android自定义信任策略详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Hijack\"><a href=\"#Hijack\" class=\"headerlink\" title=\"Hijack\"></a>Hijack</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45598506/article/details/117196933\">运营商劫持详解</a></li>\n<li><a href=\"https://blog.csdn.net/st_andrews/article/details/102947188\">DNS劫持详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Pay（支付安全）\"><a href=\"#Pay（支付安全）\" class=\"headerlink\" title=\"Pay（支付安全）\"></a>Pay（支付安全）</h2><blockquote>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/34813040\">U盾原理详解</a></li>\n<li><a href=\"https://www.zhihu.com/question/24522619\">为什么支付宝不用U盾</a></li>\n</ul>\n</blockquote>\n<p>UKey：U盾</p>\n<p>支付的主要方式</p>\n<ul>\n<li>密码支付（大额支付时短信验证）</li>\n<li>指纹支付</li>\n<li>刷脸支付</li>\n</ul>\n<h1 id=\"Machine（机器安全）\"><a href=\"#Machine（机器安全）\" class=\"headerlink\" title=\"Machine（机器安全）\"></a>Machine（机器安全）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ShiXiao0121/article/details/121596572\">Linux账号管理详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42363315/article/details/116603703\">Linux动态密码详解</a></li>\n<li><a href=\"https://blog.csdn.net/superzlc/article/details/113873019\">Linux动态口令详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_61703951/article/details/121247117\">动态密码详解</a></li>\n<li><a href=\"https://blog.csdn.net/grandachn/article/details/129075315\">动态口令详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39761655/article/details/110864978\">堡垒机详解</a></li>\n<li><a href=\"https://blog.csdn.net/CN_TangZheng/article/details/116705708\">堡垒机之JumpServer详解</a></li>\n</ul>\n</blockquote>\n<p>动态密码 动态口令（令牌） 堡垒机（跳板机）</p>\n<h1 id=\"Network（网络安全）\"><a href=\"#Network（网络安全）\" class=\"headerlink\" title=\"Network（网络安全）\"></a>Network（网络安全）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Amdy_amdy/article/details/82884760\">网络安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/oopxiajun2011/article/details/106389826\">网络安全进阶</a></li>\n<li><a href=\"https://blog.csdn.net/FFNB_666/article/details/107816671\">网络安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/jklbnm12/article/details/119255268\">网安教程入门</a></li>\n<li><a href=\"https://blog.csdn.net/internet_xx/article/details/119953419\">网安教程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Javachichi/article/details/125739146\">网安教程详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Information（信息安全）\"><a href=\"#Information（信息安全）\" class=\"headerlink\" title=\"Information（信息安全）\"></a>Information（信息安全）</h1><h2 id=\"信息安全\"><a href=\"#信息安全\" class=\"headerlink\" title=\"信息安全\"></a>信息安全</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/network_idiot/article/details/119281070\">信息安全入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37233070/article/details/124213720\">信息安全进阶</a></li>\n<li><a href=\"https://juejin.cn/post/6995549209348816909\">信息安全详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39440893/article/details/114185672\">信息安全五大特性详解</a></li>\n<li><a href=\"https://blog.csdn.net/itworld123/article/details/122905582\">信息安全三要素（CIA）入门</a></li>\n<li><a href=\"https://blog.csdn.net/cunjiu9486/article/details/109075217\">信息安全三要素（CIA）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ab13167235280/article/details/101308841\">信息安全三要素（CIA）详解</a></li>\n</ul>\n</blockquote>\n<p>流量监控、电脑截屏、截图水印</p>\n<h2 id=\"代码安全\"><a href=\"#代码安全\" class=\"headerlink\" title=\"代码安全\"></a>代码安全</h2><p>代码混淆</p>\n<p>Android、Python（magic number）、JavaScript</p>\n<h2 id=\"密钥安全\"><a href=\"#密钥安全\" class=\"headerlink\" title=\"密钥安全\"></a>密钥安全</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chikuai9995/article/details/100723322\">工程师的灵魂拷问：你的密钥安全吗</a></li>\n<li><a href=\"https://blog.csdn.net/hl449006540/article/details/96286627\">密钥安全管理入门</a></li>\n<li><a href=\"https://blog.csdn.net/CHYabc123456hh/article/details/109568766\">密钥安全管理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Lapedius/article/details/116075151\">密钥安全管理详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44161038/article/details/105130098\">密钥安全管理精进</a></li>\n<li><a href=\"https://www.zhihu.com/question/35136485\">客户端如何保证密钥的安全入门</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/24279535\">客户端如何保证密钥的安全进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30197685/article/details/104937145\">客户端如何保证密钥的安全详解</a></li>\n</ul>\n</blockquote>\n<p>数据库密码、各种密钥</p>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-task","url":"/2017/07/01/lang/lang-1-java/senior/java-5-spring-task/","content":"<h1 id=\"SpringTask\"><a href=\"#SpringTask\" class=\"headerlink\" title=\"SpringTask\"></a>SpringTask</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zzy7075/article/details/108482176\">SpringTask入门</a></li>\n<li><a href=\"https://docs.spring.io/spring-framework/reference/integration/scheduling.html\">SpringTask详解</a></li>\n<li><a href=\"https://blog.csdn.net/icarusliu/article/details/79528810\">TaskExecutor详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29569183/article/details/111311632\">TaskDecorator详解</a></li>\n<li><a href=\"https://blog.csdn.net/yyuggjggg/article/details/128124710\">TaskScheduler详解</a></li>\n</ul>\n</blockquote>\n<p><code>task_config</code> 的属性如下</p>\n<ul>\n<li>任务id</li>\n<li>任务名称</li>\n<li>任务描述</li>\n<li>任务超时</li>\n<li>任务分组</li>\n<li>任务优先级</li>\n</ul>\n<p><code>task_record</code> 的属性如下</p>\n<ul>\n<li>记录id</li>\n<li>任务id</li>\n<li>任务参数</li>\n<li>任务结果</li>\n<li>任务转台</li>\n<li>任务创建时间</li>\n<li>任务开始时间</li>\n<li>任务结束时间</li>\n<li>任务耗时</li>\n</ul>\n<h2 id=\"NormalTask\"><a href=\"#NormalTask\" class=\"headerlink\" title=\"NormalTask\"></a>NormalTask</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/houxian1103/article/details/110299410\">@Async入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37645861/article/details/116654469\">@Async详解</a></li>\n<li><a href=\"https://blog.csdn.net/AE86JayChou/article/details/124677305\">@Async原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38042187/article/details/129361935\">@Async之获取返回值</a></li>\n<li><a href=\"https://blog.csdn.net/sanyaoxu_2/article/details/84556065\">@Async之异常捕获</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43859729/article/details/107612184\">@Async之自定义线程池</a></li>\n<li><a href=\"https://blog.csdn.net/mxt51220/article/details/129037586\">@Async之异步线程间传递数据</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Invalid\"><a href=\"#Invalid\" class=\"headerlink\" title=\"Invalid\"></a>Invalid</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangyf1129/article/details/127681862\">Spring异步失效的场景</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：@Async是通过AOP实现的，所以失效的场景包含AOP失效的场景</p>\n</blockquote>\n<h2 id=\"DelayedTask\"><a href=\"#DelayedTask\" class=\"headerlink\" title=\"DelayedTask\"></a>DelayedTask</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dream8062/article/details/51839494\">Thread.sleep实现延时任务</a></li>\n<li><a href=\"https://blog.csdn.net/lizhengyu891231/article/details/104022630\">DelayQueue实现延时任务</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44092667/article/details/120966304\">TaskScheduler实现延时任务</a></li>\n</ul>\n</blockquote>\n<p>实现延时任务的方案</p>\n<ul>\n<li><code>Thread.sleep</code>：会导致线程暂停，效率低</li>\n<li><code>DelayQueue</code>和<code>MQ</code>：方案较复杂，不推荐</li>\n<li><code>TaskScheduler.schedule(Runnable task, Instant startTime)</code>：方案较简单，可推荐</li>\n</ul>\n<blockquote>\n<p>todo：需要确认 <code>@Scheduled</code> 只配置 <code>initialDelay</code> 参数是否也能实现延时任务？？？</p>\n</blockquote>\n<h2 id=\"ScheduledTask\"><a href=\"#ScheduledTask\" class=\"headerlink\" title=\"ScheduledTask\"></a>ScheduledTask</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44799924/article/details/115963367\">@Scheduled入门</a></li>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/109399280\">@Scheduled详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringDistributedTask\"><a href=\"#SpringDistributedTask\" class=\"headerlink\" title=\"SpringDistributedTask\"></a>SpringDistributedTask</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_67505824/article/details/123641409\">Spring分布式任务框架入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24950043/article/details/130175241\">Spring分布式任务框架详解</a></li>\n<li><a href=\"https://blog.csdn.net/en_joker/article/details/104407313\">Quartz、xxl-job、elastic-job对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41490913/article/details/106865400\">Quartz、xxl-job、elastic-job对比详解</a></li>\n<li><a href=\"https://juejin.cn/post/7179823971901112376\">新一代分布式任务框架PowerJob</a></li>\n</ul>\n</blockquote>\n<p>python可以使用celery</p>\n<h2 id=\"Quartz\"><a href=\"#Quartz\" class=\"headerlink\" title=\"Quartz\"></a>Quartz</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ScholarTang/article/details/118891297\">Quartz详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"XXX-Job\"><a href=\"#XXX-Job\" class=\"headerlink\" title=\"XXX-Job\"></a>XXX-Job</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SharingOfficer/article/details/122061343\">xxl-job详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Elastic-Job\"><a href=\"#Elastic-Job\" class=\"headerlink\" title=\"Elastic-Job\"></a>Elastic-Job</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lvlei19911108/article/details/118633115\">elastic-job详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringCloudTask\"><a href=\"#SpringCloudTask\" class=\"headerlink\" title=\"SpringCloudTask\"></a>SpringCloudTask</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cckevincyh/article/details/107432156\">SpringCloudTask入门</a></li>\n<li><a href=\"https://blog.csdn.net/wojiushiwo945you/article/details/122684166\">SpringCloudTask进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wojiushiwo945you/article/details/122700557\">SpringCloudTask详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-batch","url":"/2017/07/01/lang/lang-1-java/senior/java-6-spring-batch/","content":"<h1 id=\"SpringBatch\"><a href=\"#SpringBatch\" class=\"headerlink\" title=\"SpringBatch\"></a>SpringBatch</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42217306/article/details/118801491\">java中类似python的celery实现</a></li>\n<li><a href=\"https://blog.csdn.net/Mr_YanMingXin/article/details/120798271\">SpringBatch入门</a></li>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/125974422\">SpringBatch详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-message","url":"/2017/07/01/lang/lang-1-java/senior/java-7-spring-message/","content":"<h1 id=\"SpringCommunication\"><a href=\"#SpringCommunication\" class=\"headerlink\" title=\"SpringCommunication\"></a>SpringCommunication</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Meiyang1990/article/details/78442418\">事件总线和消息队列的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/leiming01/article/details/113352087\">EventBus入门</a></li>\n<li><a href=\"https://blog.csdn.net/javatuo/article/details/130887708\">EventBus进阶</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/128627663\">EventBus详解</a></li>\n<li><a href=\"https://blog.csdn.net/tenyears940326/article/details/111458171\">EventBus（Spring版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/lyabc123456/article/details/90746210\">EventBus（Android版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46846526/article/details/118317794\">EventBus（Vue版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/codejas/article/details/79930909\">MessageQueue入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36789243/article/details/119395557\">MessageQueue进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51411338/article/details/125915374\">MessageQueue详解</a></li>\n<li><a href=\"https://blog.csdn.net/lovedren/article/details/51701477\">MessageQueue（Android版）详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42291355/article/details/108146890\">MessageQueue（Js版）详解</a></li>\n</ul>\n</blockquote>\n<p>系统之间进行数据通信有两种方式</p>\n<ul>\n<li>事件总线（EventBus）：传递的是 <code>事件</code> ，基于 <code>发布订阅模式</code> 实现（事件被订阅者 <code>共享</code> 订阅）</li>\n<li>消息队列（MessageQueue）：传递的是 <code>消息</code> ，基于 <code>生产消费模式</code> 实现（消息被消费者 <code>分工</code> 消费）</li>\n</ul>\n<h2 id=\"Publish-Subscribe\"><a href=\"#Publish-Subscribe\" class=\"headerlink\" title=\"Publish-Subscribe\"></a>Publish-Subscribe</h2><h3 id=\"发布订阅模式和观察者模式的区别\"><a href=\"#发布订阅模式和观察者模式的区别\" class=\"headerlink\" title=\"发布订阅模式和观察者模式的区别\"></a>发布订阅模式和观察者模式的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44258574/article/details/129448435\">发布订阅模式和观察者模式的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>观察者模式：被观察者和观察者<code>直接连接</code></li>\n<li>发布订阅模式：发布者和订阅者<code>通过broker连接</code></li>\n</ul>\n<h2 id=\"Producer-Consumer\"><a href=\"#Producer-Consumer\" class=\"headerlink\" title=\"Producer-Consumer\"></a>Producer-Consumer</h2><h3 id=\"生产消费模式和发布订阅模式的区别\"><a href=\"#生产消费模式和发布订阅模式的区别\" class=\"headerlink\" title=\"生产消费模式和发布订阅模式的区别\"></a>生产消费模式和发布订阅模式的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LiaoQuesg/article/details/123148726\">生产消费模式和发布订阅模式的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>发布订阅模式：传递的是<code>事件</code>，事件被订阅者<code>共享</code>订阅</li>\n<li>生产消费模式：传递的是<code>消息</code>，消息被消费者<code>分工</code>消费</li>\n</ul>\n<h1 id=\"SpringMessaging\"><a href=\"#SpringMessaging\" class=\"headerlink\" title=\"SpringMessaging\"></a>SpringMessaging</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39404155/article/details/122565693\">SpringMessaging入门</a></li>\n<li><a href=\"https://blog.csdn.net/adknuf1202/article/details/102167947\">SpringMessaging进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hahalan/article/details/122318178\">SpringMessaging详解</a></li>\n</ul>\n</blockquote>\n<p>SpringMessaging：SpringBoot中实现 <code>生产消费模式</code> 的框架</p>\n<h1 id=\"SpringCloudStream\"><a href=\"#SpringCloudStream\" class=\"headerlink\" title=\"SpringCloudStream\"></a>SpringCloudStream</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cckevincyh/article/details/107624093\">SpringCloudStream入门</a></li>\n<li><a href=\"https://blog.csdn.net/MinggeQingchun/article/details/125422875\">SpringCloudStream进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38399962/article/details/82192340\">SpringCloudStream详解</a></li>\n</ul>\n</blockquote>\n<p>SpringCloudStream：SpringCloud中实现 <code>生产消费模式</code> 的框架</p>\n<h1 id=\"SpringListener\"><a href=\"#SpringListener\" class=\"headerlink\" title=\"SpringListener\"></a>SpringListener</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zxh1991811/article/details/109737845\">SpringListener入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_54355172/article/details/128592476\">SpringListener进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u022812849/article/details/113988850\">SpringListener详解</a></li>\n</ul>\n</blockquote>\n<p>SpringListener：SpringBoot中实现 <code>发布订阅模式</code> 的框架</p>\n<h1 id=\"SpringCloudBus\"><a href=\"#SpringCloudBus\" class=\"headerlink\" title=\"SpringCloudBus\"></a>SpringCloudBus</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43409401/article/details/127999009\">SpringCloudBus入门</a></li>\n<li><a href=\"https://blog.csdn.net/ssehs/article/details/107310530\">SpringCloudBus进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45606067/article/details/120115003\">SpringCloudBus详解</a></li>\n</ul>\n</blockquote>\n<p>SpringCloudBus：SpringCloud中实现 <code>发布订阅模式</code> 的框架</p>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-integration","url":"/2017/07/01/lang/lang-1-java/senior/java-8-spring-integration/","content":"<h1 id=\"SpringIntegration\"><a href=\"#SpringIntegration\" class=\"headerlink\" title=\"SpringIntegration\"></a>SpringIntegration</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jpgzhu/article/details/107362237\">SpringIntegration详解</a></li>\n</ul>\n</blockquote>\n<p>SpringIntegration：可以实现企业服务总线（Enterprise Service Bus）的框架</p>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"spring-cloud","url":"/2017/07/01/lang/lang-1-java/senior/java-9-spring-cloud/","content":"<h1 id=\"MicroService\"><a href=\"#MicroService\" class=\"headerlink\" title=\"MicroService\"></a>MicroService</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/A1342772/article/details/122016394\">微服务组件详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>服务治理：注册中心（注册和发现）、配置中心、网关</li>\n<li>服务调用：负载均衡</li>\n<li>服务防护：重试、熔断、降级、限流、预热</li>\n</ul>\n<h2 id=\"Service-Management（服务治理）\"><a href=\"#Service-Management（服务治理）\" class=\"headerlink\" title=\"Service Management（服务治理）\"></a>Service Management（服务治理）</h2><h3 id=\"注册中心\"><a href=\"#注册中心\" class=\"headerlink\" title=\"注册中心\"></a>注册中心</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42046105/article/details/123436832\">微服务之注册中心对比详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"配置中心\"><a href=\"#配置中心\" class=\"headerlink\" title=\"配置中心\"></a>配置中心</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kiranet/article/details/117406680\">微服务之配置中心对比详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"网关\"><a href=\"#网关\" class=\"headerlink\" title=\"网关\"></a>网关</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41715077/article/details/103832340\">微服务网关入门</a></li>\n<li><a href=\"https://blog.csdn.net/lml200701158/article/details/123153378\">微服务网关进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38405253/article/details/119066381\">微服务网关详解</a></li>\n<li><a href=\"https://blog.csdn.net/hey_girl_/article/details/125021024\">python微服务方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/hey_girl_/article/details/127199059\">python微服务网关详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39928446/article/details/116263035\">微服务网关之Zuul和Ribbon的关系</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45525272/article/details/125945303\">微服务网关之Zuul和Nginx的区别</a></li>\n<li><a href=\"https://blog.csdn.net/tyyking/article/details/82750754\">微服务网关之Ribbon和Nginx的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Nginx：支持所以语言的网关，可通过插件进行增强</li>\n<li>Zuul：支持java语言的网关，可编程进行增强</li>\n</ul>\n<h2 id=\"Service-Invocation（服务调用）\"><a href=\"#Service-Invocation（服务调用）\" class=\"headerlink\" title=\"Service Invocation（服务调用）\"></a>Service Invocation（服务调用）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/songyinyi/article/details/106191656\">微服务之Feign和OpenFeign的区别</a></li>\n<li><a href=\"https://blog.csdn.net/a1036645146/article/details/106384888\">微服务之Feign、Ribbon、Hystrix的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/Michaelwubo/article/details/131409896\">微服务之Feign、Ribbon、Hystrix的超时详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/121640717\">微服务之Feign和Dubbo对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/csdn2497242041/article/details/119875908\">微服务之Feign和Dubbo对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36906627/article/details/104419474\">微服务之Thrift和Dubbo对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/ChrisLu777/article/details/121199117\">微服务之使用Ribbon为RestTemplate实现负载均衡</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>Feign：客户端请求库（Request）</li>\n<li>Ribbon：客户端请求负载均衡器（LoadBalance）</li>\n<li>Hystrix：客户端请求断路器（Breaker）和限流器（Limiter）</li>\n</ul>\n<h2 id=\"Service-Shield（服务防护）\"><a href=\"#Service-Shield（服务防护）\" class=\"headerlink\" title=\"Service Shield（服务防护）\"></a>Service Shield（服务防护）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/120814063\">微服务之降级、熔断、限流与缓存预热</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Retry（重试）\"><a href=\"#Retry（重试）\" class=\"headerlink\" title=\"Retry（重试）\"></a>Retry（重试）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41715077/article/details/83792542\">微服务之重试详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34417408/article/details/116943097\">微服务之重试算法</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Breaker（熔断）\"><a href=\"#Breaker（熔断）\" class=\"headerlink\" title=\"Breaker（熔断）\"></a>Breaker（熔断）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27184497/article/details/119993725\">微服务之熔断和降级详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43945983/article/details/84832047\">微服务之熔断和隔离详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Fallback（降级）\"><a href=\"#Fallback（降级）\" class=\"headerlink\" title=\"Fallback（降级）\"></a>Fallback（降级）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ityouknow/article/details/81230412\">微服务之降级入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44750696/article/details/125230193\">微服务之降级进阶</a></li>\n<li><a href=\"https://blog.csdn.net/IT__learning/article/details/121712616\">微服务之降级详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Limiter（限流）\"><a href=\"#Limiter（限流）\" class=\"headerlink\" title=\"Limiter（限流）\"></a>Limiter（限流）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zheng45/article/details/121053335\">微服务之限流详解</a></li>\n<li><a href=\"https://blog.csdn.net/CrankZ/article/details/115152054\">微服务之限流算法</a></li>\n<li><a href=\"https://blog.csdn.net/qianshangding0708/article/details/104026669\">微服务之漏桶和令牌桶限流算法的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"WarmUp（预热）\"><a href=\"#WarmUp（预热）\" class=\"headerlink\" title=\"WarmUp（预热）\"></a>WarmUp（预热）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lp19861126/article/details/117399376\">微服务之预热详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"CommonService\"><a href=\"#CommonService\" class=\"headerlink\" title=\"CommonService\"></a>CommonService</h1><h2 id=\"NamingService（命名服务）\"><a href=\"#NamingService（命名服务）\" class=\"headerlink\" title=\"NamingService（命名服务）\"></a>NamingService（命名服务）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w372426096/article/details/78526591\">命名服务入门</a></li>\n<li><a href=\"https://blog.csdn.net/HelloCedar/article/details/109321482\">命名服务进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Firehotest/article/details/70837274\">命名服务详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"KMS（密钥管理服务）\"><a href=\"#KMS（密钥管理服务）\" class=\"headerlink\" title=\"KMS（密钥管理服务）\"></a>KMS（密钥管理服务）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/WangYouJin321/article/details/127384352\">密钥管理服务入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_58307569/article/details/125501785\">密钥管理服务详解</a></li>\n<li><a href=\"https://www.cnblogs.com/2018/p/14356796.html\">密钥管理服务开源</a></li>\n</ul>\n</blockquote>\n<h1 id=\"ServiceMesh\"><a href=\"#ServiceMesh\" class=\"headerlink\" title=\"ServiceMesh\"></a>ServiceMesh</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wmq880204/article/details/111624017\">微服务之ServiceMesh和SpringCloud对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SpringCloud\"><a href=\"#SpringCloud\" class=\"headerlink\" title=\"SpringCloud\"></a>SpringCloud</h1><blockquote>\n<ul>\n<li><a href=\"https://segmentfault.com/a/1190000022949339\">SpringCloud详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SpringCloudNetflix\"><a href=\"#SpringCloudNetflix\" class=\"headerlink\" title=\"SpringCloudNetflix\"></a>SpringCloudNetflix</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/j1231230/article/details/117283740\">SpringCloudNetflix详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>注册中心：Eureka</li>\n<li>配置中心：Archaius</li>\n<li>网关中心：Zuul</li>\n<li>服务调用：Feign + Ribbon</li>\n<li>服务防护：Hystrix</li>\n</ul>\n<h3 id=\"Eureka\"><a href=\"#Eureka\" class=\"headerlink\" title=\"Eureka\"></a>Eureka</h3><h3 id=\"Archaius\"><a href=\"#Archaius\" class=\"headerlink\" title=\"Archaius\"></a>Archaius</h3><h3 id=\"Zuul\"><a href=\"#Zuul\" class=\"headerlink\" title=\"Zuul\"></a>Zuul</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44112474/article/details/109094775\">Zuul入门</a></li>\n<li><a href=\"https://blog.csdn.net/as_hswa/article/details/120180425\">Zuul进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u013277209/article/details/111196171\">Zuul详解</a></li>\n<li><a href=\"https://blog.csdn.net/skh2015java/article/details/120141371\">Zuul配置</a></li>\n<li><a href=\"https://blog.csdn.net/k_young1997/article/details/104100361\">Zuul限流</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Feign\"><a href=\"#Feign\" class=\"headerlink\" title=\"Feign\"></a>Feign</h3><h3 id=\"Hystrix\"><a href=\"#Hystrix\" class=\"headerlink\" title=\"Hystrix\"></a>Hystrix</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38149225/article/details/109454418\">Hystrix入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43700718/article/details/107366659\">Hystrix进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38192427/article/details/121184221\">Hystrix详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SpringCloudAlibaba\"><a href=\"#SpringCloudAlibaba\" class=\"headerlink\" title=\"SpringCloudAlibaba\"></a>SpringCloudAlibaba</h2><blockquote>\n<ul>\n<li><a href=\"https://spring-cloud-alibaba-group.github.io/github-pages/hoxton/zh-cn/index.html\">SpringCloudAlibaba文档</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>注册中心：Nacos</li>\n<li>配置中心：Nacos</li>\n<li>网关中心：无</li>\n<li>服务调用：Dubbo</li>\n<li>服务防护：Sentinel</li>\n</ul>\n<h3 id=\"Nacos\"><a href=\"#Nacos\" class=\"headerlink\" title=\"Nacos\"></a>Nacos</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Burnup_110/article/details/110230771\">Nacos入门</a></li>\n<li><a href=\"https://blog.csdn.net/Top_L398/article/details/111352983\">Nacos进阶</a></li>\n<li><a href=\"https://nacos.io/zh-cn/docs/what-is-nacos.html\">Nacos详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Dubbo\"><a href=\"#Dubbo\" class=\"headerlink\" title=\"Dubbo\"></a>Dubbo</h3><h3 id=\"Sentinel\"><a href=\"#Sentinel\" class=\"headerlink\" title=\"Sentinel\"></a>Sentinel</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LeoHan163/article/details/121745164\">Sentinel入门</a></li>\n<li><a href=\"https://blog.csdn.net/cdbdqn001/article/details/88683577\">Sentinel进阶</a></li>\n<li><a href=\"https://github.com/alibaba/Sentinel/wiki/%E4%BB%8B%E7%BB%8D\">Sentinel详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SpringCloudOfficial\"><a href=\"#SpringCloudOfficial\" class=\"headerlink\" title=\"SpringCloudOfficial\"></a>SpringCloudOfficial</h2><ul>\n<li>注册中心：无</li>\n<li>配置中心：SpringCloudConfig、SpringCloudVault</li>\n<li>网关中心：SpringCloudGateway</li>\n<li>服务调用：OpenFeign</li>\n<li>服务防护：无</li>\n</ul>\n<h3 id=\"SpringCloudConfig\"><a href=\"#SpringCloudConfig\" class=\"headerlink\" title=\"SpringCloudConfig\"></a>SpringCloudConfig</h3><h3 id=\"SpringCloudVault\"><a href=\"#SpringCloudVault\" class=\"headerlink\" title=\"SpringCloudVault\"></a>SpringCloudVault</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/seashouwang/article/details/90243984\">SpringCloudVault</a></li>\n</ul>\n</blockquote>\n<p>支持配置信息加密存储</p>\n<h3 id=\"SpringCloudGateway\"><a href=\"#SpringCloudGateway\" class=\"headerlink\" title=\"SpringCloudGateway\"></a>SpringCloudGateway</h3><h1 id=\"SpringNative\"><a href=\"#SpringNative\" class=\"headerlink\" title=\"SpringNative\"></a>SpringNative</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41354631/article/details/127847889\">SpringNative入门</a></li>\n</ul>\n</blockquote>\n<h1 id=\"PlatformService\"><a href=\"#PlatformService\" class=\"headerlink\" title=\"PlatformService\"></a>PlatformService</h1><p>统一认证平台 cas<br>统一授权平台 cas<br>统一发号平台</p>\n<p>统一邮件平台<br>统一短信平台<br>统一电话平台</p>\n<p>统一日志平台<br>统一监控平台<br>统一告警平台</p>\n<p>统一通知平台<br>统一推送平台<br>统一营销平台</p>\n<h2 id=\"MCS\"><a href=\"#MCS\" class=\"headerlink\" title=\"MCS\"></a>MCS</h2><h3 id=\"统一推送平台\"><a href=\"#统一推送平台\" class=\"headerlink\" title=\"统一推送平台\"></a>统一推送平台</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_48333563/article/details/125968144\">消息推送方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45583158/article/details/130437149\">消息推送技术之容灾方案</a></li>\n<li><a href=\"https://blog.csdn.net/ldw201510803006/article/details/130306152\">消息推送技术之SSE详解</a></li>\n</ul>\n</blockquote>\n<p>消息推送方案</p>\n<ul>\n<li>轮询（短轮询和长轮询）</li>\n<li>WebSocket</li>\n<li>SSE</li>\n<li>MQTT</li>\n<li>第三方平台</li>\n</ul>\n<h2 id=\"MWS\"><a href=\"#MWS\" class=\"headerlink\" title=\"MWS\"></a>MWS</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_58008803/article/details/122190997\">美团服务平台MWS详解</a></li>\n<li><a href=\"https://blog.csdn.net/MeituanTech/article/details/100933270\">美团容器调度平台 Hulk</a></li>\n<li><a href=\"https://blog.csdn.net/MeituanTech/article/details/123564403\">美团服务发布平台 Plus</a></li>\n<li><a href=\"https://blog.csdn.net/MeituanTech/article/details/114683799\">美团服务治理平台 OCTO</a></li>\n<li><a href=\"https://blog.csdn.net/MeituanTech/article/details/82495858\">美团服务网关平台 Oceanus</a></li>\n<li><a href=\"https://blog.csdn.net/nikeylee/article/details/117712209\">美团服务监控平台 Cat</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18603599/article/details/80767920\">美团链路追踪 MTrace</a></li>\n<li><a href=\"https://blog.csdn.net/minkeyto/article/details/104943883\">美团全局ID Leaf</a></li>\n<li><a href=\"https://blog.csdn.net/shijinghan1126/article/details/110871920\">美团KV存储 Squirrel</a></li>\n<li><a href=\"https://tech.meituan.com/archives\">美团命名服务 MNS</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/43122658\">美团环境管理 Cargo</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>美团容器调度平台 Hulk</li>\n<li>美团服务发布平台 Plus</li>\n<li>美团服务治理平台 OCTO</li>\n<li>美团服务网关平台 Oceanus</li>\n<li>美团服务配置平台 MCC、Lion</li>\n<li>美团服务监控平台 Cat</li>\n<li>美团服务告警平台 Raptor</li>\n<li>美团任务调度平台 Crane</li>\n<li>美团链路追踪 MTrace</li>\n<li>美团全局ID Leaf</li>\n<li>美团KV存储 Squirrel、Cellar</li>\n<li>美团项目管理 Avatar</li>\n<li>美团环境管理 Cargo</li>\n<li>美团命名服务 MNS</li>\n<li>美团移动端推送服务 Pike</li>\n<li>美团移动端长链接 Shark</li>\n</ul>\n<h1 id=\"CloudService\"><a href=\"#CloudService\" class=\"headerlink\" title=\"CloudService\"></a>CloudService</h1><p>service mesh spring cloud<br>docker docker compose docker swarm<br>k8s yarn mesos</p>\n<p>一切基于网络的服务都可以上云<br>iaas 提供设施（facility）<br>paas 提供平台（platform）<br>saas 提供服务（service）</p>\n<p>设施 服务器 存储 网络 云电脑 云手机<br>平台 云计算 云存储 云相册 云媒体 云游戏<br>服务 cdn iot 云推送 云打印 云冲洗</p>\n","categories":["+ lang + java + senior"],"tags":["+ java"]},{"title":"mysql","url":"/2017/09/01/tech/development/junior/dev-1-mysql/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SeniorShen/article/details/108646562\">常见的数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/linux12121/article/details/52566005\">嵌入式数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/yangyin007/article/details/124120563\">分布式数据库详解</a></li>\n<li><a href=\"https://blog.csdn.net/china_coding/article/details/125827372\">mysql知识点</a></li>\n<li><a href=\"https://blog.csdn.net/EPFL_Panda/article/details/100579485\">mysql必知必会</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/127168632\">mysql命名规范</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37896194/article/details/108244431\">mysql建表规范</a></li>\n<li><a href=\"https://blog.csdn.net/hechaojie_com/article/details/84885804\">mysql字段规范</a></li>\n<li><a href=\"https://blog.csdn.net/jack1liu/article/details/112342170\">mysql建表最佳实践</a></li>\n<li><a href=\"https://blog.csdn.net/zhouhengzhe/article/details/112671416\">mysql索引最佳实践</a></li>\n<li><a href=\"https://blog.csdn.net/martin_chen2/article/details/121149963\">mysql查询最佳实践</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mahaiwuji/article/details/105231895\">mysql概念</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40393000/article/details/104997574\">主键和外键详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40899182/article/details/81706253\">数据库范式入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43433032/article/details/89293663\">数据库范式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zgcr654321/article/details/93385986\">数据库范式详解</a></li>\n<li><a href=\"https://blog.csdn.net/Sebastien23/article/details/120615471\">数据库架构相关概念</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43889841/article/details/120361571\">数据库架构之分布式架构</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Engine\"><a href=\"#Engine\" class=\"headerlink\" title=\"Engine\"></a>Engine</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40433141/article/details/103963988\">mysql引擎入门</a></li>\n<li><a href=\"https://blog.csdn.net/longjialin93528/article/details/80693748\">mysql引擎进阶</a></li>\n<li><a href=\"https://blog.csdn.net/RitaAndWakaka/article/details/118059592\">mysql引擎详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Database\"><a href=\"#Database\" class=\"headerlink\" title=\"Database\"></a>Database</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kikajack/article/details/80065753\">mysql系统库详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Table\"><a href=\"#Table\" class=\"headerlink\" title=\"Table\"></a>Table</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44863976/article/details/102789392\">mysql虚拟表详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Codec\"><a href=\"#Codec\" class=\"headerlink\" title=\"Codec\"></a>Codec</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sun8112133/article/details/79921734\">mysql编码入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43563999/article/details/105820952\">mysql编码进阶</a></li>\n<li><a href=\"https://blog.csdn.net/jerry741/article/details/119710816\">mysql编码详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013161278/article/details/128735697\">mysql编码精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46225886/article/details/111564032\">mysql编码之转换规则</a></li>\n<li><a href=\"https://blog.csdn.net/qq_26514509/article/details/85145433\">mysql编码之终端乱码</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/120664245\">mysql编码之SET NAMES命令</a></li>\n<li><a href=\"https://dev.mysql.com/doc/refman/5.7/en/set-character-set.html\">mysql编码之SET CHARACTER SET命令</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30809333/article/details/99855676\">mysql编码之character_set_connection的作用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Sort\"><a href=\"#Sort\" class=\"headerlink\" title=\"Sort\"></a>Sort</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/horses/article/details/118523918\">mysql排序之中文排序</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/youarenotme/article/details/109401447\">mysql配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/Burnup_110/article/details/115079157\">mysql配置详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"TimeZone\"><a href=\"#TimeZone\" class=\"headerlink\" title=\"TimeZone\"></a>TimeZone</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33293878/article/details/89532459\">mysql时区配置</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Engine-1\"><a href=\"#Engine-1\" class=\"headerlink\" title=\"Engine\"></a>Engine</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/locahuang/article/details/110487836\">mysql引擎配置</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Codec-1\"><a href=\"#Codec-1\" class=\"headerlink\" title=\"Codec\"></a>Codec</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ypp91zr/article/details/89216979\">mysql编码配置</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Auth\"><a href=\"#Auth\" class=\"headerlink\" title=\"Auth\"></a>Auth</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SunZLong/article/details/103926902\">mysql认证配置</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Log\"><a href=\"#Log\" class=\"headerlink\" title=\"Log\"></a>Log</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cup_chenyubo/article/details/107265095\">mysql日志配置</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44233929/article/details/111471280\">mysql的核心log</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45880055/article/details/114539483\">mysql的各种log</a></li>\n<li><a href=\"https://www.cnblogs.com/xuwc/p/14037750.html\">mysql日志之预写日志（WAL）入门</a></li>\n<li><a href=\"https://blog.csdn.net/Androidlushangderen/article/details/91061456\">mysql日志之预写日志（WAL）详解</a></li>\n</ul>\n</blockquote>\n<p>预写日志：Write-Ahead Log（）</p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_51356824/article/details/120744028\">mysql入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45173404/article/details/115712758\">mysql进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52627845/article/details/112293091\">mysql详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36969257/article/details/81364113\">mysql语法入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzvar/article/details/115675248\">mysql语法进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44944641/article/details/116840432\">mysql语法详解</a></li>\n<li><a href=\"https://blog.csdn.net/li1669852599/article/details/115912588\">mysql之各种大小限制入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30670859/article/details/113199101\">mysql之各种大小限制进阶</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000024515231\">mysql之各种大小限制详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DDL（Data-Definition-Language）\"><a href=\"#DDL（Data-Definition-Language）\" class=\"headerlink\" title=\"DDL（Data Definition Language）\"></a>DDL（Data Definition Language）</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/helunqu2017/article/details/113284434\">mysql数据类型入门</a></li>\n<li><a href=\"https://blog.csdn.net/yuzhiqiang_1993/article/details/81453569\">mysql数据类型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_64338546/article/details/128548285\">mysql数据类型详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39390545/article/details/115325072\">mysql隐式转换入门</a></li>\n<li><a href=\"https://blog.csdn.net/lin2535290272/article/details/107641818\">mysql隐式转换进阶</a></li>\n<li><a href=\"https://blog.csdn.net/horses/article/details/118120395\">mysql隐式转换详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"string\"><a href=\"#string\" class=\"headerlink\" title=\"string\"></a>string</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kl_Dreaming/article/details/109465964\">mysql类型之char、varchar和text的区别</a></li>\n<li><a href=\"https://blog.csdn.net/songkai558919/article/details/119856984\">mysql类型之varchar和text的区别</a></li>\n<li><a href=\"https://blog.csdn.net/phpstory/article/details/93474091\">mysql类型之varchar(255)为什么是255</a></li>\n<li><a href=\"https://blog.csdn.net/u012516166/article/details/110132358\">mysql类型之varchar(255)为什么是255而不是256</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39099905/article/details/125521665\">mysql类型之varchar(255)和varchar(256)的区别</a></li>\n<li><a href=\"https://blog.csdn.net/I_am_hardy/article/details/121103187\">mysql类型之varchar(255)和varchar(100)的区别</a></li>\n<li><a href=\"https://blog.csdn.net/wzmde007/article/details/105994691\">mysql类型之varchar的最大长度入门</a></li>\n<li><a href=\"https://blog.csdn.net/zgdwxp/article/details/103341778\">mysql类型之varchar的最大长度详解</a></li>\n<li><a href=\"https://blog.csdn.net/liu865033503/article/details/96428486\">mysql类型之char类型的默认值</a></li>\n<li><a href=\"https://blog.csdn.net/I_lost/article/details/103292181\">mysql类型之text类型的默认值</a></li>\n</ul>\n</blockquote>\n<h4 id=\"number\"><a href=\"#number\" class=\"headerlink\" title=\"number\"></a>number</h4><p>int的最大值为2147483647（10位），bigint的最大值9223372036854775807（19位）</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37583655/article/details/118309057\">mysql类型之int的范围</a></li>\n<li><a href=\"https://blog.csdn.net/zgdwxp/article/details/102503090\">mysql类型之int的显示宽度</a></li>\n<li><a href=\"https://blog.csdn.net/ZBylant/article/details/86572567\">mysql类型之int(11)是什么意思</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22771739/article/details/85833710\">mysql类型之bigint(20)是什么意思</a></li>\n<li><a href=\"https://blog.csdn.net/u011794238/article/details/50902405\">mysql类型之浮点数（float、double）和定点数（decimal）</a></li>\n</ul>\n</blockquote>\n<h4 id=\"boolean\"><a href=\"#boolean\" class=\"headerlink\" title=\"boolean\"></a>boolean</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiasiyu123456/article/details/122689297\">mysql类型之boolean类型详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"datatime\"><a href=\"#datatime\" class=\"headerlink\" title=\"datatime\"></a>datatime</h4><h5 id=\"datatime-1\"><a href=\"#datatime-1\" class=\"headerlink\" title=\"datatime\"></a>datatime</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/L_15156024189/article/details/120297227\">mysql类型之datatime详解</a></li>\n<li><a href=\"https://blog.csdn.net/weter_drop/article/details/89924451\">mysql类型之timestamp详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014696474/article/details/70568733\">mysql类型之datatime和timestamp的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/100679675\">mysql类型之datatime和timestamp的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44967580/article/details/115422674\">mysql类型之创建时间列（create_time）和更新时间列（update_time）入门</a></li>\n<li><a href=\"https://blog.csdn.net/Eternal_Blue/article/details/107929528\">mysql类型之创建时间列（create_time）和更新时间列（update_time）详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"format\"><a href=\"#format\" class=\"headerlink\" title=\"format\"></a>format</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sayyy/article/details/114117532\">mysql日期格式化</a></li>\n</ul>\n</blockquote>\n<h5 id=\"timezone\"><a href=\"#timezone\" class=\"headerlink\" title=\"timezone\"></a>timezone</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/115445425\">mysql时区问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/115445442\">mysql时区问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_38072683/article/details/105011313\">mysql时区问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44804750/article/details/107097136\">java时区问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42258975/article/details/107674028\">java时区问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/weter_drop/article/details/103187607\">正确处理时间和时区问题</a></li>\n</ul>\n</blockquote>\n<h4 id=\"enum\"><a href=\"#enum\" class=\"headerlink\" title=\"enum\"></a>enum</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43725548/article/details/121397067\">mysql类型之enum详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_30549099/article/details/107395521\">mysql类型之为什么不推荐默认值为null</a></li>\n<li><a href=\"https://blog.csdn.net/yuxiangdeming/article/details/124926799\">mysql类型之null（空值）和空串的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46623003/article/details/115591617\">mysql类型之null（空值约束）和default（默认值）的关系</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46093829/article/details/118205064\">mysql类型之null的常见问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/wohu1104/article/details/105418756\">mysql类型之null的常见问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/MyronCham/article/details/110005743\">mysql类型之null的常见问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013767919/article/details/123940635\">mysql类型之null和比较符号的关系</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33833327/article/details/81513152\">mysql类型之null和不等操作的关系</a></li>\n<li><a href=\"https://blog.csdn.net/Crystalqy/article/details/114086528\">mysql类型之null和聚合操作的关系</a></li>\n<li><a href=\"https://blog.csdn.net/q3dxdx/article/details/49158933\">mysql类型之null和聚合函数的关系</a></li>\n<li><a href=\"https://blog.csdn.net/quiet_girl/article/details/88641787\">mysql类型之null和数量统计的关系</a></li>\n<li><a href=\"https://blog.csdn.net/hellozhxy/article/details/120700284\">mysql类型之null和索引的关系</a></li>\n<li><a href=\"https://blog.csdn.net/Dkangel/article/details/118688335\">mysql类型之null会导致联合索引失效</a></li>\n<li><a href=\"https://blog.csdn.net/pan_junbiao/article/details/85928004\">mysql类型之null相关函数</a></li>\n<li><a href=\"https://blog.csdn.net/u014231523/article/details/48341201\">mysql类型之null转换函数</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ip\"><a href=\"#ip\" class=\"headerlink\" title=\"ip\"></a>ip</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lizhengyu891231/article/details/120107857\">mysql类型之ip存储详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29229567/article/details/88735540\">ip字符串和数字转换算法</a></li>\n</ul>\n</blockquote>\n<h4 id=\"url\"><a href=\"#url\" class=\"headerlink\" title=\"url\"></a>url</h4><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/qiupuwork/p/16003916.html\">mysql类型之url存储详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"geo\"><a href=\"#geo\" class=\"headerlink\" title=\"geo\"></a>geo</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tanghaixu/article/details/120352593\">mysql类型之geo入门</a></li>\n<li><a href=\"https://blog.csdn.net/tanghaixu/article/details/120405373\">mysql类型之geo进阶</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_34351851/article/details/130103692\">mysql类型之geo详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27690839/article/details/90377659\">mysql类型之geo函数</a></li>\n<li><a href=\"https://blog.csdn.net/LNView/article/details/85682411\">mysql类型之如何保存经纬度入门</a></li>\n<li><a href=\"https://blog.csdn.net/lisuibi/article/details/109601346\">mysql类型之如何保存经纬度进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44706754/article/details/89679956\">mysql类型之如何保存经纬度详解</a></li>\n<li><a href=\"https://bbs.csdn.net/topics/370080976\">mysql类型之如何保存经纬度讨论</a></li>\n<li><a href=\"https://blog.csdn.net/lhl161123/article/details/73470012\">经纬度格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/sunyoop/article/details/80454130\">经纬度格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/A_L_A_N/article/details/106785949\">经纬度坐标系入门</a></li>\n<li><a href=\"https://blog.csdn.net/tyst08/article/details/100996624\">经纬度坐标系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ShareUs/article/details/86695708\">经纬度坐标系详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43542818/article/details/111366708\">经纬度坐标系算法</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39426934/article/details/90241941\">经纬度坐标系转换入门</a></li>\n<li><a href=\"https://blog.csdn.net/hltt3838/article/details/110433602\">经纬度坐标系转换进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hbiao68/article/details/119250958\">经纬度坐标系转换详解</a></li>\n<li><a href=\"https://blog.csdn.net/chunqingtai2922/article/details/101029536\">geo查询之地理围栏算法</a></li>\n</ul>\n</blockquote>\n<h3 id=\"constraint\"><a href=\"#constraint\" class=\"headerlink\" title=\"constraint\"></a>constraint</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/z_johnny/article/details/113820405\">mysql约束详解</a></li>\n<li><a href=\"https://blog.csdn.net/lengjunguan/article/details/125047474\">mysql之为什么不推荐外键入门</a></li>\n<li><a href=\"https://blog.csdn.net/yxz8102/article/details/107303975\">mysql之为什么不推荐外键详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>主键约束：PRIMARY KEY</li>\n<li>外键约束：FOREIGN KEY</li>\n<li>唯一约束：UNIQUE KEY</li>\n<li>列值约束：NOT NULL | DEFAULT</li>\n<li>自定义约束：CHECK</li>\n</ul>\n<h3 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HeatDeath/article/details/79833462\">id选择方案汇总</a></li>\n<li><a href=\"https://blog.csdn.net/yangfengjueqi/article/details/79569072\">id选择之int和bigint</a></li>\n<li><a href=\"https://blog.csdn.net/l1028386804/article/details/51140577\">id选择之int和varchar</a></li>\n<li><a href=\"https://blog.csdn.net/u010867667/article/details/54863270\">id之uuid入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_23994787/article/details/90289743\">id之uuid进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39612817/article/details/111200337\">id之uuid详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_62982856/article/details/127963602\">id之uuid精进</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/126464497\">id之雪花id详解</a></li>\n<li><a href=\"https://blog.csdn.net/mxy2404830/article/details/123554578\">id之为什么不推荐uuid和雪花id</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43665821/article/details/123883614\">id之为什么不推荐uuid</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33312725/article/details/128864801\">id之为什么不推荐雪花id</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33316366/article/details/113682046\">id之为什么要求递增性</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DML（Data-Manipulation-Language）\"><a href=\"#DML（Data-Manipulation-Language）\" class=\"headerlink\" title=\"DML（Data Manipulation Language）\"></a>DML（Data Manipulation Language）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40262372/article/details/118382506\">mysql之各种insert的区别1</a></li>\n<li><a href=\"https://blog.csdn.net/fffvdgjvbsfkb123456/article/details/109543779\">mysql之各种insert的区别2</a></li>\n<li><a href=\"https://blog.csdn.net/zmzwll1314/article/details/107821050\">mysql之各种insert的区别3</a></li>\n<li><a href=\"https://blog.csdn.net/fangmeng1997/article/details/103971859\">mysql之各种insert的区别4</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28603127/article/details/107227640\">mysql之各种insert的区别5</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>insert：插入<ul>\n<li>insertOrReject：不存在就插入，存在时就拒绝</li>\n<li>insertOrIgnore：不存在就插入，存在时就忽略</li>\n<li>insertOrUpdate：不存在就插入，存在时就更新</li>\n<li>insertOrReplace：不存在就插入，存在时就替换</li>\n</ul>\n</li>\n<li>update（modify）：（部分）更新（修改）<ul>\n<li>updateOrReject：存在时就更新，不存在就拒绝（不常见） </li>\n<li>updateOrIgnore：存在时就更新，不存在就忽略</li>\n<li>updateOrInsert：存在时就更新，不存在就插入（等同于insertOrUpdate）</li>\n</ul>\n</li>\n<li>replace（modify）：（整体）替换（修改）<ul>\n<li>replaceOrReject：存在时就替换，不存在就拒绝（不常见）</li>\n<li>replaceOrIgnore：存在时就替换，不存在就忽略</li>\n<li>replaceOrInsert：存在时就替换，不存在就插入（等同于insertOrReplace）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：修改（change）广义上包含insert（插入）、update（更新）、delete（删除）操作<br>ps：替换（replace）也是一种修改，本质是delete（删除）+ insert（插入）</p>\n</blockquote>\n<h3 id=\"insert\"><a href=\"#insert\" class=\"headerlink\" title=\"insert\"></a>insert</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44848356/article/details/119113174\">mysql插入之insertOrReject入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40194399/article/details/94554191\">mysql插入之insertOrReject详解</a></li>\n<li><a href=\"https://blog.csdn.net/zgaoq/article/details/124432806\">mysql插入之insertOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/minihuabei/article/details/128640793\">mysql插入之insertOrIgnore详解</a></li>\n<li><a href=\"https://blog.csdn.net/analogous_love/article/details/71085001\">mysql插入之insertOrUpdate入门</a></li>\n<li><a href=\"https://blog.csdn.net/Saintmm/article/details/127444881\">mysql插入之insertOrUpdate详解</a></li>\n<li><a href=\"https://blog.csdn.net/risingsun001/article/details/38977797\">mysql替换之insertOrReplace入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34845394/article/details/107632414\">mysql替换之insertOrReplace详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41089622/article/details/114987649\">mysql插入之批量insert</a></li>\n<li><a href=\"https://blog.csdn.net/u012660464/article/details/117416047\">mysql插入之防重插入</a></li>\n</ul>\n</blockquote>\n<p>单个插入、批量插入</p>\n<p>insertOrReject：insert into<br>insertOrIgnore：insert ignore into<br>insertOrUpdate: insert into … on duplicate key update<br>insertOrReplace：replace into</p>\n<p>全局唯一主键插入防重复方案</p>\n<ul>\n<li>重试：捕获主键重复异常（比如DuplicateKeyException）并换一个主键重试（适合<code>读多写少</code>的场景）</li>\n<li>加锁：<ul>\n<li>悲观锁：<code>select for update</code>检测到重复后换一个主键重试（适合<code>常规读写</code>的场景）</li>\n<li>乐观锁：<code>insert ignore into</code>插入失败后换一个主键重试（适合<code>读多写少</code>的场景）</li>\n</ul>\n</li>\n<li>发号：使用不会生成重复号码的发号器</li>\n</ul>\n<h3 id=\"update\"><a href=\"#update\" class=\"headerlink\" title=\"update\"></a>update</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/a6458360/article/details/107968858\">mysql更新之updateOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/netuser1937/article/details/121146827\">mysql更新之updateOrIgnore详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22227087/article/details/115898679\">mysql更新之批量update</a></li>\n</ul>\n</blockquote>\n<p>单个更新、批量更新</p>\n<p>updateOrReject：无<br>updateOrIgnore：update set<br>updateOrInsert：等同于insertOrUpdate</p>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><p>单个替换、批量替换</p>\n<p>replaceOrReject：无<br>replaceOrIgnore：无<br>replaceOrInsert：等同于insertOrReplace</p>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42056745/article/details/103804230\">mysql删除之delete入门</a></li>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/106610831\">mysql删除之delete详解</a></li>\n<li><a href=\"https://blog.csdn.net/jike11231/article/details/126551510\">mysql删除之批量delete</a></li>\n<li><a href=\"https://blog.csdn.net/liu_yulong/article/details/116162841\">mysql重置AUTO_INCREMENT</a></li>\n<li><a href=\"https://blog.csdn.net/xinyuan_java/article/details/93874555\">mysql设置AUTO_INCREMENT</a></li>\n<li><a href=\"https://blog.csdn.net/HONGcheng930728/article/details/103111541\">逻辑删除的实现方案</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/123586766\">逻辑删除与唯一约束冲突的原因</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42432995/article/details/121910236\">逻辑删除与唯一约束冲突的解决方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/YXXXYX/article/details/125546093\">逻辑删除与唯一约束冲突的解决方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kingwinstar/article/details/109880414\">逻辑删除与唯一约束冲突的解决方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/n950814abc/article/details/82284838\">删除重复记录并且只保留一条</a></li>\n</ul>\n</blockquote>\n<p>单个删除、批量删除</p>\n<h2 id=\"DQL（Data-Query-Language）\"><a href=\"#DQL（Data-Query-Language）\" class=\"headerlink\" title=\"DQL（Data Query Language）\"></a>DQL（Data Query Language）</h2><p>等值查询、范围查询、模糊查询、聚合查询、组合查询、关联查询、子查询</p>\n<h3 id=\"general（常规查询）\"><a href=\"#general（常规查询）\" class=\"headerlink\" title=\"general（常规查询）\"></a>general（常规查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wulimingde/article/details/109097424\">mysql运算符入门</a></li>\n<li><a href=\"https://blog.csdn.net/z_johnny/article/details/114108040\">mysql运算符进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45938466/article/details/108011907\">mysql运算符详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013614857/article/details/123659296\">mysql查询之空格</a></li>\n<li><a href=\"https://blog.csdn.net/alashan007/article/details/120852022\">mysql查询之大小写</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42564147/article/details/113637841\">mysql查询之高效的判断是否存在</a></li>\n</ul>\n</blockquote>\n<h4 id=\"select\"><a href=\"#select\" class=\"headerlink\" title=\"select\"></a>select</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40912214/article/details/113564284\">mysql常规查询之select的执行顺序</a></li>\n<li><a href=\"https://blog.csdn.net/lanxingbudui/article/details/117230799\">mysql常规查询之select之悲观锁和乐观锁</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44712778/article/details/120134667\">mysql常规查询之select之排它锁和共享锁</a></li>\n</ul>\n</blockquote>\n<h4 id=\"distinct\"><a href=\"#distinct\" class=\"headerlink\" title=\"distinct\"></a>distinct</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangzehai2234/article/details/88361586\">mysql常规查询之distinct入门</a></li>\n<li><a href=\"https://blog.csdn.net/wang1qqqq/article/details/115241993\">mysql常规查询之distinct详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42648692/article/details/106618707\">mysql常规查询之distinct部分字段</a></li>\n</ul>\n</blockquote>\n<h4 id=\"where\"><a href=\"#where\" class=\"headerlink\" title=\"where\"></a>where</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39588003/article/details/103466141\">mysql常规查询之where入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47702737/article/details/121754921\">mysql常规查询之where详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42054155/article/details/103437801\">mysql常规查询之where的and和or顺序</a></li>\n</ul>\n</blockquote>\n<h4 id=\"groupBy\"><a href=\"#groupBy\" class=\"headerlink\" title=\"groupBy\"></a>groupBy</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wpc2018/article/details/122925224\">mysql常规查询之groupBy入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34062469/article/details/92234801\">mysql常规查询之groupBy详解</a></li>\n<li><a href=\"https://blog.csdn.net/Ssolitude123/article/details/124248069\">mysql常规查询之groupBy之having</a></li>\n<li><a href=\"https://blog.csdn.net/lamanchas/article/details/121404866\">mysql常规查询之groupBy之having和where对比</a></li>\n<li><a href=\"https://blog.csdn.net/nobody_1/article/details/94191028\">mysql常规查询之groupBy之查询其他字段</a></li>\n<li><a href=\"https://blog.csdn.net/u012620150/article/details/81945004\">mysql常规查询之groupBy之group_concat入门</a></li>\n<li><a href=\"https://blog.csdn.net/JineD/article/details/107485723\">mysql常规查询之groupBy之group_concat详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"orderBy\"><a href=\"#orderBy\" class=\"headerlink\" title=\"orderBy\"></a>orderBy</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/L1542334210/article/details/101551041\">mysql常规查询之orderBy入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013991521/article/details/82634247\">mysql常规查询之orderBy进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44684303/article/details/124445293\">mysql常规查询之orderBy详解</a></li>\n<li><a href=\"https://blog.csdn.net/xlxxcc/article/details/52250963\">mysql常规查询之orderBy多字段</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35383263/article/details/81433693\">mysql常规查询之orderBy默认排序</a></li>\n<li><a href=\"https://blog.csdn.net/quader/article/details/122761023\">mysql常规查询之orderBy自定义排序</a></li>\n<li><a href=\"https://blog.csdn.net/vipshop_fin_dev/article/details/115537133\">mysql常规查询之orderBy优化</a></li>\n</ul>\n</blockquote>\n<h4 id=\"limit\"><a href=\"#limit\" class=\"headerlink\" title=\"limit\"></a>limit</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/java123456111/article/details/124583183\">mysql常规查询之limit入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013182595/article/details/109293991\">mysql常规查询之limit进阶</a></li>\n<li><a href=\"https://blog.csdn.net/saber_sss/article/details/103664901\">mysql常规查询之limit详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_25805331/article/details/103995456\">mysql常规查询之limit和groupBy同时使用的问题</a></li>\n<li><a href=\"https://blog.csdn.net/qiubabin/article/details/70135556\">mysql常规查询之limit和orderBy同时使用的问题</a></li>\n<li><a href=\"https://blog.csdn.net/czx2018/article/details/107911967\">mysql常规查询之limit分页优化入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43944305/article/details/105977378\">mysql常规查询之limit分页优化详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"range（范围查询）\"><a href=\"#range（范围查询）\" class=\"headerlink\" title=\"range（范围查询）\"></a>range（范围查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xinyi_jin/article/details/104925399\">mysql范围查询之不等于入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41946557/article/details/103466057\">mysql范围查询之不等于详解</a></li>\n<li><a href=\"https://blog.csdn.net/An1090239782/article/details/100927224\">mysql范围查询之不等于优化为范围查询</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43354181/article/details/88091989\">mysql范围查询之大小比较入门</a></li>\n<li><a href=\"https://blog.csdn.net/IT_model/article/details/103542249\">mysql范围查询之大小比较详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44299027/article/details/109178767\">mysql范围查询之大小比较转义</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzehai2234/article/details/102756107\">mysql范围查询之between入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangcunhuazi/article/details/43025055\">mysql范围查询之between详解</a></li>\n<li><a href=\"https://blog.csdn.net/HD243608836/article/details/121161343\">mysql范围查询之between边界</a></li>\n<li><a href=\"https://blog.csdn.net/u010511598/article/details/106559290\">mysql范围查询之between和大小比较对比</a></li>\n<li><a href=\"https://blog.csdn.net/yihanzhi/article/details/81065573\">mysql范围查询之in入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/120392002\">mysql范围查询之in详解</a></li>\n<li><a href=\"https://blog.csdn.net/Asce_zz/article/details/89000975\">mysql范围查询之in和or对比</a></li>\n<li><a href=\"https://blog.csdn.net/chenyusbyongde/article/details/53584949\">mysql范围查询之in和union对比</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44309181/article/details/111311557\">范围操作之左闭右开入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46841421/article/details/109742410\">范围操作之左闭右开详解</a></li>\n</ul>\n</blockquote>\n<p>范围查询：左闭右闭（数据库用的多）、左闭右开（编程语言用的多）、左开右闭、左开右开</p>\n<h3 id=\"fuzzy（模糊查询）\"><a href=\"#fuzzy（模糊查询）\" class=\"headerlink\" title=\"fuzzy（模糊查询）\"></a>fuzzy（模糊查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/momushen/article/details/107788833\">mysql模糊查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39390545/article/details/106414765\">mysql模糊查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38405253/article/details/129869988\">mysql模糊查询之如何高效的实现模糊查询</a></li>\n</ul>\n</blockquote>\n<p>prefix、contains、wildcard、regexp、fuzzy</p>\n<h3 id=\"aggregation（聚合查询）\"><a href=\"#aggregation（聚合查询）\" class=\"headerlink\" title=\"aggregation（聚合查询）\"></a>aggregation（聚合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wpc2018/article/details/122925224\">mysql聚合查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013066244/article/details/121389279\">mysql聚合查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/Hello_Mr_X/article/details/101013526\">mysql聚合查询之count(1)和count(*)区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/A_dg_Jffery/article/details/107588525\">mysql聚合查询之count(1)和count(*)区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/iFuMI/article/details/77920767\">mysql聚合查询之count(1)和count(*)区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35387940/article/details/102914793\">mysql聚合查询之count(1)和count(*)原理详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"combinedQuery（组合查询）\"><a href=\"#combinedQuery（组合查询）\" class=\"headerlink\" title=\"combinedQuery（组合查询）\"></a>combinedQuery（组合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42373127/article/details/88909814\">mysql组合查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42843770/article/details/106824778\">mysql组合查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/lisainan66/article/details/106040944\">mysql组合查询之union和or对比</a></li>\n</ul>\n</blockquote>\n<h3 id=\"relatedQuery（关联查询）\"><a href=\"#relatedQuery（关联查询）\" class=\"headerlink\" title=\"relatedQuery（关联查询）\"></a>relatedQuery（关联查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43860260/article/details/96592108\">mysql关联查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/MinggeQingchun/article/details/122302972\">mysql关联查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/Carrie_Q/article/details/105930278\">mysql关联查询图解</a></li>\n<li><a href=\"https://blog.csdn.net/Tom_boy_/article/details/120752752\">mysql关联查询之join多个表</a></li>\n<li><a href=\"https://blog.csdn.net/zhaoyf7746/article/details/78044013\">mysql关联查询之join之on和where的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/tayngh/article/details/99684035\">mysql关联查询之join之on和where的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/gtuu0123/article/details/5525704\">mysql关联查询之join之on和where的性能差异</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39746794/article/details/110587843\">mysql关联查询之join优化其他查询</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36551991/article/details/111145516\">mysql关联查询之临时表</a></li>\n<li><a href=\"https://blog.csdn.net/canot/article/details/104920558\">mysql关联查询之临时表</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16268979/article/details/112646329\">mysql关联查询之临时表</a></li>\n<li><a href=\"https://blog.csdn.net/m0_69804655/article/details/130064783\">mysql之为什么不推荐关联查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36910634/article/details/106192100\">mysql之为什么不推荐关联查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"subQuery（子查询）\"><a href=\"#subQuery（子查询）\" class=\"headerlink\" title=\"subQuery（子查询）\"></a>subQuery（子查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jesseyoung/article/details/40108781\">mysql子查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41453285/article/details/89376355\">mysql子查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/shiyong1949/article/details/80923083\">mysql子查询之相关子查询与非相关子查询</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43054397/article/details/91324271\">mysql子查询之in详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzehai2234/article/details/124652056\">mysql子查询之exists详解</a></li>\n<li><a href=\"https://blog.csdn.net/jinjiniao1/article/details/92666614\">mysql子查询之in和exists对比</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzhouisme/article/details/106688348\">mysql子查询空值</a></li>\n<li><a href=\"https://blog.csdn.net/cainiao1412/article/details/123887091\">mysql子查询优化</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31176869/article/details/112704237\">mysql子查询之小表驱动大表入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45097458/article/details/102983187\">mysql子查询之小表驱动大表进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ABestRookie/article/details/117059948\">mysql子查询之小表驱动大表详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>子查询按类型分类<ul>\n<li>相关子查询 子查询依赖父查询</li>\n<li>非相关子查询 子查询不依赖父查询</li>\n</ul>\n</li>\n<li>子查询按返回分类<ul>\n<li>表子查询 返回多行多列，即返回一张表，用于父查询的FROM子句中</li>\n<li>行子查询 返回一行多列，即返回一条记录，用于父查询的FROM子句和WHERE子句中</li>\n<li>列子查询 返回多行一列，即返回一个集合，用于父查询的IN子句中</li>\n<li>标量子查询 返回一行一列，即返回一个值，用于父查询的任何地方</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"DCL（Data-Control-Language）\"><a href=\"#DCL（Data-Control-Language）\" class=\"headerlink\" title=\"DCL（Data Control Language）\"></a>DCL（Data Control Language）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014268482/article/details/105182513\">mysql的DCL入门</a></li>\n<li><a href=\"https://blog.csdn.net/Alian_1223/article/details/123153573\">mysql的DCL进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35382207/article/details/111172128\">mysql的DCL详解</a></li>\n<li><a href=\"https://blog.csdn.net/shenhonglei1234/article/details/90603351\">mysql身份认证插件入门</a></li>\n<li><a href=\"https://blog.csdn.net/leo3070/article/details/117440146\">mysql身份认证插件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/SunZLong/article/details/103926902\">mysql身份认证插件详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zeng_ll/article/details/87706409\">mysql函数入门</a></li>\n<li><a href=\"https://blog.csdn.net/sundna/article/details/89926586\">mysql函数进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yubin1285570923/article/details/118560285\">mysql函数详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43705953/article/details/108691313\">mysql日期函数入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45139489/article/details/99714442\">mysql日期函数进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hu1010037197/article/details/115391335\">mysql日期函数详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41453285/article/details/88054383\">mysql函数之password</a></li>\n<li><a href=\"https://blog.csdn.net/u011341352/article/details/89489613\">mysql函数之crc32</a></li>\n<li><a href=\"https://blog.csdn.net/ztnhnr/article/details/108121771\">mysql函数之md5</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42315824/article/details/113122301\">mysql函数之sha1</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31564573/article/details/112853663\">mysql函数之uuid</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Variable\"><a href=\"#Variable\" class=\"headerlink\" title=\"Variable\"></a>Variable</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43472877/article/details/105227389\">mysql变量入门</a></li>\n<li><a href=\"https://blog.csdn.net/J080624/article/details/73828012\">mysql变量进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40459977/article/details/123038711\">mysql变量详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43919400/article/details/108019808\">mysql系统变量</a></li>\n<li><a href=\"https://blog.csdn.net/demored/article/details/122962605\">mysql会话变量（session）和全局变量（global）</a></li>\n<li><a href=\"https://blog.csdn.net/lvoelife/article/details/108618583\">mysql自定义变量入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45492007/article/details/100709133\">mysql自定义变量进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Treasure99/article/details/96993862\">mysql自定义变量详解</a></li>\n<li><a href=\"https://blog.csdn.net/adhero/article/details/99673337\">mysql变量之子查询</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42534026/article/details/106141765\">mysql索引入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013068184/article/details/107298993\">mysql索引进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wangfeijiu/article/details/113409719\">mysql索引详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44129924/article/details/115333658\">mysql索引精进</a></li>\n<li><a href=\"https://blog.csdn.net/u010087338/article/details/126572672\">mysql索引查看</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123270301\">mysql索引存储原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40205337/article/details/110425863\">mysql索引查找原理</a></li>\n<li><a href=\"https://blog.csdn.net/w17601377492/article/details/104957215\">mysql索引覆盖和回表查询</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40099908/article/details/114484195\">mysql索引下推和引擎过滤</a></li>\n<li><a href=\"https://blog.csdn.net/molashaonian/article/details/107735359\">mysql索引合并和多个索引</a></li>\n<li><a href=\"https://blog.csdn.net/g6U8W7p06dCO99fQ3/article/details/104980634\">mysql索引是全部在内存里面吗</a></li>\n<li><a href=\"https://blog.csdn.net/u013219624/article/details/89024895\">mysql索引之查询时指定索引</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Key\"><a href=\"#Key\" class=\"headerlink\" title=\"Key\"></a>Key</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/top_code/article/details/50599840\">KEY与INDEX的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/lili40342/article/details/107160778\">KEY与INDEX的区别详解</a></li>\n<li><a href=\"https://yetao.blog.csdn.net/article/details/127374739\">mysql索引之主键还需要添加索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/sd4015700/article/details/21180881\">mysql索引之外键会自动添加索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_48419914/article/details/122152325\">mysql索引之外键为什么要添加索引</a></li>\n<li><a href=\"https://blog.csdn.net/llzd626/article/details/120073597\">mysql索引之唯一键约束会自动添加索引吗</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013635487/article/details/122469255\">mysql索引分类详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014453898/article/details/113439560\">mysql索引之聚集索引非聚集索引</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/111994896\">mysql索引之单列索引和组合索引</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43841693/article/details/107301253\">mysql索引之hash索引和B树索引</a></li>\n<li><a href=\"https://blog.csdn.net/justlpf/article/details/79681341\">mysql索引之数值索引和字符串索引</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37968613/article/details/114652178\">mysql索引访问方式入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45065975/article/details/107906523\">mysql索引访问方式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44027397/article/details/114298593\">mysql索引访问方式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Principle\"><a href=\"#Principle\" class=\"headerlink\" title=\"Principle\"></a>Principle</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33934427/article/details/105073406\">mysql索引原则入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46245201/article/details/123316868\">mysql索引原则详解</a></li>\n<li><a href=\"https://blog.csdn.net/c1776167012/article/details/120748363\">mysql索引之基数入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46405589/article/details/113057681\">mysql索引之基数详解</a></li>\n<li><a href=\"https://blog.csdn.net/Leon_Jinhai_Sun/article/details/113954571\">mysql索引之散列性入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43935927/article/details/109491334\">mysql索引之散列性详解</a></li>\n<li><a href=\"https://blog.csdn.net/Sunmeok/article/details/82965805\">mysql索引之重复数据多的列不适合建索引</a></li>\n<li><a href=\"https://blog.csdn.net/wodeguozili/article/details/104184064\">mysql索引之有序性入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39316839/article/details/82690271\">mysql索引之有序性详解</a></li>\n<li><a href=\"https://blog.csdn.net/kuaileshifu/article/details/49558599\">mysql索引之索引排序和文件排序</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Optimize\"><a href=\"#Optimize\" class=\"headerlink\" title=\"Optimize\"></a>Optimize</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangweiwei2020/article/details/80005590\">mysql索引之or优化</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Invalid\"><a href=\"#Invalid\" class=\"headerlink\" title=\"Invalid\"></a>Invalid</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_63815371/article/details/124337932\">mysql索引失效入门</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/121239921\">mysql索引失效进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123255722\">mysql索引失效详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>查询时条件有问题导致失效<ul>\n<li>like最前面有的百分号</li>\n<li>or前后的字段没有索引</li>\n<li>not无法转换为范围查询</li>\n</ul>\n</li>\n<li>查询时使用了函数导致失效</li>\n<li>查询时进行了计算导致失效</li>\n<li>查询时触发了隐式转换导致失效</li>\n<li>组合索引时没遵循最左前缀原则导致失效</li>\n<li>组合索引时左边使用了范围查询导致右边的索引失效</li>\n<li>排序时排序字段和查询字段不一致导致无法使用索引排序</li>\n<li>优化器认为全表扫描比较快导致失效（数据少或者需要回表）</li>\n</ul>\n<h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/nizhongli37/article/details/117607722\">mysql索引之常规查询where条件顺序会影响索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/sz85850597/article/details/100124914\">mysql索引之常规查询is null能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38192427/article/details/122641828\">mysql索引之常规查询like能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/xue_mind/article/details/122573493\">mysql索引之常规查询or能使用索引吗入门</a></li>\n<li><a href=\"https://blog.csdn.net/wenniuwuren/article/details/89472136\">mysql索引之常规查询or能使用索引吗进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wjxbj/article/details/84812361\">mysql索引之常规查询or能使用索引吗详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33312725/article/details/129348629\">mysql索引之范围查询not equals能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/xiao_qing_ge/article/details/103702113\">mysql索引之范围查询大小比较能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/yuruixin_china/article/details/105145049\">mysql索引之范围查询between能使用索引吗</a></li>\n<li><a href=\"\">mysql索引之范围查询not between能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/LJFPHP/article/details/89156326\">mysql索引之范围查询in能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/Wu_Shang001/article/details/107607627\">mysql索引之范围查询not in能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/Jiangbohao_/article/details/120075859\">mysql索引之orderBy能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/qq_14869093/article/details/85694897\">mysql索引之orderBy如何使用索引</a></li>\n<li><a href=\"https://blog.csdn.net/lan12334321234/article/details/70048830\">mysql索引之orderBy为何不走索引</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42768234/article/details/117019465\">mysql索引之orderBy desc能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/h2604396739/article/details/80535546\">mysql索引之orderBy limit能使用索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/sywangnaiqing/article/details/116064924\">mysql索引之状态列可不可以加索引</a></li>\n<li><a href=\"https://blog.csdn.net/hello_sgw/article/details/78601762\">mysql之时间字段适合建立索引吗</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN_LGY_Java/article/details/111594640\">mysql之时间字段如何使用索引</a></li>\n<li><a href=\"https://blog.csdn.net/CSDNcircular/article/details/107253747\">mysql之时间字段为何不走索引</a></li>\n<li><a href=\"https://blog.csdn.net/shanwu1/article/details/122695384\">mysql之join操作会使用索引吗</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jcmj123456/article/details/115393666\">索引长度超出问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/jian876601394/article/details/94313071\">索引长度超出问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiaozhegaa/article/details/105550594\">索引长度超出问题详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h1><h2 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wang_luwei/article/details/119619105\">mysql事务详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_47902348/article/details/109090735\">mysql事务原理</a></li>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/109624425\">mysql事务之配置修改生效范围</a></li>\n</ul>\n</blockquote>\n<p>mysql事务配置修改生效范围</p>\n<ul>\n<li>session</li>\n<li>global</li>\n</ul>\n<h3 id=\"ACID\"><a href=\"#ACID\" class=\"headerlink\" title=\"ACID\"></a>ACID</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39390545/article/details/116452271\">mysql事务之基本特性详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>原子性（atomicity）：事务里的所有操作要么全部生效，要么全部不生效</li>\n<li>一致性（consistency）：事务的操作不会影响数据的正确性</li>\n<li>隔离性（isolation）：不同事务之间的操作是相互隔离的</li>\n<li>持久性（durability）：事务对数据的更改会永久的保存到磁盘</li>\n</ul>\n<blockquote>\n<p>ps： <code>ACID</code> 中 <code>C</code> 是 <code>目的</code> ， <code>AID</code> 是 <code>措施</code></p>\n</blockquote>\n<blockquote>\n<p>ps： <code>原子性</code> 保障的是 <code>复合操作</code> ， <code>隔离性</code> 保障的是 <code>并发操作</code></p>\n</blockquote>\n<blockquote>\n<p>ps： <code>undo日志</code> 保证 <code>原子性</code> ， <code>redo日志</code> 保证 <code>持久性</code> ， <code>mvcc和lock机制</code> 保证 <code>隔离性</code></p>\n</blockquote>\n<h4 id=\"Atomicity\"><a href=\"#Atomicity\" class=\"headerlink\" title=\"Atomicity\"></a>Atomicity</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pmdream/article/details/120052347\">mysql是如何保证原子性的</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Consistency\"><a href=\"#Consistency\" class=\"headerlink\" title=\"Consistency\"></a>Consistency</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/max1231ff/article/details/103838150\">mysql是如何保证一致性的</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/130966907\">mysql如何和其他存储系统保持一致性</a></li>\n<li><a href=\"https://blog.csdn.net/c0d5r/article/details/110680789\">如何理解事务中的一致性入门</a></li>\n<li><a href=\"https://blog.csdn.net/beyond_1990/article/details/111942564\">如何理解事务中的一致性进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Mr_YuanD/article/details/112400384\">如何理解事务中的一致性详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Isolation\"><a href=\"#Isolation\" class=\"headerlink\" title=\"Isolation\"></a>Isolation</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kking_edc/article/details/110848986\">mysql是如何保证隔离性的</a></li>\n<li><a href=\"https://blog.csdn.net/saygood999/article/details/119416311\">mysql事务隔离级别入门</a></li>\n<li><a href=\"https://blog.csdn.net/Tah_001/article/details/107494269\">mysql事务隔离级别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/AI_STUDENT_QYB/article/details/121113991\">mysql事务隔离级别详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42144277/article/details/106916092\">mysql事务隔离级别RC和RR选择比较</a></li>\n<li><a href=\"https://blog.csdn.net/NoviceZ/article/details/124627347\">mysql事务隔离级别为什么选择RC</a></li>\n<li><a href=\"https://docs.djangoproject.com/zh-hans/4.2/ref/databases/#mysql-isolation-level\">django事务隔离级别为什么选择RC</a></li>\n<li><a href=\"https://docs.djangoproject.com/zh-hans/4.2/topics/db/\">django数据库使用详解</a></li>\n<li><a href=\"https://docs.djangoproject.com/zh-hans/4.2/topics/db/transactions/\">django数据库事务详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>读未提交（RU -&gt; Read Uncommitted）：问题为脏读（一个事务读到另一个事务未提交的更新数据）</li>\n<li>读已提交（RC -&gt; Read Committed）：问题为不可重复读（同一条记录前后发生了变化）</li>\n<li>可重复读（RR -&gt; Repeatable Read）：问题为幻读（记录数量前后发生了变化或者部分记录删除了）</li>\n<li>串行化（Serializable）：没有问题，但性能差</li>\n</ul>\n<h5 id=\"Dirty-Read（脏读）\"><a href=\"#Dirty-Read（脏读）\" class=\"headerlink\" title=\"Dirty Read（脏读）\"></a>Dirty Read（脏读）</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33591903/article/details/81672260\">脏读入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42477252/article/details/109593757\">脏读进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45683963/article/details/115438988\">脏读详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"脏读的场景\"><a href=\"#脏读的场景\" class=\"headerlink\" title=\"脏读的场景\"></a>脏读的场景</h6><ul>\n<li>读取到了其他事务还未提交的变更</li>\n</ul>\n<h6 id=\"脏读的问题\"><a href=\"#脏读的问题\" class=\"headerlink\" title=\"脏读的问题\"></a>脏读的问题</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sun8112133/article/details/89670009\">脏读有什么问题</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>读取到了脏数据（读到的数据在其他事务回滚后数据就不存在了）</li>\n</ul>\n<h5 id=\"Unrepeatable-Read（不可重复读）\"><a href=\"#Unrepeatable-Read（不可重复读）\" class=\"headerlink\" title=\"Unrepeatable Read（不可重复读）\"></a>Unrepeatable Read（不可重复读）</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jupiter_888/article/details/103852748\">不可重复读入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35971301/article/details/100597446\">不可重复读进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43553153/article/details/120169820\">不可重复读详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"不可重复读的场景\"><a href=\"#不可重复读的场景\" class=\"headerlink\" title=\"不可重复读的场景\"></a>不可重复读的场景</h6><ul>\n<li>重复读取同一条记录时内容发生了变化</li>\n</ul>\n<h6 id=\"不可重复读的问题\"><a href=\"#不可重复读的问题\" class=\"headerlink\" title=\"不可重复读的问题\"></a>不可重复读的问题</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sun8112133/article/details/89739475\">不可重复读有什么问题</a></li>\n<li><a href=\"https://www.zhihu.com/question/306532321\">不可重复读有什么危害</a></li>\n<li><a href=\"https://www.zhihu.com/question/378977805\">为什么要实现可重复读</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>看具体业务场景的要求</li>\n</ul>\n<h5 id=\"Phantom-Read（幻读）\"><a href=\"#Phantom-Read（幻读）\" class=\"headerlink\" title=\"Phantom Read（幻读）\"></a>Phantom Read（幻读）</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43207025/article/details/115412974\">mysql幻读入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31930499/article/details/110393988\">mysql幻读进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43477531/article/details/121963884\">mysql幻读详解</a></li>\n</ul>\n</blockquote>\n<h6 id=\"幻读的场景\"><a href=\"#幻读的场景\" class=\"headerlink\" title=\"幻读的场景\"></a>幻读的场景</h6><ul>\n<li>前后查询时记录数量发生了变化</li>\n<li>刚才存在的记录现在不存在了（检测到存在后去查询、更新、删除却提示不存在了）</li>\n<li>刚才不存在的记录现在存在了（检测到不存在后去插入时却提示存在了）</li>\n</ul>\n<h6 id=\"幻读的问题\"><a href=\"#幻读的问题\" class=\"headerlink\" title=\"幻读的问题\"></a>幻读的问题</h6><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sun8112133/article/details/89839573\">幻读有什么问题</a></li>\n<li><a href=\"https://blog.csdn.net/zgaoq/article/details/122145949\">幻读有什么危害</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>检查后插入冲突</li>\n</ul>\n<h4 id=\"Durability\"><a href=\"#Durability\" class=\"headerlink\" title=\"Durability\"></a>Durability</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_25448409/article/details/105376450\">mysql是如何保证持久性的</a></li>\n</ul>\n</blockquote>\n<h3 id=\"MVCC\"><a href=\"#MVCC\" class=\"headerlink\" title=\"MVCC\"></a>MVCC</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/huaishu/article/details/89924250\">MVCC入门</a></li>\n<li><a href=\"https://blog.csdn.net/DILIGENT203/article/details/100751755\">MVCC进阶</a></li>\n<li><a href=\"https://blog.csdn.net/SnailMann/article/details/94724197\">MVCC详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46146718/article/details/121404423\">MVCC和隔离级别的关系</a></li>\n<li><a href=\"https://blog.csdn.net/WuLex/article/details/129481504\">MVCC实现原理之版本控制</a></li>\n<li><a href=\"https://blog.csdn.net/zhangh571354026/article/details/124501658\">MVCC实现原理之隐式字段</a></li>\n<li><a href=\"https://blog.csdn.net/m0_62436868/article/details/127202062\">MVCC实现原理之ReadView</a></li>\n<li><a href=\"https://blog.csdn.net/lzb348110175/article/details/106788351\">MVCC实现原理之UndoLog</a></li>\n<li><a href=\"https://blog.csdn.net/CoderTnT/article/details/105557264\">MVCC实现原理之版本链</a></li>\n<li><a href=\"https://blog.csdn.net/m0_48333563/article/details/107348767\">MVCC实现原理之删除标记</a></li>\n<li><a href=\"https://blog.csdn.net/MarkusZhang/article/details/107335259\">MVCC实现原理之快照读和当前读入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44844089/article/details/115532014\">MVCC实现原理之快照读和当前读详解</a></li>\n<li><a href=\"https://blog.csdn.net/Mountainest/article/details/115922544\">MVCC实现原理之MVCC和锁的关系</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN_WYL2016/article/details/119793289\">MVCC实现原理之MVCC和写时复制</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_36380516/article/details/115291399\">MVCC之可重复读是怎么实现的入门</a></li>\n<li><a href=\"https://blog.csdn.net/mengsk2911/article/details/109227589\">MVCC之可重复读是怎么实现的进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hnhygkx/article/details/118025809\">MVCC之可重复读是怎么实现的详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42512836/article/details/113388876\">MVCC之不能完全解决幻读的问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/godloveleo9527/article/details/109554263\">MVCC之不能完全解决幻读的问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/liyunlong819/article/details/126556223\">MVCC之不能完全解决幻读的问题详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>MVCC和隔离级别：隔离级别为<code>读已提交</code>和<code>可重复读</code>时会启用MVCC机制</li>\n<li>MVCC和锁的关系：写加锁，读不加锁</li>\n<li>MVCC和读写的关系：写写冲突，读写不冲突（通过写时复制机制实现），读读不冲突</li>\n</ul>\n<blockquote>\n<p>ps：MVCC可以解决 <code>不可重复读</code> 的问题<br>ps：MVCC只能解决 <code>记录数量变化</code> 导致的 <code>幻读</code> 问题， <code>新增和删除记录</code> 导致的 <code>幻读</code> 问题是通过 <code>Next-key锁</code> 解决的<br>ps：MVCC只能解决 <code>快照读</code> 的 <code>幻读</code> 问题， <code>当前读</code> 的 <code>幻读</code> 问题是通过 <code>Next-key锁</code> 解决的</p>\n</blockquote>\n<ul>\n<li>快照读： <code>select</code></li>\n<li>当前读： <code>select for update</code></li>\n</ul>\n<h3 id=\"Lock\"><a href=\"#Lock\" class=\"headerlink\" title=\"Lock\"></a>Lock</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010841296/article/details/84204701\">mysql的锁简介</a></li>\n<li><a href=\"https://blog.csdn.net/vicoqi/article/details/115288261\">mysql的锁入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39559071/article/details/110863015\">mysql的锁进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123293597\">mysql的锁详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38287269/article/details/102824620\">mysql的锁精进</a></li>\n<li><a href=\"https://blog.csdn.net/chenghan_yang/article/details/129228113\">mysql的意向锁</a></li>\n<li><a href=\"https://blog.csdn.net/yan88888888888888888/article/details/103695063\">mysql的隐式和显式锁</a></li>\n<li><a href=\"https://blog.csdn.net/lixld/article/details/104542570\">mysql的悲观锁和乐观锁</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34486648/article/details/129008639\">mysql的悲观锁</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzijiejiayou/article/details/107231147\">mysql的乐观锁</a></li>\n<li><a href=\"https://blog.csdn.net/kang389110772/article/details/115667363\">mysql之事务和锁的关系入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/122112773\">mysql之事务和锁的关系详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"锁的分类\"><a href=\"#锁的分类\" class=\"headerlink\" title=\"锁的分类\"></a>锁的分类</h4><h5 id=\"锁的类型分类\"><a href=\"#锁的类型分类\" class=\"headerlink\" title=\"锁的类型分类\"></a>锁的类型分类</h5><ul>\n<li>是否锁住资源：悲观锁（锁住资源）、乐观锁（不锁住资源）</li>\n<li>是否独占资源：排他锁（独占资源）、共享锁（共享资源）、读写锁（读共享和写独占）</li>\n</ul>\n<h5 id=\"锁的实现分类\"><a href=\"#锁的实现分类\" class=\"headerlink\" title=\"锁的实现分类\"></a>锁的实现分类</h5><ul>\n<li>悲观锁：<code>select for update</code>、<code>insert</code>、<code>delete</code>、<code>update</code></li>\n<li>乐观锁：<code>版本字段</code>、<code>时间戳字段</code></li>\n</ul>\n<h5 id=\"锁的范围分类\"><a href=\"#锁的范围分类\" class=\"headerlink\" title=\"锁的范围分类\"></a>锁的范围分类</h5><ul>\n<li>表锁：table锁（表格锁）</li>\n<li>行锁：record锁（记录锁）</li>\n<li>范围锁：gap锁（间隙锁）</li>\n</ul>\n<blockquote>\n<p>ps：Next-key锁是record锁和gap锁的组合</p>\n</blockquote>\n<h4 id=\"锁的问题\"><a href=\"#锁的问题\" class=\"headerlink\" title=\"锁的问题\"></a>锁的问题</h4><h5 id=\"DeadLock（死锁）\"><a href=\"#DeadLock（死锁）\" class=\"headerlink\" title=\"DeadLock（死锁）\"></a>DeadLock（死锁）</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lycyingO/article/details/107754470\">mysql之select死锁</a></li>\n<li><a href=\"https://blog.csdn.net/varyall/article/details/80219459\">mysql之insert死锁</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Question-1\"><a href=\"#Question-1\" class=\"headerlink\" title=\"Question\"></a>Question</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lpp_dd/article/details/83183816\">mysql事务之同一个事物先插入或者删除后再查询</a></li>\n<li><a href=\"https://blog.csdn.net/shy_1762538422/article/details/111949987\">mysql事务之同一个事物先更新后再查询</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34980601/article/details/114680258\">mysql事务之某个事务能读到其他事务修改后的数据吗</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Problem-1\"><a href=\"#Problem-1\" class=\"headerlink\" title=\"Problem\"></a>Problem</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_55890191/article/details/123640259\">mysql事务之并发事务中删除数据为什么还能查到</a></li>\n<li><a href=\"https://blog.csdn.net/BigBull111/article/details/115506713\">mysql事务之读写分离中更新后数据为什么读不到</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Problem-2\"><a href=\"#Problem-2\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><h2 id=\"并发操作\"><a href=\"#并发操作\" class=\"headerlink\" title=\"并发操作\"></a>并发操作</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_71777195/article/details/126968432\">mysql并发操作之幻读问题</a></li>\n<li><a href=\"https://blog.csdn.net/yueguangmuyu/article/details/118929189\">mysql并发操作之死锁问题</a></li>\n<li><a href=\"https://blog.csdn.net/java_zhangshuai/article/details/83273520\">mysql并发操作之插入冲突</a></li>\n<li><a href=\"https://blog.csdn.net/sun8112133/article/details/89853755\">mysql并发操作之更新丢失</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41775852/article/details/111916026\">mysql并发操作之写入偏差</a></li>\n</ul>\n</blockquote>\n<h2 id=\"读写分离\"><a href=\"#读写分离\" class=\"headerlink\" title=\"读写分离\"></a>读写分离</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/keets1992/article/details/114826672\">mysql读写分离之读不到刚插入的数据问题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"数据丢失\"><a href=\"#数据丢失\" class=\"headerlink\" title=\"数据丢失\"></a>数据丢失</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42515014/article/details/113167667\">mysql数据存储之数据丢失详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_33946174/article/details/113320549\">mysql查询优化入门</a></li>\n<li><a href=\"https://blog.csdn.net/liuerchong/article/details/123746558\">mysql性能优化进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37723088/article/details/129160111\">mysql性能优化详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41942838/article/details/111244411\">mysql性能优化入门</a></li>\n<li><a href=\"https://blog.csdn.net/mifffy_java/article/details/106404202\">mysql性能优化进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zxp2624161989/article/details/106019863\">mysql性能优化详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis\"></a>Analysis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123253246\">mysql之explain入门</a></li>\n<li><a href=\"https://blog.csdn.net/Park33/article/details/130015540\">mysql之explain详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Diagnosis\"><a href=\"#Diagnosis\" class=\"headerlink\" title=\"Diagnosis\"></a>Diagnosis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/vnjohn/article/details/128813814\">mysql之诊断详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><p>HA（High Availability）：高可用</p>\n<h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Ailubby/article/details/107012488\">mysql复制入门</a></li>\n<li><a href=\"https://blog.csdn.net/liupeifeng3514/article/details/78998248\">mysql复制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35165000/article/details/115036692\">mysql半同步详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><h3 id=\"主从架构\"><a href=\"#主从架构\" class=\"headerlink\" title=\"主从架构\"></a>主从架构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44273583/article/details/104952947\">mysql主从搭建入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36807862/article/details/81289130\">mysql主从搭建进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45076180/article/details/112163744\">mysql主从搭建详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"主主架构\"><a href=\"#主主架构\" class=\"headerlink\" title=\"主主架构\"></a>主主架构</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39445556/article/details/84302962\">mysql主主搭建入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33326449/article/details/110223092\">mysql主主搭建详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhengkun51/article/details/114267362\">虚拟IP（VIP）实现原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"读写分离-1\"><a href=\"#读写分离-1\" class=\"headerlink\" title=\"读写分离\"></a>读写分离</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013309797/article/details/119254805\">Mybatis读写分离入门</a></li>\n<li><a href=\"https://blog.csdn.net/belvine/article/details/86219907\">Mybatis读写分离详解</a></li>\n<li><a href=\"https://blog.csdn.net/Ayhan_huang/article/details/78784486\">Django读写分离详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"分库分表（Sharding）\"><a href=\"#分库分表（Sharding）\" class=\"headerlink\" title=\"分库分表（Sharding）\"></a>分库分表（Sharding）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/g6U8W7p06dCO99fQ3/article/details/128179735\">数据库分库和分表简介</a></li>\n<li><a href=\"https://blog.csdn.net/azhuyangjun/article/details/86976514\">数据库分库和分表入门</a></li>\n<li><a href=\"https://blog.csdn.net/FMC_WBL/article/details/128748726\">数据库分库和分表进阶</a></li>\n<li><a href=\"https://blog.csdn.net/agonie201218/article/details/110823552\">数据库分库和分表详解</a></li>\n<li><a href=\"https://blog.csdn.net/xiaowanzi_zj/article/details/122270389\">数据库分库和分表精进</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41668084/article/details/113356941\">数据库分库和分表后问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/xiaowanzi_zj/article/details/122270389\">数据库分库和分表后问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/jianzhang11/article/details/128141089\">数据库分库和分表后非Sharding Key查询的三种方案</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42874635/article/details/127102146\">数据库分库和分表条件（2000w）简介</a></li>\n<li><a href=\"https://blog.csdn.net/Edwin_Hu/article/details/124897224\">数据库分库和分表条件（2000w）入门</a></li>\n<li><a href=\"https://blog.csdn.net/kwinH/article/details/114583497\">数据库分库和分表条件（2000w）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_74931226/article/details/128328857\">数据库分库和分表条件（2000w）详解</a></li>\n<li><a href=\"https://blog.csdn.net/flynetcn/article/details/126494361\">数据库分库和分表条件（2000w）精进</a></li>\n<li><a href=\"https://blog.csdn.net/ABestRookie/article/details/124160714\">数据库分库和分表策略之基因算法入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_52346300/article/details/113104964\">数据库分库和分表策略之基因算法详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"数据分区（Partition）\"><a href=\"#数据分区（Partition）\" class=\"headerlink\" title=\"数据分区（Partition）\"></a>数据分区（Partition）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/NewxCJY/article/details/92772086\">数据库分区入门</a></li>\n<li><a href=\"https://blog.csdn.net/abc_hom/article/details/122088852\">数据库分区进阶</a></li>\n<li><a href=\"https://blog.csdn.net/rakunjo/article/details/123470926\">数据库分区详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40809549/article/details/91794891\">数据库分区（Partition）和分片（Sharding）的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/hejingyuan6/article/details/52672870\">数据库分区（Partition）和分片（Sharding）的区别详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dl962454/article/details/115800802\">mysql为什么用B+树而不是红黑树详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29373285/article/details/88610662\">mysql之B+树和红黑树对比</a></li>\n<li><a href=\"https://blog.csdn.net/a519640026/article/details/106940115\">mysql之B树和B+树对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/angellee1988/article/details/123121036\">mysql可视化客户端推荐1</a></li>\n<li><a href=\"https://blog.csdn.net/gu1857035894/article/details/120867722\">mysql可视化客户端推荐2</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tjiyu/article/details/106057996\">mysql监控指标</a></li>\n<li><a href=\"https://blog.csdn.net/orzMrXu/article/details/114871945\">mysql监控详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jianhong1990/article/details/7702782\">mysql自带工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45636702/article/details/107288191\">mysql自带工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30780221/article/details/97171304\">mysql_install_db详解</a></li>\n<li><a href=\"https://blog.csdn.net/lihuarongaini/article/details/100119827\">mysqld_multi详解</a></li>\n<li><a href=\"https://blog.csdn.net/JustinQin/article/details/120114603\">mysqld_safe详解</a></li>\n<li><a href=\"https://blog.csdn.net/helloxiaozhe/article/details/77680255\">mysqldump详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010257584/article/details/106995361\">mysqlimport详解</a></li>\n<li><a href=\"https://blog.csdn.net/liaowenxiong/article/details/115869357\">mysqlshow详解</a></li>\n<li><a href=\"https://blog.csdn.net/zztfj/article/details/6181379\">show命令入门</a></li>\n<li><a href=\"https://blog.csdn.net/oradbm/article/details/100978448\">show命令进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u014163312/article/details/116081446\">show命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Permission\"><a href=\"#Permission\" class=\"headerlink\" title=\"Permission\"></a>Permission</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42799615/article/details/116931148\">mysql之权限管理入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44338712/article/details/109562136\">mysql之权限管理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/S_zhangmin/article/details/122893421\">mysql之权限管理详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Audit\"><a href=\"#Audit\" class=\"headerlink\" title=\"Audit\"></a>Audit</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34777982/article/details/120890994\">mysql之审计日志入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43279032/article/details/105507170\">mysql之审计日志进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shallow72/article/details/129272023\">mysql之审计日志详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"mongodb","url":"/2017/09/01/tech/development/junior/dev-2-mongodb/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38980678/article/details/114703852\">mongodb和mysql对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/cxy_0330/article/details/124219352\">mongodb和mysql选择详解</a></li>\n<li><a href=\"https://blog.csdn.net/guorui_java/article/details/128351128\">mongodb4.0支持事务了，还有多少人想用MySQL呢</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123657641\">mongodb入门</a></li>\n<li><a href=\"https://blog.csdn.net/PILIpilipala/article/details/113818320\">mongodb进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_43405302/article/details/123087256\">mongodb详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45173404/article/details/114260970\">mongodb精进</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_29091823/article/details/75050950\">mongodb操作符</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DDL（Data-Definition-Language）\"><a href=\"#DDL（Data-Definition-Language）\" class=\"headerlink\" title=\"DDL（Data Definition Language）\"></a>DDL（Data Definition Language）</h2><h3 id=\"type\"><a href=\"#type\" class=\"headerlink\" title=\"type\"></a>type</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013278099/article/details/88829986\">mongodb数据类型入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42022528/article/details/102794410\">mongodb数据类型详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"ip\"><a href=\"#ip\" class=\"headerlink\" title=\"ip\"></a>ip</h4><p>可以参考mysql篇</p>\n<h4 id=\"url\"><a href=\"#url\" class=\"headerlink\" title=\"url\"></a>url</h4><p>可以参考mysql篇</p>\n<h4 id=\"geo\"><a href=\"#geo\" class=\"headerlink\" title=\"geo\"></a>geo</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wang7807564/article/details/78863591\">mongodb类型之geo入门</a></li>\n<li><a href=\"https://blog.csdn.net/qnloft/article/details/86669683\">mongodb类型之geo进阶</a></li>\n<li><a href=\"https://blog.csdn.net/FrankWong1989/article/details/108178638\">mongodb类型之geo详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"id\"><a href=\"#id\" class=\"headerlink\" title=\"id\"></a>id</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/after_you/article/details/66971680\">mongodb之id入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41987908/article/details/105269838\">mongodb之id详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DML（Data-Manipulation-Language）\"><a href=\"#DML（Data-Manipulation-Language）\" class=\"headerlink\" title=\"DML（Data Manipulation Language）\"></a>DML（Data Manipulation Language）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liboshi123/article/details/125839950\">mongodb之各种insert的区别</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37886783/article/details/105708641\">mongodb之各种update的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39856265/article/details/111747083\">mongodb之各种delete的区别</a></li>\n<li><a href=\"https://blog.csdn.net/newbie_907486852/article/details/82597257\">mongodb字段操作</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38932035/article/details/105126118\">mongodb批量操作</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>insert：插入<ul>\n<li>insertOrReject：不存在就插入，存在时就拒绝</li>\n<li>insertOrIgnore：不存在就插入，存在时就忽略</li>\n<li>insertOrUpdate：不存在就插入，存在时就更新</li>\n<li>insertOrReplace：不存在就插入，存在时就替换</li>\n</ul>\n</li>\n<li>update（modify）：（部分）更新（修改）<ul>\n<li>updateOrReject：存在时就更新，不存在就拒绝（不常见） </li>\n<li>updateOrIgnore：存在时就更新，不存在就忽略</li>\n<li>updateOrInsert：存在时就更新，不存在就插入（等同于insertOrUpdate）</li>\n</ul>\n</li>\n<li>replace（modify）：（整体）替换（修改）<ul>\n<li>replaceOrReject：存在时就替换，不存在就拒绝（不常见）</li>\n<li>replaceOrIgnore：存在时就替换，不存在就忽略</li>\n<li>replaceOrInsert：存在时就替换，不存在就插入（等同于insertOrReplace）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：修改（change）广义上包含insert（插入）、update（更新）、delete（删除）操作<br>ps：替换（replace）也是一种修改，本质是delete（删除）+ insert（插入）</p>\n</blockquote>\n<h3 id=\"insert\"><a href=\"#insert\" class=\"headerlink\" title=\"insert\"></a>insert</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cold___play/article/details/121391248\">mongodb插入之insertOrReject入门</a></li>\n<li><a href=\"https://blog.csdn.net/cunchi4221/article/details/107471999\">mongodb插入之insertOrReject详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44285988/article/details/99448931\">mongodb插入之insertOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/newCheng/article/details/102943976\">mongodb插入之insertOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/myli_binbin/article/details/109787962\">mongodb更新之insertOrUpdate入门</a></li>\n<li><a href=\"https://blog.csdn.net/horses/article/details/128152224\">mongodb更新之insertOrUpdate详解</a></li>\n<li><a href=\"https://blog.csdn.net/fengpojian/article/details/79997862\">mongodb替换之insertOrReplace入门</a></li>\n<li><a href=\"https://blog.csdn.net/Linzhongyilisha/article/details/88047651\">mongodb替换之insertOrReplace详解</a></li>\n<li><a href=\"https://blog.csdn.net/cunchi4221/article/details/107521264\">mongodb插入之批量insert</a></li>\n</ul>\n</blockquote>\n<p>单个插入、批量插入</p>\n<p>insertOrReject：insert、insertOne、insertMany<br>insertOrIgnore：update with the upsert flag and（$setOnInsert without $set） op<br>insertOrUpdate: update with the upsert flag and（$setOnInsert with $set）op<br>insertOrReplace：replace with the upsert flag || save</p>\n<h3 id=\"update\"><a href=\"#update\" class=\"headerlink\" title=\"update\"></a>update</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chaiyu2002/article/details/79755932\">mongodb更新之updateOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44344236/article/details/118614571\">mongodb更新之updateOrIgnore详解</a></li>\n<li><a href=\"https://blog.csdn.net/toHero/article/details/112549364\">mongodb更新之批量update</a></li>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/78696759\">mongodb更新之嵌套更新</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41888813/article/details/96118703\">mongodb更新之原子更新findAndModify</a></li>\n</ul>\n</blockquote>\n<p>单个更新、批量更新</p>\n<p>updateOrReject：无<br>updateOrIgnore：update、updateOne、updateMany<br>updateOrInsert：等同于insertOrUpdate</p>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><p>单个替换、批量替换</p>\n<p>replaceOrReject：无<br>replaceOrIgnore：replaceOne without the upsert flag<br>replaceOrInsert：等同于insertOrReplace</p>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shannya_zhima/article/details/113998420\">mongodb删除之delete入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_23681041/article/details/116928882\">mongodb删除之delete详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35767346/article/details/108057673\">mongodb删除之批量delete</a></li>\n</ul>\n</blockquote>\n<p>单个删除、批量删除</p>\n<h2 id=\"DQL（Data-Query-Language）\"><a href=\"#DQL（Data-Query-Language）\" class=\"headerlink\" title=\"DQL（Data Query Language）\"></a>DQL（Data Query Language）</h2><p>等值查询、范围查询、模糊查询、聚合查询、组合查询、关联查询、子查询</p>\n<h3 id=\"general（常规查询）\"><a href=\"#general（常规查询）\" class=\"headerlink\" title=\"general（常规查询）\"></a>general（常规查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zp17834994071/article/details/109082015\">mongodb常规查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/DreamsArchitects/article/details/109352830\">mongodb常规查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41853447/article/details/108539155\">mongodb常规查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/ihtml5/article/details/89671084\">mongodb常规查询之exists详解</a></li>\n<li><a href=\"https://blog.csdn.net/xieyiweneven/article/details/103164492\">mongodb常规查询之分页详解</a></li>\n<li><a href=\"https://blog.csdn.net/cunchi4221/article/details/107477847\">mongodb常规查询之排序详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"range（范围查询）\"><a href=\"#range（范围查询）\" class=\"headerlink\" title=\"range（范围查询）\"></a>range（范围查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27378621/article/details/83868981\">mongodb范围查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/skyupward/article/details/105238947\">mongodb范围查询之in详解</a></li>\n</ul>\n</blockquote>\n<p>范围查询：左闭右闭（数据库用的多）、左闭右开（编程语言用的多）、左开右闭、左开右开</p>\n<h3 id=\"fuzzy（模糊查询）\"><a href=\"#fuzzy（模糊查询）\" class=\"headerlink\" title=\"fuzzy（模糊查询）\"></a>fuzzy（模糊查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiangwangxiangwang/article/details/88821513\">mongodb模糊查询详解</a></li>\n</ul>\n</blockquote>\n<p>prefix、contains、wildcard、regexp、fuzzy</p>\n<h3 id=\"aggregation（聚合查询）\"><a href=\"#aggregation（聚合查询）\" class=\"headerlink\" title=\"aggregation（聚合查询）\"></a>aggregation（聚合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44009447/article/details/115479348\">mongodb聚合查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"combinedQuery（组合查询）\"><a href=\"#combinedQuery（组合查询）\" class=\"headerlink\" title=\"combinedQuery（组合查询）\"></a>combinedQuery（组合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/75103480\">mongodb组合查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"relatedQuery（关联查询）\"><a href=\"#relatedQuery（关联查询）\" class=\"headerlink\" title=\"relatedQuery（关联查询）\"></a>relatedQuery（关联查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42428264/article/details/113243940\">mongodb关联查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"subQuery（子查询）\"><a href=\"#subQuery（子查询）\" class=\"headerlink\" title=\"subQuery（子查询）\"></a>subQuery（子查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/raqsoft/article/details/120174282\">mongodb子查询详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Function\"><a href=\"#Function\" class=\"headerlink\" title=\"Function\"></a>Function</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34726429/article/details/103289717\">mongodb函数入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44032502/article/details/114921599\">mongodb函数进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44050144/article/details/112438304\">mongodb函数详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Variable\"><a href=\"#Variable\" class=\"headerlink\" title=\"Variable\"></a>Variable</h2><h2 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cold___play/article/details/121445015\">mongodb索引入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43631716/article/details/120232722\">mongodb索引进阶</a></li>\n<li><a href=\"https://blog.csdn.net/nanhuaibeian/article/details/108199943\">mongodb索引详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuhuayang/article/details/122098386\">mongodb事务入门</a></li>\n<li><a href=\"https://blog.csdn.net/liuhuayang/article/details/122098386\">mongodb事务进阶</a></li>\n<li><a href=\"https://blog.csdn.net/guangyacyb/article/details/104333399\">mongodb事务详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Durability\"><a href=\"#Durability\" class=\"headerlink\" title=\"Durability\"></a>Durability</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ai_xiangjuan/article/details/78452969\">mongodb持久化入门</a></li>\n<li><a href=\"https://blog.csdn.net/rudygao/article/details/49883697\">mongodb持久化详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><h2 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis\"></a>Analysis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/user_longling/article/details/83957085\">mongodb之explain详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Diagnosis\"><a href=\"#Diagnosis\" class=\"headerlink\" title=\"Diagnosis\"></a>Diagnosis</h2><h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3>","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"redis","url":"/2017/09/01/tech/development/junior/dev-3-redis/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/salyty/article/details/83106237\">kv存储系统详解</a></li>\n<li><a href=\"https://blog.csdn.net/S_ZaiJiangHu/article/details/127261008\">Redis全版本之RedisMod</a></li>\n<li><a href=\"https://blog.csdn.net/caijunsen/article/details/116482230\">Ehcache、Memcached、Redis对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/lonelymanontheway/article/details/104534221\">Ehcache、Memcached、Redis对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/cuidiwhere/article/details/102764336\">Redis和Tair对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/chengbinbbs/article/details/98874487\">Redis和Tair对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42319496/article/details/119944511\">Redis和LevelDB对比</a></li>\n<li><a href=\"https://blog.csdn.net/tzdjzs/article/details/20838945\">RocksDB和LevelDB对比</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35423154/article/details/123808990\">LevelDB详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44607611/article/details/113742388\">RocksDB详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w15558056319/article/details/121414742\">redis配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45988641/article/details/118328708\">redis配置详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hellozpc/article/details/81267030\">redis入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38327769/article/details/123984695\">redis进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44981707/article/details/115610686\">redis详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45683550/article/details/122565733\">redis精进</a></li>\n<li><a href=\"https://blog.csdn.net/agonie201218/article/details/123640871\">redis场景</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/123903799\">redis变更</a></li>\n<li><a href=\"https://blog.csdn.net/luna_a/article/details/107292994\">redis命令入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44794280/article/details/123557566\">redis命令详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46460843/article/details/119088112\">redis数据类型入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43246215/article/details/108041739\">redis数据类型详解</a></li>\n<li><a href=\"https://blog.csdn.net/yongbutingxide/article/details/122608661\">redis数据类型原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45901741/article/details/113885961\">redis数据类型结构</a></li>\n<li><a href=\"https://blog.csdn.net/Muscleape/article/details/105910512\">redis数据类型编码</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39809613/article/details/100146081\">redis数据类型之embstr界限</a></li>\n<li><a href=\"https://blog.csdn.net/wuyujin1997/article/details/106267676\">redis之key命名规范</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43944305/article/details/124446227\">redis之hash元素过期方案</a></li>\n<li><a href=\"https://blog.csdn.net/qq_48826531/article/details/125717224\">redis之set元素过期方案</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>String<ul>\n<li>Structure：sds</li>\n<li>Encoding<ul>\n<li>REDIS_ENCODING_INT：当数据是整数时</li>\n<li>REDIS_ENCODING_EMBSTR：当数据是字符串且长度小于44（3.0之前是39）个字节时</li>\n<li>REDIS_ENCODING_RAW：当数据是字符串且长度大于44（3.0之前是39）个字节时</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>List<ul>\n<li>Structure：ziplist、linkedlist、quicklist</li>\n<li>Encoding<ul>\n<li>REDIS_ENCODING_ZIPLIST：redis3.2之前，默认的编码</li>\n<li>REDIS_ENCODING_LINKEDLIST：redis3.2之前，当元素大小大于配置的list-max-ziplist-value（默认64）或元素个数大于配置的list-max-ziplist-entries（默认512）时使用此编码</li>\n<li>REDIS_ENCODING_QUICKLIST：redis3.2之后使用此编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Hash<ul>\n<li>Structure：ziplist、hashtable</li>\n<li>Encoding<ul>\n<li>REDIS_ENCODING_ZIPLIST：默认的编码</li>\n<li>REDIS_ENCODING_HT：当元素大小大于配置的hash-max-ziplist-value（默认64）或元素个数大于配置的hash-max-ziplist-entries（默认512）时使用此编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Set<ul>\n<li>Structure：intset、hashtable</li>\n<li>Encoding<ul>\n<li>REDIS_ENCODING_INTSET：当元素类型是整数时</li>\n<li>REDIS_ENCODING_HT：当元素类型不是整数时或元素个数大于配置的set-max-intset-entries（默认512）时使用此编码</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Zset<ul>\n<li>Structure：</li>\n<li>Encoding：<ul>\n<li>REDIS_ENCODING_ZIPLIST：默认的编码</li>\n<li>REDIS_ENCODING_SKIPLIST：当元素大小大于配置的zset-max-ziplist-value（默认64）或元素个数大于配置的zset-max-ziplist-entries（默认128）时使用此编码</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"String\"><a href=\"#String\" class=\"headerlink\" title=\"String\"></a>String</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_22903841/article/details/113531818\">redis数据类型之String命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"List\"><a href=\"#List\" class=\"headerlink\" title=\"List\"></a>List</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ETalien_/article/details/107334967\">redis数据类型之List命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Hash\"><a href=\"#Hash\" class=\"headerlink\" title=\"Hash\"></a>Hash</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pengjunlee/article/details/78838262\">redis数据类型之Hash命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Set\"><a href=\"#Set\" class=\"headerlink\" title=\"Set\"></a>Set</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gymaisyl/article/details/99718163\">redis数据类型之Set命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Zset\"><a href=\"#Zset\" class=\"headerlink\" title=\"Zset\"></a>Zset</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36109528/article/details/120945672\">redis数据类型之Zset命令详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Geo\"><a href=\"#Geo\" class=\"headerlink\" title=\"Geo\"></a>Geo</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baichrn/article/details/119246304\">redis数据类型之Geo入门</a></li>\n<li><a href=\"https://blog.csdn.net/mrlin6688/article/details/111194172\">redis数据类型之Geo进阶</a></li>\n<li><a href=\"https://blog.csdn.net/myli_binbin/article/details/121334710\">redis数据类型之Geo详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Bitmap\"><a href=\"#Bitmap\" class=\"headerlink\" title=\"Bitmap\"></a>Bitmap</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46794373/article/details/109199618\">redis数据类型之Bitmap详解</a></li>\n<li><a href=\"https://blog.csdn.net/truelove12358/article/details/106698085\">Bitmap详解</a></li>\n<li><a href=\"https://blog.csdn.net/Qgf_666/article/details/88580919\">Bitmap应用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"BloomFilter\"><a href=\"#BloomFilter\" class=\"headerlink\" title=\"BloomFilter\"></a>BloomFilter</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41125219/article/details/119982158\">redis数据类型之BloomFilter（布隆过滤器）详解</a></li>\n<li><a href=\"https://blog.csdn.net/minghao0508/article/details/124313066\">BloomFilter入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42393929/article/details/112438183\">BloomFilter进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38571892/article/details/123503418\">BloomFilter详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41125219/article/details/119982158\">BloomFilter使用</a></li>\n<li><a href=\"https://tianyalei.blog.csdn.net/article/details/74721877\">BloomFilter误判</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42425970/article/details/102532185\">BloomFilter之url去重的几种方式入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38759383/article/details/125283029\">BloomFilter之url去重的几种方式详解</a></li>\n</ul>\n</blockquote>\n<p>布隆过滤器使用场景和问题</p>\n<ul>\n<li>过滤场景（黑名单）：由于（黑名单）布隆过滤器存在性判断会误判的原因，会导致部分正常的被丢弃<ul>\n<li>垃圾邮件过滤：由于误判会将一小部分正常邮件判定为垃圾邮件，从而导致用户的正常邮件被丢弃或进入垃圾箱</li>\n<li>爬虫地址去重：由于误判会将一小部分没有抓取过的网页判断为抓取过，从而导致这部分网页不能被抓取到系统</li>\n<li>新闻推荐去重：由于误判会将一小部分没有推送过的新闻判断为推送过，从而导致这部分新闻不能被推送到用户</li>\n</ul>\n</li>\n<li>筛选场景（白名单）：由于（白名单）布隆过滤器存在性判断会误判的原因，会导致部分异常的被通过<ul>\n<li>缓存穿透解决：由于误判会将一小部分不存在的key判定为存在，从而穿透缓存</li>\n<li>非法攻击防御：HBase\\RocksDB\\LevelDB等数据库内置布隆过滤器，用于判断数据是否存在，可以减少数据库的IO请求</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"HyperLogLog\"><a href=\"#HyperLogLog\" class=\"headerlink\" title=\"HyperLogLog\"></a>HyperLogLog</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/maoyuanming0806/article/details/81814610\">redis数据类型之HyperLogLog详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Expire\"><a href=\"#Expire\" class=\"headerlink\" title=\"Expire\"></a>Expire</h2><blockquote>\n<ul>\n<li><a href=\"https://dongshao.blog.csdn.net/article/details/106022331\">redis过期命令详解</a></li>\n<li><a href=\"https://blog.csdn.net/chinesesoftware/article/details/122562887\">redis过期策略详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Eliminate\"><a href=\"#Eliminate\" class=\"headerlink\" title=\"Eliminate\"></a>Eliminate</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_37286668/article/details/110631680\">redis淘汰策略入门</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/115360829\">redis淘汰策略详解</a></li>\n</ul>\n</blockquote>\n<p>LRU（Least Recently Used）：最久未使用算法，基于时间，淘汰闲置时间最长的数据<br>LFU（Least Frequently Used）：最少使用算法，基于频率，淘汰使用频率最低的数据</p>\n<h1 id=\"Transaction\"><a href=\"#Transaction\" class=\"headerlink\" title=\"Transaction\"></a>Transaction</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/FlatTiger/article/details/113752059\">redis事务入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43520450/article/details/107548277\">redis事务详解</a></li>\n<li><a href=\"https://blog.csdn.net/Skying_/article/details/117929171\">redis事务（Transaction）和管道（Pipeline）</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Atomicity\"><a href=\"#Atomicity\" class=\"headerlink\" title=\"Atomicity\"></a>Atomicity</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fisherish/article/details/120234130\">Redis事务的特性之原子性</a></li>\n</ul>\n</blockquote>\n<p>redis中单个操作是原子性的，复合操作不是原子性的（因为某个命令执行出错不会影响下一个命令的执行）</p>\n<blockquote>\n<p>ps：redis事务中的命令如果有语法错误，事务会被取消，事务里的所有命令都不会执行</p>\n</blockquote>\n<h2 id=\"Isolation\"><a href=\"#Isolation\" class=\"headerlink\" title=\"Isolation\"></a>Isolation</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43163317/article/details/121670316\">Redis事务的特性之隔离性</a></li>\n</ul>\n</blockquote>\n<p>redis执行命令是单线程的，不存在并发，所以不需要隔离性</p>\n<h2 id=\"Durability\"><a href=\"#Durability\" class=\"headerlink\" title=\"Durability\"></a>Durability</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43064185/article/details/122035596\">redis之RDB和AOF详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RDB\"><a href=\"#RDB\" class=\"headerlink\" title=\"RDB\"></a>RDB</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ctwctw/article/details/105147277\">redis之RDB详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"AOF\"><a href=\"#AOF\" class=\"headerlink\" title=\"AOF\"></a>AOF</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44743841/article/details/107915188\">redis之AOF详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><h2 id=\"缓存失效\"><a href=\"#缓存失效\" class=\"headerlink\" title=\"缓存失效\"></a>缓存失效</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tszc95/article/details/128999587\">缓存穿透、击穿、雪崩详解</a></li>\n<li><a href=\"https://blog.csdn.net/wx1528159409/article/details/88357728\">缓存穿透和布隆过滤器入门</a></li>\n<li><a href=\"https://blog.csdn.net/W1sper/article/details/119459257\">缓存穿透和布隆过滤器详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>缓存穿透：不存在的key（布隆过滤器、缓存空值、接口校验、防火墙拉黑恶意攻击）</li>\n<li>缓存击穿：单个热点key失效了（热点key永不过期、加锁控制、监控热点key并延长过期时间）</li>\n<li>缓存雪崩：大量key同时失效了（过期时间随机、加锁控制、监控热点key并延长过期时间）</li>\n</ul>\n<h2 id=\"缓存一致性\"><a href=\"#缓存一致性\" class=\"headerlink\" title=\"缓存一致性\"></a>缓存一致性</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/121275331\">CPU缓存一致性入门</a></li>\n<li><a href=\"https://blog.csdn.net/youzhangjing_/article/details/124106900\">CPU缓存一致性详解</a></li>\n<li><a href=\"https://blog.csdn.net/a3961401/article/details/111655856\">redis缓存一致性入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44129618/article/details/122358133\">redis缓存一致性进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010180738/article/details/105786711\">redis缓存一致性详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_70651612/article/details/125522473\">redis缓存一致性精进</a></li>\n</ul>\n</blockquote>\n<h3 id=\"脏数据问题\"><a href=\"#脏数据问题\" class=\"headerlink\" title=\"脏数据问题\"></a>脏数据问题</h3><ol>\n<li>先删除缓存再更新数据库：A del cache &#x3D;&gt; A update db &#x3D;&gt; B read db &#x3D;&gt; B update cache</li>\n<li>先删除缓存再更新数据库：A del cache &#x3D;&gt; B read db &#x3D;&gt; B update cache &#x3D;&gt; A update db</li>\n<li>先删除缓存再更新数据库：A del cache &#x3D;&gt; B read db &#x3D;&gt; A update db &#x3D;&gt; B update cache</li>\n<li>先更新数据库再删除缓存：B read db &#x3D;&gt; B update cache &#x3D;&gt; A update db &#x3D;&gt; A del cache</li>\n<li>先更新数据库再删除缓存：B read db &#x3D;&gt; A update db &#x3D;&gt; B update cache &#x3D;&gt; A del cache</li>\n<li>先更新数据库再删除缓存：B read db &#x3D;&gt; A update db &#x3D;&gt; A del cache &#x3D;&gt; B update cache</li>\n</ol>\n<p>总结：情况2、3、6会产生缓存脏数据，只要 B read db 发生在 A update db 之前，且B update cache 发生在 A del cache之后就会产生缓存脏数据，但是情况6的发生概率比较低（因为B update cache比A update db快，B update cache一般不会晚于A update db完成，所以先更新数据库再删除缓存出现情况4的概率比较高）</p>\n<h2 id=\"数据丢失\"><a href=\"#数据丢失\" class=\"headerlink\" title=\"数据丢失\"></a>数据丢失</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/real_myth/article/details/52582739\">redis数据丢失详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yangbindxj/article/details/123199039\">redis性能优化1</a></li>\n<li><a href=\"https://blog.csdn.net/smartbetter/article/details/97971151\">redis性能优化2</a></li>\n<li><a href=\"https://blog.csdn.net/guotianqing/article/details/114398036\">redis性能优化3</a></li>\n<li><a href=\"https://blog.csdn.net/wf_feng/article/details/121046703\">redis性能优化4</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44259720/article/details/127620232\">redis性能优化5</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis为什么这么快\"><a href=\"#Redis为什么这么快\" class=\"headerlink\" title=\"Redis为什么这么快\"></a>Redis为什么这么快</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hollis_chuang/article/details/118865058\">redis为什么这么快入门</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN2497242041/article/details/120755188\">redis为什么这么快进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35190492/article/details/122293594\">redis为什么这么快详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis为什么QPS这么高\"><a href=\"#Redis为什么QPS这么高\" class=\"headerlink\" title=\"Redis为什么QPS这么高\"></a>Redis为什么QPS这么高</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38461724/article/details/107205416\">Redis为什么QPS这么高入门</a></li>\n<li><a href=\"https://blog.csdn.net/singwhatiwanna/article/details/108543949\">Redis为什么QPS这么高进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zzti_erlie/article/details/113429308\">Redis为什么QPS这么高详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis为什么要引入多线程\"><a href=\"#Redis为什么要引入多线程\" class=\"headerlink\" title=\"Redis为什么要引入多线程\"></a>Redis为什么要引入多线程</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shijinghan1126/article/details/117329849\">Redis为什么要引入多线程</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis键名长度和性能\"><a href=\"#Redis键名长度和性能\" class=\"headerlink\" title=\"Redis键名长度和性能\"></a>Redis键名长度和性能</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_17231297/article/details/106622060\">Redis键名长度和性能</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis大key（BigKey）问题\"><a href=\"#Redis大key（BigKey）问题\" class=\"headerlink\" title=\"Redis大key（BigKey）问题\"></a>Redis大key（BigKey）问题</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_36642528/article/details/111238496\">Redis大key（BigKey）问题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Redis热key（HotKey）问题\"><a href=\"#Redis热key（HotKey）问题\" class=\"headerlink\" title=\"Redis热key（HotKey）问题\"></a>Redis热key（HotKey）问题</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hellozhxy/article/details/119773333\">Redis热key（HotKey）问题</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Cantevenl/article/details/115839649\">redis主从复制详解</a></li>\n<li><a href=\"https://blog.csdn.net/a745233700/article/details/112404218\">redis主从复制原理</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/NF_ALONG/article/details/128881323\">redis集群方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/Seky_fei/article/details/107239765\">redis集群方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44422604/article/details/108133908\">redis之一致性hash</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44642403/article/details/118885921\">redis集群搭建和使用</a></li>\n<li><a href=\"https://blog.csdn.net/men_wen/article/details/72896682\">redis集群扩容和收缩</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h2 id=\"Lock\"><a href=\"#Lock\" class=\"headerlink\" title=\"Lock\"></a>Lock</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/fuzhongmin05/article/details/119251590\">Redis分布式锁入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42201180/article/details/129336925\">redis分布式锁进阶</a></li>\n<li><a href=\"https://blog.csdn.net/asd051377305/article/details/108384490\">redis分布式锁详解</a></li>\n<li><a href=\"https://blog.csdn.net/a184477587/article/details/114454415\">redis分布式锁分类</a></li>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/116293762\">redis分布式锁之红锁</a></li>\n<li><a href=\"https://blog.csdn.net/unwrapping/article/details/109364500\">redis分布式锁之乐观锁入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39612954/article/details/107470999\">redis分布式锁之乐观锁进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51069685/article/details/122278373\">redis分布式锁之乐观锁详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Publish-Subscribe\"><a href=\"#Publish-Subscribe\" class=\"headerlink\" title=\"Publish-Subscribe\"></a>Publish-Subscribe</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41125219/article/details/120299819\">redis发布和订阅详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33708432/article/details/92531146\">redis掉线重连（java版）</a></li>\n<li><a href=\"https://blog.csdn.net/one_and_only4711/article/details/108061526\">redis掉线重连（python版）</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Producer-Consumer\"><a href=\"#Producer-Consumer\" class=\"headerlink\" title=\"Producer-Consumer\"></a>Producer-Consumer</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_56252652/article/details/117884303\">redis生产和消费之消息队列的三种方案</a></li>\n<li><a href=\"https://blog.csdn.net/u012060033/article/details/116257400\">redis生产和消费之为什么Redis不适合做消息队列</a></li>\n<li><a href=\"https://blog.csdn.net/loophome/article/details/50371166\">redis生产和消费之List实现消息队列详解</a></li>\n<li><a href=\"https://blog.csdn.net/li_w_ch/article/details/110638434\">redis生产和消费之Stream实现消息队列详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33682790/article/details/90425464\">redis生产和消费之Disque实现消息队列详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhutianrong520/article/details/102715414\">redis为什么用跳表而不是红黑树详解</a></li>\n<li><a href=\"https://blog.csdn.net/Micro_Micro_Hard/article/details/127758524\">redis之跳表和红黑树对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/w8y56f/article/details/120224720\">redis可视化客户端推荐1</a></li>\n<li><a href=\"https://blog.csdn.net/tester_runing/article/details/106119249\">redis可视化客户端推荐2</a></li>\n<li><a href=\"https://blog.csdn.net/afreon/article/details/123815203\">redis可视化客户端推荐3</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wyouwd1/article/details/124719811\">redis监控指标</a></li>\n<li><a href=\"https://blog.csdn.net/m0_38039437/article/details/96479174\">redis监控命令</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33697094/article/details/122618943\">redis监控入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_48380416/article/details/125435608\">redis监控进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yangbindxj/article/details/123184787\">redis监控详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37668842/article/details/82145356\">redis自带工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41453285/article/details/106052698\">redis自带工具详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"mq","url":"/2017/09/01/tech/development/junior/dev-4-mq/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_64881460/article/details/123971740\">MQ入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013905744/article/details/80533795\">MQ进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Tyson0314/article/details/129434823\">MQ详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41864357/article/details/108109914\">MQ中的topic和queue的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>topic：主题，实现发布订阅功能</li>\n<li>queue：队列，实现负载均衡功能</li>\n<li>partition：分区，实现并发处理功能</li>\n</ul>\n<blockquote>\n<p>ps：partition和queue的作用类似，但partition的抽象度更高</p>\n</blockquote>\n<h2 id=\"Protocol\"><a href=\"#Protocol\" class=\"headerlink\" title=\"Protocol\"></a>Protocol</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gyshun/article/details/83036987\">消息协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19004627/article/details/79802685\">消息协议详解</a></li>\n<li><a href=\"https://www.cnblogs.com/pureLaw/p/14779725.html\">消息协议之AMQP和MQTT的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"TMQP\"><a href=\"#TMQP\" class=\"headerlink\" title=\"TMQP\"></a>TMQP</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiaozhuangyumaotao/article/details/106311624\">JMS消息协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangmx1993328/article/details/100822581\">JMS消息协议详解</a></li>\n</ul>\n</blockquote>\n<p>TMQP（Topical Message Queuing Protocol）：主题消息队列协议，基于主题（Topic）的消息队列协议，支持主题分区</p>\n<p>功能较弱，但性能强大，适合数据量大的业务场景</p>\n<p>常见的组件有Kafka、RocketMQ</p>\n<p>RocketMQ是Kafka和RabbitMQ的混合体，性能较高（能支持较大的数据量），且功能较丰富</p>\n<blockquote>\n<p>ps：TMQP是我自己取的名字，方便和其他协议对照说明问题</p>\n</blockquote>\n<h3 id=\"AMQP\"><a href=\"#AMQP\" class=\"headerlink\" title=\"AMQP\"></a>AMQP</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_37641832/article/details/83270778\">AMQP消息协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52174905/article/details/120687714\">AMQP消息协议详解</a></li>\n</ul>\n</blockquote>\n<p>AMQP（Advanced Message Queuing Protocol）：高级消息队列协议，基于交换机（Exchange）的消息队列协议，支持路由匹配</p>\n<p>功能强大，但性能较差，适合数据量小的业务场景。</p>\n<p>常见的组件有RabbitMQ</p>\n<h3 id=\"MQTT\"><a href=\"#MQTT\" class=\"headerlink\" title=\"MQTT\"></a>MQTT</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_47567401/article/details/113810919\">IOT消息协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/Nimrod__/article/details/126383917\">MQTT消息协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39270987/article/details/110930123\">MQTT消息协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43842093/article/details/121238455\">MQTT消息协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/p1279030826/article/details/107916531\">MQTT Broker选型</a></li>\n</ul>\n</blockquote>\n<p>MQTT（Message Queuing Telemetry Transport）：消息队列遥测传输协议，基于动作（Action）的消息队列协议</p>\n<p>协议比较简单轻量，适合物联网（IOT）相关的业务场景</p>\n<h2 id=\"Middleware\"><a href=\"#Middleware\" class=\"headerlink\" title=\"Middleware\"></a>Middleware</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/smallspot/article/details/105650948\">MQ选型入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123493937\">MQ选型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41423450/article/details/86544040\">MQ选型详解</a></li>\n<li><a href=\"https://blog.csdn.net/yuanchangliang/article/details/119116315\">三大主流消息队列对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhengkun51/article/details/111336532\">三大主流消息队列对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38002497/article/details/106055120\">三大主流消息队列对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_30764991/article/details/80574483\">RocketMQ和ActiveMQ对比</a></li>\n<li><a href=\"https://blog.csdn.net/shijinghan1126/article/details/104724407\">RocketMQ和Kafka对比</a></li>\n<li><a href=\"https://blog.csdn.net/hgdzw/article/details/107613165\">RocketMQ和RabbitMQ对比</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RabbitMQ\"><a href=\"#RabbitMQ\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><h4 id=\"Basic-1\"><a href=\"#Basic-1\" class=\"headerlink\" title=\"Basic\"></a>Basic</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45472675/article/details/110951399\">RabbitMQ入门</a></li>\n<li><a href=\"https://blog.csdn.net/lzx1991610/article/details/102970854\">RabbitMQ进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45173404/article/details/121687489\">RabbitMQ详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Concept-1\"><a href=\"#Concept-1\" class=\"headerlink\" title=\"Concept\"></a>Concept</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuhenghui5201/article/details/106524118\">RabbitMQ核心对象入门</a></li>\n<li><a href=\"https://blog.csdn.net/jy02268879/article/details/106023994\">RabbitMQ核心对象进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39776991/article/details/111618735\">RabbitMQ核心对象详解</a></li>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/102752971\">RabbitMQ之vhost详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45492007/article/details/106155545\">RabbitMQ之Connection详解</a></li>\n<li><a href=\"https://blog.csdn.net/Hmj050117/article/details/121587672\">RabbitMQ之Channel详解</a></li>\n<li><a href=\"https://blog.csdn.net/debug_fan/article/details/105088145\">RabbitMQ之Exchange详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45492007/article/details/106103962\">RabbitMQ之Queue详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Exchange\"><a href=\"#Exchange\" class=\"headerlink\" title=\"Exchange\"></a>Exchange</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dh554112075/article/details/90182453\">RabbitMQ之Exchange和Queue的关系入门</a></li>\n<li><a href=\"https://blog.csdn.net/Michaelwubo/article/details/126264930\">RabbitMQ之Exchange和Queue的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/iamshuigege/article/details/81675354\">RabbitMQ之Exchange的binding-key和routing-key</a></li>\n<li><a href=\"https://blog.csdn.net/mtsbv110/article/details/106047663\">RabbitMQ路由机制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45145809/article/details/109328224\">RabbitMQ工作模式详解</a></li>\n<li><a href=\"https://blog.csdn.net/rhnxbdbdh/article/details/120116513\">RabbitMQ之点对点模式</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44798321/article/details/121170051\">RabbitMQ之广播模式</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Consumer\"><a href=\"#Consumer\" class=\"headerlink\" title=\"Consumer\"></a>Consumer</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013825231/article/details/80864885\">RabbitMQ之Consumer和Queue的关系</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Manage\"><a href=\"#Manage\" class=\"headerlink\" title=\"Manage\"></a>Manage</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36551991/article/details/107166065\">RabbitMQ管理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_18671415/article/details/105584521\">RabbitMQ管理之控制台队列标签的含义</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ\"><a href=\"#RocketMQ\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><h4 id=\"Basic-2\"><a href=\"#Basic-2\" class=\"headerlink\" title=\"Basic\"></a>Basic</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xianren95/article/details/121924194\">RocketMQ入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42103983/article/details/119269232\">RocketMQ进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zyx1260168395/article/details/110641851\">RocketMQ详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Concept-2\"><a href=\"#Concept-2\" class=\"headerlink\" title=\"Concept\"></a>Concept</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/123352851\">RocketMQ核心对象入门</a></li>\n<li><a href=\"https://blog.csdn.net/A_art_xiang/article/details/122476795\">RocketMQ核心对象进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ctwctw/article/details/107188474\">RocketMQ核心对象详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Topic\"><a href=\"#Topic\" class=\"headerlink\" title=\"Topic\"></a>Topic</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33709508/article/details/107937475\">RocketMQ之Topic和Queue的关系</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Consumer-1\"><a href=\"#Consumer-1\" class=\"headerlink\" title=\"Consumer\"></a>Consumer</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yuanchangliang/article/details/119190281\">RocketMQ之Consumer和Queue的关系</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Manage-1\"><a href=\"#Manage-1\" class=\"headerlink\" title=\"Manage\"></a>Manage</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/abu935009066/article/details/120828337\">RocketMQ管理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka\"><a href=\"#Kafka\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><h4 id=\"Basic-3\"><a href=\"#Basic-3\" class=\"headerlink\" title=\"Basic\"></a>Basic</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45366499/article/details/106943229\">Kafka入门</a></li>\n<li><a href=\"https://blog.csdn.net/Java_Yhua/article/details/110959440\">Kafka进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hellozpc/article/details/105680217\">Kafka详解</a></li>\n<li><a href=\"https://blog.csdn.net/duysh/article/details/116447305\">Kafka不再需要ZooKeeper了入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43816711/article/details/120783228\">Kafka不再需要ZooKeeper了详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhaijia03/article/details/109352157\">Kafka和Pulsar对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47083537/article/details/105711209\">Kafka和Pulsar对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zhaijia03/article/details/110608326\">Kafka和Pulsar对比详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Concept-3\"><a href=\"#Concept-3\" class=\"headerlink\" title=\"Concept\"></a>Concept</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/loongkingwhat/article/details/122117871\">Kafka核心对象入门</a></li>\n<li><a href=\"https://blog.csdn.net/zekser/article/details/129331168\">Kafka核心对象进阶</a></li>\n<li><a href=\"https://blog.csdn.net/AlphaBr/article/details/124554573\">Kafka核心对象详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43767015/article/details/121865743\">Kafka之Replica详解</a></li>\n<li><a href=\"https://blog.csdn.net/daima_caigou/article/details/109390705\">Kafka之ISR详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36558538/article/details/108383093\">Kafka之ACK详解</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Topic-1\"><a href=\"#Topic-1\" class=\"headerlink\" title=\"Topic\"></a>Topic</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Dongguabai/article/details/86536894\">Kafka之Topic和Partition的关系</a></li>\n</ul>\n</blockquote>\n<h5 id=\"Consumer-2\"><a href=\"#Consumer-2\" class=\"headerlink\" title=\"Consumer\"></a>Consumer</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/justlpf/article/details/107400534\">Kafka之Consumer和Partition的关系</a></li>\n<li><a href=\"https://blog.csdn.net/u010002184/article/details/113404294\">Kafka之消费者指定offset</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_32176947/article/details/107094049\">Kafka之消费者禁止自动创建topic</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37960603/article/details/122928140\">Kafka之消费者暂停和恢复入门</a></li>\n<li><a href=\"https://blog.csdn.net/booynal/article/details/111054750\">Kafka之消费者暂停和恢复详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/heiren_a/article/details/122232180\">Kafka配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/wyht1222/article/details/101452616\">Kafka配置详解</a></li>\n<li><a href=\"https://blog.csdn.net/XinhuaShuDiao/article/details/113766102\">Kafka之server配置</a></li>\n<li><a href=\"https://blog.csdn.net/XinhuaShuDiao/article/details/113767812\">Kafka之topic配置</a></li>\n<li><a href=\"https://blog.csdn.net/XinhuaShuDiao/article/details/113768081\">Kafka之producer配置</a></li>\n<li><a href=\"https://blog.csdn.net/XinhuaShuDiao/article/details/113769837\">Kafka之consumer配置</a></li>\n<li><a href=\"https://blog.csdn.net/DraGon_HooRay/article/details/123788566\">Kafka之replica配置</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44543774/article/details/117290186\">Kafka之ack配置</a></li>\n<li><a href=\"https://blog.csdn.net/u011626960/article/details/117716599\">Kafka之topic创建配置</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37125796/article/details/105172009\">Kafka之topic删除配置</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Tools\"><a href=\"#Tools\" class=\"headerlink\" title=\"Tools\"></a>Tools</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lovetechlovelife/article/details/111502347\">Kafka自带工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/cr7258/article/details/120276349\">Kafka自带工具进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/107387132\">Kafka自带工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29116427/article/details/80202392\">Kafka自带工具之kafka-topics.sh</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29116427/article/details/105912397\">Kafka自带工具之kafka-console-producer.sh</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29116427/article/details/80206125\">Kafka自带工具之kafka-console-consumer.sh</a></li>\n<li><a href=\"https://blog.csdn.net/u010634066/article/details/119670405\">Kafka自带工具之kafka-consumer-groups.sh</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21383435/article/details/109788860\">Kafka自带工具之kafka-run-class.sh</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21383435/article/details/108649965\">kafka-configs.sh</a></li>\n<li><a href=\"https://blog.csdn.net/chrisy521/article/details/121378419\">Kafka之重置offset</a></li>\n<li><a href=\"https://blog.csdn.net/qq_20466211/article/details/107165237\">Kafka之查看offset</a></li>\n</ul>\n</blockquote>\n<h4 id=\"Manage-2\"><a href=\"#Manage-2\" class=\"headerlink\" title=\"Manage\"></a>Manage</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/x763795151/article/details/121685576\">Kafka管理工具推荐</a></li>\n<li><a href=\"https://blog.csdn.net/hollis_chuang/article/details/117537882\">Kafka管理工具详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ZeroMQ\"><a href=\"#ZeroMQ\" class=\"headerlink\" title=\"ZeroMQ\"></a>ZeroMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mysunshinexia01/article/details/80871694\">ZeroMQ入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41453285/article/details/105984928\">ZeroMQ详解</a></li>\n</ul>\n</blockquote>\n<p>基于消息队列的多线程网络库</p>\n<h3 id=\"ActiveMQ\"><a href=\"#ActiveMQ\" class=\"headerlink\" title=\"ActiveMQ\"></a>ActiveMQ</h3><p>不常用</p>\n<p>ActiveMQ是老牌的消息队列协议，性能较差</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuyuanq123/article/details/79109218\">ActiveMQ详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Disque\"><a href=\"#Disque\" class=\"headerlink\" title=\"Disque\"></a>Disque</h3><p>不常用</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45583158/article/details/100143106\">Disque详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Disruptor\"><a href=\"#Disruptor\" class=\"headerlink\" title=\"Disruptor\"></a>Disruptor</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/QLCZ0809/article/details/111488855\">Disruptor详解</a></li>\n<li><a href=\"https://blog.csdn.net/BASK2311/article/details/129375777\">Disruptor高性能浅析</a></li>\n</ul>\n</blockquote>\n<p>高效内存队列，可用来替代BlockingQueue</p>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><h2 id=\"消息延时\"><a href=\"#消息延时\" class=\"headerlink\" title=\"消息延时\"></a>消息延时</h2><h3 id=\"RabbitMQ-1\"><a href=\"#RabbitMQ-1\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lan_kang/article/details/111305624\">RabbitMQ消息延时入门</a></li>\n<li><a href=\"https://blog.csdn.net/Mou_O/article/details/106093749\">RabbitMQ消息延时详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-1\"><a href=\"#RocketMQ-1\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42201180/article/details/122055604\">RocketMQ消息延时入门</a></li>\n<li><a href=\"https://blog.csdn.net/WXF_Sir/article/details/123275843\">RocketMQ消息延时进阶</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-1\"><a href=\"#Kafka-1\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/121372275\">Kafka消息延时入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35240226/article/details/106474749\">Kafka消息延时详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"消息过期\"><a href=\"#消息过期\" class=\"headerlink\" title=\"消息过期\"></a>消息过期</h2><h3 id=\"RabbitMQ-2\"><a href=\"#RabbitMQ-2\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44027353/article/details/121949086\">RabbitMQ消息过期入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_25453181/article/details/119206281\">RabbitMQ消息过期进阶</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/121321024\">RabbitMQ消息过期详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012702547/article/details/120414699\">RabbitMQ消息过期精进</a></li>\n<li><a href=\"https://blog.csdn.net/why444216978/article/details/105881131\">RabbitMQ队列过期详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-2\"><a href=\"#RocketMQ-2\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26462567/article/details/123333879\">RocketMQ消息过期详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34930488/article/details/101293178\">RocketMQ文件过期详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-2\"><a href=\"#Kafka-2\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wanger61/article/details/127381926\">Kafka消息过期详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012809308/article/details/110006925\">Kafka主题过期详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"分组消费\"><a href=\"#分组消费\" class=\"headerlink\" title=\"分组消费\"></a>分组消费</h2><h3 id=\"RabbitMQ-3\"><a href=\"#RabbitMQ-3\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_24845157/article/details/122235025\">RabbitMQ分组消费详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-3\"><a href=\"#RocketMQ-3\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36559868/article/details/106305164\">RabbitMQ分组消费详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-3\"><a href=\"#Kafka-3\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gdkyxy2013/article/details/86644919\">Kafka分组消费详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"死信队列\"><a href=\"#死信队列\" class=\"headerlink\" title=\"死信队列\"></a>死信队列</h2><h3 id=\"RabbitMQ-4\"><a href=\"#RabbitMQ-4\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/HBliucheng/article/details/111993550\">RabbitMQ死信队列详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-4\"><a href=\"#RocketMQ-4\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41625866/article/details/125851764\">RocketMQ死信队列详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-4\"><a href=\"#Kafka-4\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Sampson_Hugo/article/details/103304678\">Kafka死信队列详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"备份队列\"><a href=\"#备份队列\" class=\"headerlink\" title=\"备份队列\"></a>备份队列</h2><h3 id=\"RabbitMQ-5\"><a href=\"#RabbitMQ-5\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/94760975\">RabbitMQ备份队列详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-5\"><a href=\"#RocketMQ-5\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><p>无</p>\n<h3 id=\"Kafka-5\"><a href=\"#Kafka-5\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><p>无</p>\n<h2 id=\"推拉模式\"><a href=\"#推拉模式\" class=\"headerlink\" title=\"推拉模式\"></a>推拉模式</h2><h3 id=\"RabbitMQ-6\"><a href=\"#RabbitMQ-6\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ITWANGBOIT/article/details/105428281\">RabbitMQ推拉模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/bojinyan/article/details/129399616\">RabbitMQ推拉模式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-6\"><a href=\"#RocketMQ-6\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wanderlustLee/article/details/89294355\">RocketMQ推拉模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/chongshui129727/article/details/101006216\">RocketMQ推拉模式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-6\"><a href=\"#Kafka-6\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38294275/article/details/108373946\">Kafka推拉模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/sunny05296/article/details/106794887\">Kafka推拉模式详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"控制参数\"><a href=\"#控制参数\" class=\"headerlink\" title=\"控制参数\"></a>控制参数</h2><h3 id=\"RabbitMQ-7\"><a href=\"#RabbitMQ-7\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yaomingyang/article/details/102636666\">RabbitMQ消息参数详解</a></li>\n<li><a href=\"https://blog.csdn.net/fsgsggd/article/details/81349553\">RabbitMQ队列参数详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-7\"><a href=\"#RocketMQ-7\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liuchang19950703/article/details/110231213\">RocketMQ消息参数详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36804701/article/details/81481343\">RocketMQ消费模式详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-7\"><a href=\"#Kafka-7\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/heiren_a/article/details/122232180\">Kafka配置参数入门</a></li>\n<li><a href=\"https://blog.csdn.net/wyht1222/article/details/101452616\">Kafka配置参数详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Reliability\"><a href=\"#Reliability\" class=\"headerlink\" title=\"Reliability\"></a>Reliability</h1><h2 id=\"可靠性（Reliability）\"><a href=\"#可靠性（Reliability）\" class=\"headerlink\" title=\"可靠性（Reliability）\"></a>可靠性（Reliability）</h2><h3 id=\"RabbitMQ-8\"><a href=\"#RabbitMQ-8\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dingjianmin/article/details/121031996\">RabbitMQ可靠性入门</a></li>\n<li><a href=\"https://blog.csdn.net/qqq3117004957/article/details/104849766\">RabbitMQ可靠性详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-8\"><a href=\"#RocketMQ-8\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_24313635/article/details/106534138\">RocketMQ可靠性入门</a></li>\n<li><a href=\"https://blog.csdn.net/eluanshi12/article/details/114699421\">RocketMQ可靠性详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-8\"><a href=\"#Kafka-8\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26222859/article/details/123810437\">Kafka可靠性入门</a></li>\n<li><a href=\"https://blog.csdn.net/BigBug_500/article/details/119700448\">Kafka可靠性详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"确认机制（Ack）\"><a href=\"#确认机制（Ack）\" class=\"headerlink\" title=\"确认机制（Ack）\"></a>确认机制（Ack）</h2><h3 id=\"RabbitMQ-9\"><a href=\"#RabbitMQ-9\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/94961012\">RabbitMQ确认机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44318244/article/details/107927677\">RabbitMQ确认机制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-9\"><a href=\"#RocketMQ-9\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hi_bigguy/article/details/119568730\">RocketMQ确认机制入门</a></li>\n<li><a href=\"https://blog.csdn.net/oliver486/article/details/123900921\">RocketMQ确认机制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-9\"><a href=\"#Kafka-9\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chengliehuo9899/article/details/100987920\">Kafka确认机制入门</a></li>\n<li><a href=\"https://qinjl.blog.csdn.net/article/details/108013204\">Kafka确认机制详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"重试机制（Retry）\"><a href=\"#重试机制（Retry）\" class=\"headerlink\" title=\"重试机制（Retry）\"></a>重试机制（Retry）</h2><h3 id=\"RabbitMQ-10\"><a href=\"#RabbitMQ-10\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cwr452829537/article/details/124967634\">RabbitMQ重试机制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-10\"><a href=\"#RocketMQ-10\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_45406092/article/details/120531495\">RocketMQ重试机制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-10\"><a href=\"#Kafka-10\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010953880/article/details/117215937\">Kafka重试机制详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"事务（Transaction）\"><a href=\"#事务（Transaction）\" class=\"headerlink\" title=\"事务（Transaction）\"></a>事务（Transaction）</h2><h3 id=\"RabbitMQ-11\"><a href=\"#RabbitMQ-11\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40950803/article/details/106473259\">RabbitMQ事务详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-11\"><a href=\"#RocketMQ-11\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_32828253/article/details/110098041\">RocketMQ事务详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-11\"><a href=\"#Kafka-11\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wanger61/article/details/127205326\">Kafka事务详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"持久化（Durability）\"><a href=\"#持久化（Durability）\" class=\"headerlink\" title=\"持久化（Durability）\"></a>持久化（Durability）</h2><h3 id=\"RabbitMQ-12\"><a href=\"#RabbitMQ-12\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xiangjunyes/article/details/121713052\">RabbitMQ持久化入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangqsse/article/details/107353676\">RabbitMQ持久化详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-12\"><a href=\"#RocketMQ-12\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LO_YUN/article/details/104033853\">RocketMQ持久化入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014532775/article/details/107017349\">RocketMQ持久化详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-12\"><a href=\"#Kafka-12\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41323968/article/details/123371172\">Kafka持久化入门</a></li>\n<li><a href=\"https://blog.csdn.net/gududedabai/article/details/80002453\">Kafka持久化详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_46614240/article/details/106626475\">MQ常见问题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"消息丢失\"><a href=\"#消息丢失\" class=\"headerlink\" title=\"消息丢失\"></a>消息丢失</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45565645/article/details/120704402\">MQ消息丢失详解</a></li>\n</ul>\n</blockquote>\n<p>解决办法：可以使用确认机制</p>\n<h3 id=\"RabbitMQ-13\"><a href=\"#RabbitMQ-13\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bookssea/article/details/123119980\">RabbitMQ消息丢失详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-13\"><a href=\"#RocketMQ-13\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45788094/article/details/108636781\">RocketMQ消息丢失详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-13\"><a href=\"#Kafka-13\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010899985/article/details/109150280\">Kafka消息丢失详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"生产时丢失消息\"><a href=\"#生产时丢失消息\" class=\"headerlink\" title=\"生产时丢失消息\"></a>生产时丢失消息</h3><ul>\n<li>网络有问题，导致生产端发送消息失败，可以开启确认机制并捕获异常重发</li>\n<li>网络有问题，导致队列端返回ACK失败，可以开启确认机制并捕获异常重发</li>\n<li>队列端处理有问题，返回错误信息导致发送端异常，可以开启确认机制并捕获异常重发</li>\n</ul>\n<h3 id=\"入队时丢失消息\"><a href=\"#入队时丢失消息\" class=\"headerlink\" title=\"入队时丢失消息\"></a>入队时丢失消息</h3><ul>\n<li>队列端服务强停时，消息还在内存没有持久化到磁盘，可以开启持久化机制</li>\n<li>队列端异常崩溃时，消息还在内存没有持久化到磁盘，可以开启持久化机制</li>\n<li>队列端机器宕机时，消息还在内存没有持久化到磁盘，可以开启持久化机制</li>\n</ul>\n<h3 id=\"消费时丢失消息\"><a href=\"#消费时丢失消息\" class=\"headerlink\" title=\"消费时丢失消息\"></a>消费时丢失消息</h3><ul>\n<li>使用自动确认机制时，队列端发送消息后不管消费端有没有收到或者消费端处理是否异常就会删除消息，可以使用手动确认机制</li>\n<li>使用手动确认机制时，队列端使用了线程池异步处理，然后就返回了ACK，需要在异步处理成功后返回ACK</li>\n</ul>\n<h2 id=\"消息重复\"><a href=\"#消息重复\" class=\"headerlink\" title=\"消息重复\"></a>消息重复</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jushisi/article/details/114793011\">MQ消息重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43684538/article/details/120014838\">去重和幂等的区别</a></li>\n</ul>\n</blockquote>\n<p>解决办法：可以进行去重处理</p>\n<p>消息重复包含生产重复和消费重复两部分</p>\n<h3 id=\"RabbitMQ-14\"><a href=\"#RabbitMQ-14\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mytt_10566/article/details/93492501\">RabbitMQ消息之生产重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/120558763\">RabbitMQ消息之消费重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/yuanlong122716/article/details/104596647\">RabbitMQ之幂等实现详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-14\"><a href=\"#RocketMQ-14\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Teddies10081008/article/details/101367787\">RocketMQ消息之生产重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/LO_YUN/article/details/104135197\">RocketMQ消息之消费重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/jiang18238032891/article/details/107344857\">RocketMQ之幂等实现详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-14\"><a href=\"#Kafka-14\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/OiteBody/article/details/118658069\">Kafka消息之生产重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28807077/article/details/110873574\">Kafka消息之消费重复详解</a></li>\n<li><a href=\"https://blog.csdn.net/Aying_seeyou/article/details/107869578\">Kafka之幂等实现详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"生产时重复投递\"><a href=\"#生产时重复投递\" class=\"headerlink\" title=\"生产时重复投递\"></a>生产时重复投递</h3><ul>\n<li>生产端重复投递：生产时，队列端回复的ACK丢失了，生产端没有收到ACK会重发</li>\n</ul>\n<h3 id=\"消费时消费重复\"><a href=\"#消费时消费重复\" class=\"headerlink\" title=\"消费时消费重复\"></a>消费时消费重复</h3><ul>\n<li>消费端消费重复：消费时，消费端回复的ACK丢失了，队列端没有收到ACK会重推</li>\n</ul>\n<h2 id=\"消息乱序\"><a href=\"#消息乱序\" class=\"headerlink\" title=\"消息乱序\"></a>消息乱序</h2><p>解决办法：可以保证分区有序</p>\n<p>消息顺序包含生产顺序和消费顺序两部分</p>\n<h3 id=\"RabbitMQ-15\"><a href=\"#RabbitMQ-15\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42039228/article/details/123526391\">RabbitMQ消息顺序详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46084075/article/details/118616035\">RabbitMQ消息之生产顺序和exchanger</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45264992/article/details/119767010\">RabbitMQ消息之消费顺序和worker</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-15\"><a href=\"#RocketMQ-15\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45325628/article/details/123217384\">RocketMQ消息顺序详解</a></li>\n<li><a href=\"https://blog.csdn.net/My_SweetXue/article/details/107381558\">RocketMQ消息之生产顺序和selector</a></li>\n<li><a href=\"https://blog.csdn.net/a417930422/article/details/51198531\">RocketMQ消息之消费顺序和consumerGroup</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-15\"><a href=\"#Kafka-15\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42494845/article/details/111408725\">Kafka消息顺序详解</a></li>\n<li><a href=\"https://blog.csdn.net/Z_linht/article/details/111660908\">Kafka消息之生产顺序和partitioner</a></li>\n<li><a href=\"https://blog.csdn.net/lingdu_789/article/details/108345584\">Kafka消息之消费顺序和partitioner</a></li>\n</ul>\n</blockquote>\n<h2 id=\"消息积压\"><a href=\"#消息积压\" class=\"headerlink\" title=\"消息积压\"></a>消息积压</h2><p>解决办法：需要提高消费并发</p>\n<h3 id=\"RabbitMQ-16\"><a href=\"#RabbitMQ-16\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/120558918\">RabbitMQ消息积压详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-16\"><a href=\"#RocketMQ-16\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013078871/article/details/123066366\">RocketMQ消息积压详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-16\"><a href=\"#Kafka-16\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/philip502/article/details/118997899\">Kafka消息积压详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"消息溢出\"><a href=\"#消息溢出\" class=\"headerlink\" title=\"消息溢出\"></a>消息溢出</h2><p>解决办法：需要抑制生产速度</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baichoufei90/article/details/103396623\">消息溢出之背压技术详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RabbitMQ-17\"><a href=\"#RabbitMQ-17\" class=\"headerlink\" title=\"RabbitMQ\"></a>RabbitMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xcl13014673050/article/details/115697911\">RabbitMQ消费者速度控制入门</a></li>\n<li><a href=\"https://blog.csdn.net/Taysuesue/article/details/113939002\">RabbitMQ消费者速度控制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"RocketMQ-17\"><a href=\"#RocketMQ-17\" class=\"headerlink\" title=\"RocketMQ\"></a>RocketMQ</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_41098980/article/details/79886312\">RocketMQ消费者速度控制入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011075391/article/details/119504587\">RocketMQ消费者速度控制详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Kafka-17\"><a href=\"#Kafka-17\" class=\"headerlink\" title=\"Kafka\"></a>Kafka</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/h4241778/article/details/122768704\">Kafka消费者速度控制入门</a></li>\n<li><a href=\"https://blog.csdn.net/shuxiaogd/article/details/79390938\">Kafka消费者速度控制详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><h2 id=\"Kafka为什么这么快\"><a href=\"#Kafka为什么这么快\" class=\"headerlink\" title=\"Kafka为什么这么快\"></a>Kafka为什么这么快</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/riemann_/article/details/119515188\">Kafka为什么这么快入门</a></li>\n<li><a href=\"https://blog.csdn.net/kzadmxz/article/details/101576401\">Kafka为什么这么快进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoningxueJAVA/article/details/108468790\">Kafka为什么这么快详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3>","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"es","url":"/2017/09/01/tech/development/junior/dev-5-es/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/UbuntuTouch/article/details/98871531\">ElasticSearch详解</a></li>\n<li><a href=\"https://blog.csdn.net/Jaccccck/article/details/130104268\">OpenSearch详解</a></li>\n<li><a href=\"https://blog.csdn.net/wbsu2004/article/details/122836549\">MeiliSaerch详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16494381/article/details/123640165\">RediSearch详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41832850/article/details/103201633\">ElasticSearch和Solr对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/yb546822612/article/details/103196486\">ElasticSearch和Solr对比详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37871594/article/details/109521668\">es入门</a></li>\n<li><a href=\"https://blog.csdn.net/Huang_ZX_259/article/details/123076305\">es进阶</a></li>\n<li><a href=\"https://blog.csdn.net/aibo_yyds/article/details/120081333\">es详解</a></li>\n<li><a href=\"https://blog.csdn.net/CY19980216/article/details/109212087\">es教程</a></li>\n<li><a href=\"https://blog.csdn.net/qq_26803795/article/details/106522611\">es分词</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40125653/article/details/103953611\">es新特性入门</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/130037089\">es新特性进阶</a></li>\n<li><a href=\"https://blog.csdn.net/star1210644725/article/details/125437649\">es新特性详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DDL（Data-Definition-Language）\"><a href=\"#DDL（Data-Definition-Language）\" class=\"headerlink\" title=\"DDL（Data Definition Language）\"></a>DDL（Data Definition Language）</h2><h3 id=\"Index\"><a href=\"#Index\" class=\"headerlink\" title=\"Index\"></a>Index</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yangchao1125/article/details/115935791\">es之index入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_38030719/article/details/109103650\">es之index进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41297324/article/details/83758033\">es之index详解</a></li>\n<li><a href=\"https://blog.csdn.net/tengxing007/article/details/100663530\">es之index和doc_type对比</a></li>\n<li><a href=\"https://blog.csdn.net/fy_java1995/article/details/106591112\">es之doc_type原理</a></li>\n<li><a href=\"https://blog.csdn.net/hanjun0612/article/details/123063489\">es之doc_type废弃</a></li>\n<li><a href=\"https://blog.csdn.net/xulong5000/article/details/118764369\">es命名规范</a></li>\n<li><a href=\"https://blog.csdn.net/youzhiji/article/details/122319497\">文件名命名规范</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Type\"><a href=\"#Type\" class=\"headerlink\" title=\"Type\"></a>Type</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/aben_sky/article/details/121515175\">es数据类型入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36551991/article/details/108858361\">es数据类型详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"datetime\"><a href=\"#datetime\" class=\"headerlink\" title=\"datetime\"></a>datetime</h4><h5 id=\"datatime\"><a href=\"#datatime\" class=\"headerlink\" title=\"datatime\"></a>datatime</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wlei0618/article/details/123712605\">es时间问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/love1793912554/article/details/103985950\">es时间中的T和Z</a></li>\n<li><a href=\"https://blog.csdn.net/LJFPHP/article/details/89445339\">es时间范围查询</a></li>\n</ul>\n</blockquote>\n<h5 id=\"timezone\"><a href=\"#timezone\" class=\"headerlink\" title=\"timezone\"></a>timezone</h5><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_23160237/article/details/88323822\">es时区问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28988969/article/details/103498476\">es时区问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lijingjingchn/article/details/106925871\">es时区问题详解</a></li>\n<li><a href=\"https://discuss.elastic.co/t/elasticsearch-query-range-with-timezone-is-not-working/250877\">es时区和范围查询入门</a></li>\n<li><a href=\"https://discuss.elastic.co/t/elasticsearch-date-rangequery-affected-by-timezone/43225\">es时区和范围查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Template\"><a href=\"#Template\" class=\"headerlink\" title=\"Template\"></a>Template</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yyuggjggg/article/details/122476638\">es索引模板入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44692700/article/details/122160837\">es索引模板进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiangjai/article/details/109102294\">es索引模板详解</a></li>\n<li><a href=\"https://blog.csdn.net/wangguoqing_it/article/details/121389167\">es动态模板详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq330983778/article/details/103625290\">es查询模板详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"mappings\"><a href=\"#mappings\" class=\"headerlink\" title=\"mappings\"></a>mappings</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41188291/article/details/108136165\">es模板映射详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32165041/article/details/83688593\">es模板映射之fields入门</a></li>\n<li><a href=\"https://blog.csdn.net/vincent_duan/article/details/103969127\">es模板映射之fields详解</a></li>\n<li><a href=\"https://blog.csdn.net/a745233700/article/details/117915118\">es模板映射之config入门</a></li>\n<li><a href=\"https://blog.csdn.net/napoay/article/details/62233031\">es模板映射之config详解</a></li>\n<li><a href=\"https://blog.csdn.net/pony_maggie/article/details/113617710\">es模板映射之_source详解</a></li>\n<li><a href=\"https://blog.csdn.net/jiao_fuyou/article/details/49800969\">es模板映射之_all详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40123451/article/details/120061263\">es模板映射之index参数详解</a></li>\n<li><a href=\"https://blog.csdn.net/lijingjingchn/article/details/105682618\">es模板映射之store参数入门</a></li>\n<li><a href=\"https://blog.csdn.net/liyantianmin/article/details/52531310\">es模板映射之store参数详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"settings\"><a href=\"#settings\" class=\"headerlink\" title=\"settings\"></a>settings</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_48990070/article/details/120342792\">es模板设置详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Analyzer\"><a href=\"#Analyzer\" class=\"headerlink\" title=\"Analyzer\"></a>Analyzer</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_26803795/article/details/106522611\">es分词入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40612128/article/details/123476053\">es分词进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31960623/article/details/119811859\">es分词详解</a></li>\n<li><a href=\"https://blog.csdn.net/ZYC88888/article/details/83620572\">es分词精进</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_36546319/article/details/115375003\">es分词之解决默认不按照下划线分词的方法</a></li>\n<li><a href=\"https://blog.csdn.net/jsloveyou/article/details/117282922\">es分词之下划线和连字符（中划线）的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41570658/article/details/108247274\">es分词之下划线和连字符（中划线）的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/loblab/article/details/125713749\">es分词之下划线和连字符（中划线）的区别详解</a></li>\n<li><a href=\"https://elasticsearch.cn/question/5203\">es分词之keyword和not_analyzed的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Alias\"><a href=\"#Alias\" class=\"headerlink\" title=\"Alias\"></a>Alias</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Weixiaohuai/article/details/124745320\">es别名（alias）入门</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN_WYL2016/article/details/117717224\">es别名（alias）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wlei0618/article/details/125363206\">es别名（alias）详解</a></li>\n<li><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/index-aliases.html\">es别名（alias）精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27818541/article/details/121578814\">es别名（alias）写入</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Reindex\"><a href=\"#Reindex\" class=\"headerlink\" title=\"Reindex\"></a>Reindex</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_21383435/article/details/108953326\">es之索引重建（Reindex）入门</a></li>\n<li><a href=\"https://blog.csdn.net/winterking3/article/details/108242124\">es之索引重建（Reindex）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/120483334\">es之索引重建（Reindex）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Rollover\"><a href=\"#Rollover\" class=\"headerlink\" title=\"Rollover\"></a>Rollover</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Norman_Hu/article/details/89917569\">es之索引按日期分割入门</a></li>\n<li><a href=\"https://blog.csdn.net/a_nuo/article/details/121712137\">es之索引按日期分割详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43820556/article/details/122072407\">es之索引翻滚（rollover）入门</a></li>\n<li><a href=\"https://blog.csdn.net/Lyncai/article/details/120074968\">es之索引翻滚（rollover）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ubuntutouch/article/details/102670918\">es之索引翻滚（rollover）详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Lifecycle\"><a href=\"#Lifecycle\" class=\"headerlink\" title=\"Lifecycle\"></a>Lifecycle</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hellozhxy/article/details/117551755\">es之索引按冷热分离入门</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/120665378\">es之索引按冷热分离详解</a></li>\n<li><a href=\"https://blog.csdn.net/ubuntutouch/article/details/102728987\">es之索引生命周期（lifecycle）入门</a></li>\n<li><a href=\"https://blog.csdn.net/feifuzeng/article/details/108270021\">es之索引生命周期（lifecycle）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Lyncai/article/details/120066823\">es之索引生命周期（lifecycle）详解</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/117408365\">es之索引生命周期（lifecycle）精进</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/122531708\">es之索引生命周期（lifecycle）避坑</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Snapshot\"><a href=\"#Snapshot\" class=\"headerlink\" title=\"Snapshot\"></a>Snapshot</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/My__CSDN/article/details/129881702\">es之索引备份（snapshot）入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_16164711/article/details/123209413\">es之索引备份（snapshot）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44006354/article/details/103768077\">es之索引备份（snapshot）详解</a></li>\n<li><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/backing-up-your-cluster.html\">es之索引备份（snapshot）精进</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35008624/article/details/99676124\">es之索引备份（snapshot）迁移</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DML（Data-Manipulation-Language）\"><a href=\"#DML（Data-Manipulation-Language）\" class=\"headerlink\" title=\"DML（Data Manipulation Language）\"></a>DML（Data Manipulation Language）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42697271/article/details/119455896\">es之post和put的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/sundenskyqq/article/details/105058854\">es之post和put的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoyu_BD/article/details/81914567\">es之各种insert的区别1</a></li>\n<li><a href=\"https://blog.csdn.net/TreeCode/article/details/120556179\">es之各种insert的区别2</a></li>\n<li><a href=\"https://blog.csdn.net/qq_28988969/article/details/104016579\">es之各种insert的区别3</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/121226368\">es之脚本操作</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39723544/article/details/109237175\">es之批量操作</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>insert：插入<ul>\n<li>insertOrReject：不存在就插入，存在时就拒绝</li>\n<li>insertOrIgnore：不存在就插入，存在时就忽略</li>\n<li>insertOrUpdate：不存在就插入，存在时就更新</li>\n<li>insertOrReplace：不存在就插入，存在时就替换</li>\n</ul>\n</li>\n<li>update（modify）：（部分）更新（修改）<ul>\n<li>updateOrReject：存在时就更新，不存在就拒绝（不常见） </li>\n<li>updateOrIgnore：存在时就更新，不存在就忽略</li>\n<li>updateOrInsert：存在时就更新，不存在就插入（等同于insertOrUpdate）</li>\n</ul>\n</li>\n<li>replace（modify）：（整体）替换（修改）<ul>\n<li>replaceOrReject：存在时就替换，不存在就拒绝（不常见）</li>\n<li>replaceOrIgnore：存在时就替换，不存在就忽略</li>\n<li>replaceOrInsert：存在时就替换，不存在就插入（等同于insertOrReplace）</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>ps：修改（change）广义上包含insert（插入）、update（更新）、delete（删除）操作<br>ps：替换（replace）也是一种修改，本质是delete（删除）+ insert（插入）</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /&lt;target&gt;/_doc/</span><br><span class=\"line\">POST /&lt;target&gt;/_doc/&lt;_id&gt;/_create</span><br><span class=\"line\">POST /&lt;target&gt;/_doc/&lt;_id&gt;?op_type=create</span><br><span class=\"line\">POST /&lt;target&gt;/_create/&lt;_id&gt;</span><br><span class=\"line\">POST /&lt;target&gt;/_doc/&lt;_id&gt;/_update</span><br><span class=\"line\"></span><br><span class=\"line\">PUT /&lt;target&gt;/_doc/&lt;_id&gt;</span><br><span class=\"line\">PUT /&lt;target&gt;/_doc/&lt;_id&gt;/_create</span><br><span class=\"line\">PUT /&lt;target&gt;/_doc/&lt;_id&gt;?op_type=create</span><br><span class=\"line\">PUT /&lt;target&gt;/_create/&lt;_id&gt;</span><br></pre></td></tr></table></figure>\n\n<p>总结如下：</p>\n<ol>\n<li>不指定id时，post会创建新的，put操作不合法</li>\n<li>指定id时，如果id不存在，post会创建，put不会创建，但是put可以通过接口&#x2F;_create&#x2F;&lt;_id&gt;实现强制创建</li>\n<li>指定id时，如果id存在，post和put都是整体更新，但是post可以通过末端&#x2F;_update实现部分更新</li>\n<li>post时可以通过末端&#x2F;&lt;_id&gt;&#x2F;_create或参数op_type&#x3D;create控制id冲突时拒绝插入</li>\n<li>put时可以通过末端&#x2F;&lt;_id&gt;&#x2F;_create或参数op_type&#x3D;create控制id不存在时拒绝更新</li>\n<li>post时可以通过末端&#x2F;_update实现部分更新</li>\n<li>put时可以通过接口&#x2F;_create&#x2F;&lt;_id&gt;控制不存在时强制创建</li>\n</ol>\n<h3 id=\"insert\"><a href=\"#insert\" class=\"headerlink\" title=\"insert\"></a>insert</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/liyu121/article/details/100066427\">es插入之insertOrReject入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44901065/article/details/97511840\">es插入之insertOrReject详解</a></li>\n<li><a href=\"https://blog.csdn.net/UbuntuTouch/article/details/115480681\">es更新之insertOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39713833/article/details/111683277\">es更新之insertOrIgnore详解</a></li>\n<li><a href=\"https://blog.csdn.net/brotherdong90/article/details/50673928\">es更新之insertOrUpdate入门</a></li>\n<li><a href=\"https://blog.csdn.net/andy_only/article/details/102919423\">es更新之insertOrUpdate详解</a></li>\n<li><a href=\"https://blog.csdn.net/chican2485/article/details/100639903\">es替换之insertOrReplace入门</a></li>\n<li><a href=\"https://blog.csdn.net/wd2014610/article/details/81136995\">es替换之insertOrReplace详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45012575/article/details/100695333\">es插入之批量insert</a></li>\n</ul>\n</blockquote>\n<p>单个插入、批量插入</p>\n<p>insertOrReject：es index（post &#x2F;&lt;_id&gt;&#x2F;_create） op<br>insertOrIgnore：es index（post &#x2F;&lt;_id&gt;&#x2F;_update_by_query） op with id condition<br>insertOrUpdate: es index（post &#x2F;&lt;_id&gt;&#x2F;_update） op with upsert param<br>insertOrReplace：es index（post） op || es index（put &#x2F;_create&#x2F;&lt;_id&gt;） op</p>\n<h3 id=\"update\"><a href=\"#update\" class=\"headerlink\" title=\"update\"></a>update</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42475367/article/details/102673691\">es更新之updateOrIgnore入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36551991/article/details/110096269\">es更新之updateOrIgnore详解</a></li>\n<li><a href=\"https://blog.csdn.net/CSDNgaoqingrui/article/details/106812291\">es更新之批量update</a></li>\n<li><a href=\"https://blog.csdn.net/star1210644725/article/details/122389280\">es更新之脚本更新</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38809962/article/details/79768002\">es更新之运算更新</a></li>\n</ul>\n</blockquote>\n<p>单个更新、批量更新</p>\n<p>updateOrReject：无<br>updateOrIgnore：es index（post &#x2F;&lt;_id&gt;&#x2F;_update） op<br>updateOrInsert：等同于insertOrUpdate</p>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><p>单个替换、批量替换</p>\n<p>replaceOrReject：es index（put &#x2F;&lt;_id&gt;&#x2F;_create） op<br>replaceOrIgnore：es index（put） op<br>replaceOrInsert：等同于insertOrReplace</p>\n<h3 id=\"delete\"><a href=\"#delete\" class=\"headerlink\" title=\"delete\"></a>delete</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lizz861109/article/details/113109005\">es删除之delete入门</a></li>\n<li><a href=\"https://blog.csdn.net/york_888/article/details/106789584\">es删除之delete详解</a></li>\n<li><a href=\"https://blog.csdn.net/lizz861109/article/details/113109005\">es删除之批量delete</a></li>\n</ul>\n</blockquote>\n<p>单个删除、批量删除</p>\n<h2 id=\"DQL（Data-Query-Language）\"><a href=\"#DQL（Data-Query-Language）\" class=\"headerlink\" title=\"DQL（Data Query Language）\"></a>DQL（Data Query Language）</h2><p>等值查询、范围查询、模糊查询、聚合查询、组合查询、关联查询、子查询</p>\n<h3 id=\"general（常规查询）\"><a href=\"#general（常规查询）\" class=\"headerlink\" title=\"general（常规查询）\"></a>general（常规查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40149557/article/details/122467971\">es常规查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/LeoHan163/article/details/126433158\">es常规查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42998034/article/details/117745696\">es常规查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/winterking3/article/details/108235285\">es常规查询之_source详解</a></li>\n<li><a href=\"https://blog.csdn.net/lzxlfly/article/details/113484869\">es常规查询之term详解</a></li>\n<li><a href=\"https://blog.csdn.net/wuxintdrh/article/details/115344677\">es常规查询之match详解</a></li>\n<li><a href=\"https://blog.csdn.net/zidongxiangxi/article/details/111957568\">es常规查询之match_phrase详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42383787/article/details/100036723\">es常规查询之constant_score详解</a></li>\n<li><a href=\"https://blog.csdn.net/ctwy291314/article/details/82770108\">es常规查询之query_string详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_15058425/article/details/105909847\">es常规查询之exists详解</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/121115237\">es常规查询之sql详解</a></li>\n<li><a href=\"https://blog.csdn.net/u014646662/article/details/98170053\">es常规查询之script_fields详解</a></li>\n<li><a href=\"https://blog.csdn.net/ChengHuanHuaning/article/details/117696054\">es常规查询之分页详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq330983778/article/details/103723921\">es常规查询之排序详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"range（范围查询）\"><a href=\"#range（范围查询）\" class=\"headerlink\" title=\"range（范围查询）\"></a>range（范围查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chinus_yan/article/details/121006236\">es范围查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/wei_bo_cai/article/details/106331465\">es范围查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36095679/article/details/106561906\">es范围查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44207827/article/details/122365250\">es范围查询之between详解</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/119345344\">es范围查询之in详解</a></li>\n</ul>\n</blockquote>\n<p>范围查询：左闭右闭（数据库用的多）、左闭右开（编程语言用的多）、左开右闭、左开右开</p>\n<h3 id=\"fuzzy（模糊查询）\"><a href=\"#fuzzy（模糊查询）\" class=\"headerlink\" title=\"fuzzy（模糊查询）\"></a>fuzzy（模糊查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012161251/article/details/120559438\">es精确查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/119643883\">es精确查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Y_anger/article/details/114253092\">es精确查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43859729/article/details/108134329\">es模糊查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/119329627\">es模糊查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/pony_maggie/article/details/113951893\">es模糊查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21383435/article/details/108808041\">es模糊查询大全</a></li>\n</ul>\n</blockquote>\n<p>prefix、contains、wildcard、regexp、fuzzy</p>\n<h3 id=\"aggregation（聚合查询）\"><a href=\"#aggregation（聚合查询）\" class=\"headerlink\" title=\"aggregation（聚合查询）\"></a>aggregation（聚合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Derrick_kkuang/article/details/119122347\">es聚合查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/fu_huo_1993/article/details/127835403\">es聚合查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/mclongyi/article/details/107826997\">es聚合查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"combinedQuery（组合查询）\"><a href=\"#combinedQuery（组合查询）\" class=\"headerlink\" title=\"combinedQuery（组合查询）\"></a>combinedQuery（组合查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shen198623/article/details/123251472\">es多字段查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/111412721\">es多字段查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wlei0618/article/details/120451249\">es多字段查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38399962/article/details/108004303\">es组合查询入门</a></li>\n<li><a href=\"https://blog.csdn.net/fan5522009/article/details/121004528\">es组合查询进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Octopus21/article/details/109556672\">es组合查询详解</a></li>\n<li><a href=\"https://blog.csdn.net/JineD/article/details/109106049\">es组合查询boost权重</a></li>\n<li><a href=\"https://blog.csdn.net/lijingjingchn/article/details/88654714\">es组合查询dis_max分离最大化</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39723544/article/details/103676958\">es组合查询filtered和bool的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36951116/article/details/112594223\">es组合查询should失效问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhengchanmin/article/details/113723890\">es组合查询should失效问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31748587/article/details/101449613\">es组合查询should失效问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/metheir/article/details/85080334\">es组合查询filter为什么比较快</a></li>\n</ul>\n</blockquote>\n<h3 id=\"relatedQuery（关联查询）\"><a href=\"#relatedQuery（关联查询）\" class=\"headerlink\" title=\"relatedQuery（关联查询）\"></a>relatedQuery（关联查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lzxlfly/article/details/127925375\">es关联查询详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"subQuery（子查询）\"><a href=\"#subQuery（子查询）\" class=\"headerlink\" title=\"subQuery（子查询）\"></a>subQuery（子查询）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/nyzzht123/article/details/109578796\">es子查询详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Reliability\"><a href=\"#Reliability\" class=\"headerlink\" title=\"Reliability\"></a>Reliability</h1><h2 id=\"事务（Transaction）\"><a href=\"#事务（Transaction）\" class=\"headerlink\" title=\"事务（Transaction）\"></a>事务（Transaction）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/81052892\">es事务详解</a></li>\n<li><a href=\"https://blog.csdn.net/oZhenDe/article/details/85870818\">es事务日志</a></li>\n</ul>\n</blockquote>\n<h2 id=\"持久化（Durability）\"><a href=\"#持久化（Durability）\" class=\"headerlink\" title=\"持久化（Durability）\"></a>持久化（Durability）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gongpulin/article/details/78766303\">es持久化入门</a></li>\n<li><a href=\"https://blog.csdn.net/aa1215018028/article/details/108746679\">es持久化详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><h2 id=\"Analysis\"><a href=\"#Analysis\" class=\"headerlink\" title=\"Analysis\"></a>Analysis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44993313/article/details/106528719\">es之explain详解</a></li>\n<li><a href=\"https://blog.csdn.net/w1992wishes/article/details/102523633\">es之analyze详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq330983778/article/details/103657930\">es之profile详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Diagnosis\"><a href=\"#Diagnosis\" class=\"headerlink\" title=\"Diagnosis\"></a>Diagnosis</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/star1210644725/article/details/109565434\">es之诊断入门</a></li>\n<li><a href=\"https://blog.csdn.net/icanlove/article/details/125636857\">es之诊断进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u011499747/article/details/78877922\">es之诊断详解</a></li>\n<li><a href=\"https://blog.csdn.net/u012834750/article/details/101780815\">es之诊断精进</a></li>\n<li><a href=\"https://blog.csdn.net/tanguomin/article/details/119064243\">es之任务入门</a></li>\n<li><a href=\"https://blog.csdn.net/asty9000/article/details/100643406\">es之任务进阶</a></li>\n<li><a href=\"https://blog.csdn.net/asty9000/article/details/100903593\">es之任务详解</a></li>\n<li><a href=\"https://www.elastic.co/guide/cn/elasticsearch/guide/current/_pending_tasks.html\">es之任务精进</a></li>\n<li><a href=\"https://blog.csdn.net/justlpf/article/details/103233215\">es之线程池入门</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/114267168\">es之线程池进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u013200380/article/details/109285295\">es之线程池详解</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/126517444\">es之线程池精进</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hanchao5272/article/details/102790741\">es之节点类型详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhoushimiao1990/article/details/103226496\">es原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/chuixue24/article/details/104022065\">es原理详解</a></li>\n<li><a href=\"https://blog.csdn.net/pony_maggie/article/details/104135289\">es原理之排序和聚合详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Query\"><a href=\"#Query\" class=\"headerlink\" title=\"Query\"></a>Query</h2><h3 id=\"TF-IDF\"><a href=\"#TF-IDF\" class=\"headerlink\" title=\"TF-IDF\"></a>TF-IDF</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37870649/article/details/81123506\">TF-IDF算法入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44715126/article/details/112094964\">TF-IDF算法进阶</a></li>\n<li><a href=\"https://blog.csdn.net/asialee_bird/article/details/81486700\">TF-IDF算法详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Shard\"><a href=\"#Shard\" class=\"headerlink\" title=\"Shard\"></a>Shard</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_38486203/article/details/80077844\">es分片（Shard）入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiankunking/article/details/109172570\">es分片（Shard）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41489540/article/details/113816617\">es分片（Shard）详解</a></li>\n<li><a href=\"https://blog.csdn.net/jiaojiao521765146514/article/details/82761645\">es分片副本（Replica）入门</a></li>\n<li><a href=\"https://blog.csdn.net/airenKKK/article/details/113184518\">es分片副本（Replica）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41290471/article/details/90318123\">es分片副本（Replica）详解</a></li>\n<li><a href=\"https://blog.csdn.net/ZhongGuoZhiChuang/article/details/106804423\">es分片路由（Routing）入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36428889/article/details/118737115\">es分片路由（Routing）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wangxuelei036/article/details/106634367\">es分片路由（Routing）详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32727095/article/details/113868110\">es分片大小入门</a></li>\n<li><a href=\"https://blog.csdn.net/yht520100/article/details/121615654\">es分片大小进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wlei0618/article/details/127434907\">es分片大小详解</a></li>\n<li><a href=\"https://blog.csdn.net/lixia0417mul2/article/details/119792884\">es的分片（shard）和kafka分区（partition）对比</a></li>\n<li><a href=\"https://blog.csdn.net/w1014074794/article/details/119802550\">es分片之主分片为什么不能修改</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/78443006\">es分片之健康状态详解</a></li>\n<li><a href=\"https://blog.csdn.net/litterfrog/article/details/125298181\">es分片之未分配的分片详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Segment\"><a href=\"#Segment\" class=\"headerlink\" title=\"Segment\"></a>Segment</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wang7075202/article/details/111308905\">es分段（Segment）入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43930865/article/details/108509540\">es分段（Segment）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33748818/article/details/91931945\">es分段（Segment）详解</a></li>\n<li><a href=\"https://blog.csdn.net/a745233700/article/details/117953198\">es分段（Segment）精进</a></li>\n<li><a href=\"https://blog.csdn.net/likui1314159/article/details/53217750\">es分段（Segment）和分片（Shard）关系</a></li>\n<li><a href=\"https://blog.csdn.net/u010454030/article/details/79586072\">为什么说es搜索是近实时的</a></li>\n<li><a href=\"https://blog.csdn.net/hanchao5272/article/details/100078523\">es之refresh详解</a></li>\n<li><a href=\"https://blog.csdn.net/lijingjingchn/article/details/107673900\">es之flush详解</a></li>\n<li><a href=\"https://blog.csdn.net/star1210644725/article/details/107350978\">es之merge详解</a></li>\n<li><a href=\"https://blog.csdn.net/UbuntuTouch/article/details/103641544\">es之refresh、flush详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37692493/article/details/108182161\">es之refresh、flush、merge详解</a></li>\n</ul>\n</blockquote>\n<p>分段存储、延迟写、段合并</p>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3>","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"nginx","url":"/2017/09/01/tech/development/junior/dev-6-nginx/","content":"<h1 id=\"Basic\"><a href=\"#Basic\" class=\"headerlink\" title=\"Basic\"></a>Basic</h1><h2 id=\"Concept\"><a href=\"#Concept\" class=\"headerlink\" title=\"Concept\"></a>Concept</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_51099370/article/details/125228217\">Nginx与LVS、Haproxy对比</a></li>\n<li><a href=\"https://blog.csdn.net/bandaoyu/article/details/108182086\">OpenResty和Nginx的关系</a></li>\n<li><a href=\"https://blog.csdn.net/u011424614/article/details/107814619\">OpenResty入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_35688430/article/details/112263697\">OpenResty详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24509229/article/details/116171770\">Kong和OpenResty的关系</a></li>\n<li><a href=\"https://blog.csdn.net/ApacheAPISIX/article/details/119150155\">APISIX和Kong对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/ApacheAPISIX/article/details/126891097\">APISIX和Kong对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/manmanyao/article/details/105845489\">APISIX详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ArtAndLife/article/details/110103095\">Nginx配置入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangbin_0729/article/details/82109693\">Nginx配置进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42177284/article/details/114855422\">Nginx配置详解</a></li>\n<li><a href=\"https://blog.csdn.net/shen198623/article/details/122414710\">Nginx最大连接数入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhuyu19911016520/article/details/90714429\">Nginx最大连接数详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_38599724/article/details/103138960\">Nginx查看最大连接数</a></li>\n<li><a href=\"https://blog.csdn.net/newxwj/article/details/107018245\">Nginx查看最大并发数</a></li>\n<li><a href=\"https://blog.csdn.net/test_test111/article/details/120100012\">Nginx配置之常用配置</a></li>\n<li><a href=\"https://blog.csdn.net/duola8789/article/details/107608658\">Nginx配置之root和alias的区别</a></li>\n<li><a href=\"https://blog.csdn.net/LANNY8588/article/details/115251631\">Nginx配置之index和try_files的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Upstream\"><a href=\"#Upstream\" class=\"headerlink\" title=\"Upstream\"></a>Upstream</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42306443/article/details/103510560\">Nginx配置之upstream入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_67390969/article/details/126113721\">Nginx配置之upstream进阶</a></li>\n<li><a href=\"https://blog.csdn.net/LL845876425/article/details/97621365\">Nginx配置之upstream详解</a></li>\n<li><a href=\"https://blog.csdn.net/qianghong000/article/details/118153027\">Nginx配置之动态upstream入门</a></li>\n<li><a href=\"https://blog.csdn.net/Aria_Miazzy/article/details/103192475\">Nginx配置之动态upstream详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Server\"><a href=\"#Server\" class=\"headerlink\" title=\"Server\"></a>Server</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Azj12345/article/details/120535948\">Nginx配置之server详解</a></li>\n<li><a href=\"https://blog.csdn.net/lch551218/article/details/104812913\">Nginx配置之server匹配规则入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40737025/article/details/85053164\">Nginx配置之server匹配规则详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Location\"><a href=\"#Location\" class=\"headerlink\" title=\"Location\"></a>Location</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41993206/article/details/117432516\">Nginx配置之location详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_48803304/article/details/107876414\">Nginx配置之proxy_pass入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42818496/article/details/109462050\">Nginx配置之proxy_pass详解</a></li>\n<li><a href=\"https://blog.csdn.net/u010391029/article/details/50395680\">Nginx配置之proxy_redirect入门</a></li>\n<li><a href=\"https://blog.csdn.net/keenx/article/details/128610612\">Nginx配置之proxy_redirect详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38826019/article/details/109176896\">Nginx配置之proxy_set_header入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41536539/article/details/99486071\">Nginx配置之proxy_set_header详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34381842/article/details/118898760\">Nginx配置之location末尾的”&#x2F;“的处理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lhjalt/article/details/108266243\">Nginx配置之dns详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Host\"><a href=\"#Host\" class=\"headerlink\" title=\"Host\"></a>Host</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yihanzhi/article/details/107002881\">Nginx配置之host详解</a></li>\n<li><a href=\"https://blog.csdn.net/zqj1172102457/article/details/106458505\">Nginx配置之$host和$http_host的区别</a></li>\n<li><a href=\"https://blog.csdn.net/LG_15011399296/article/details/125409060\">Nginx配置之$http_host和$proxy_host的区别</a></li>\n<li><a href=\"https://blog.csdn.net/tianyekpp/article/details/71209720\">Nginx配置之$server_port和$proxy_port的区别</a></li>\n<li><a href=\"https://blog.csdn.net/ichen820/article/details/117958438\">登录重定向之Nginx如何传递Host</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/am_Linux/article/details/130070403\">Nginx配置之header详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34556414/article/details/106634895\">获取客户端真实IP之Nginx如何传递X-Real-IP和X-Forwarded-For</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Dispatch\"><a href=\"#Dispatch\" class=\"headerlink\" title=\"Dispatch\"></a>Dispatch</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wosind/article/details/102898948\">nginx根据不同请求头、URL定向到不同服务器</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Rewrite\"><a href=\"#Rewrite\" class=\"headerlink\" title=\"Rewrite\"></a>Rewrite</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_51622156/article/details/112608013\">Nginx配置之rewrite入门</a></li>\n<li><a href=\"https://blog.csdn.net/boyuser/article/details/109563055\">Nginx配置之rewrite详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Websocket\"><a href=\"#Websocket\" class=\"headerlink\" title=\"Websocket\"></a>Websocket</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/small_love/article/details/106254621\">Nginx配置之websocket详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Usage\"><a href=\"#Usage\" class=\"headerlink\" title=\"Usage\"></a>Usage</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41974199/article/details/108832665\">Nginx入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_51432770/article/details/112350471\">Nginx进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44983653/article/details/101115410\">Nginx详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_32421489/article/details/110039555\">Vue之Router的History模式404问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42752574/article/details/108457614\">Vue之Router路由模式详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Extend\"><a href=\"#Extend\" class=\"headerlink\" title=\"Extend\"></a>Extend</h1><h2 id=\"Module\"><a href=\"#Module\" class=\"headerlink\" title=\"Module\"></a>Module</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45412401/article/details/112617848\">Nginx常用模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_54947566/article/details/116327207\">Nginx添加新模块入门</a></li>\n<li><a href=\"https://blog.csdn.net/gshzh00/article/details/90268365\">Nginx添加新模块进阶</a></li>\n<li><a href=\"https://blog.csdn.net/LIN2060/article/details/84098828\">Nginx添加新模块详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24054301/article/details/112131057\">Nginx添加新模块精进</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Script\"><a href=\"#Script\" class=\"headerlink\" title=\"Script\"></a>Script</h2><h1 id=\"Problem\"><a href=\"#Problem\" class=\"headerlink\" title=\"Problem\"></a>Problem</h1><h1 id=\"Performance\"><a href=\"#Performance\" class=\"headerlink\" title=\"Performance\"></a>Performance</h1><h2 id=\"Nginx为什么这么快\"><a href=\"#Nginx为什么这么快\" class=\"headerlink\" title=\"Nginx为什么这么快\"></a>Nginx为什么这么快</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/z591102/article/details/113972164\">Nginx为什么这么快入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44648216/article/details/105823429\">Nginx为什么这么快进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42977042/article/details/104744087\">Nginx为什么这么快详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Availability\"><a href=\"#Availability\" class=\"headerlink\" title=\"Availability\"></a>Availability</h1><h2 id=\"Replication\"><a href=\"#Replication\" class=\"headerlink\" title=\"Replication\"></a>Replication</h2><h2 id=\"Cluster\"><a href=\"#Cluster\" class=\"headerlink\" title=\"Cluster\"></a>Cluster</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/buqutianya/article/details/52076153\">关于LVS+Nginx为什么会被同时使用的思考</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41432730/article/details/122056904\">使用Lvs+Nginx集群实现高可用</a></li>\n<li><a href=\"https://blog.csdn.net/Hello_World_QWP/article/details/104447076\">使用Keepalived+Nginx集群实现高可用</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h1><h1 id=\"Theory\"><a href=\"#Theory\" class=\"headerlink\" title=\"Theory\"></a>Theory</h1><h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Management\"><a href=\"#Management\" class=\"headerlink\" title=\"Management\"></a>Management</h2><h3 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h3><h3 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h3>","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"computer","url":"/2017/09/01/tech/development/junior/dev-7-computer/","content":"<h1 id=\"Computer\"><a href=\"#Computer\" class=\"headerlink\" title=\"Computer\"></a>Computer</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/s33s33333/article/details/121595517\">计算机发展史入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_73995538/article/details/127528107\">计算机发展史进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zmcvvv_0101/article/details/108908767\">计算机发展史详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47135547/article/details/107566603\">计算机组成原理入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31214779/article/details/107196488\">计算机组成原理进阶</a></li>\n<li><a href=\"https://blog.csdn.net/haojie_duan/article/details/112739522\">计算机组成原理详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Core\"><a href=\"#Core\" class=\"headerlink\" title=\"Core\"></a>Core</h2><p>计算机核心组成如下</p>\n<ul>\n<li>控制：CPU（主卡、中央处理器）</li>\n<li>处理：CPU（主卡、中央处理器、简单计算）、GPU（显卡、图形处理器、复杂计算）</li>\n<li>存储：MEM（内存）、Disk（外存）、Flash（闪存）</li>\n<li>输入：键盘、鼠标、触控板、麦克风（声音）、摄像头（图像）、扫描仪（文字）</li>\n<li>输出：显示屏、显示器、耳机、音响（声音）、投影仪（图像）、打印机（文字）</li>\n</ul>\n<blockquote>\n<p>耳麦 &#x3D; 耳机 + 麦克风</p>\n</blockquote>\n<h2 id=\"Main\"><a href=\"#Main\" class=\"headerlink\" title=\"Main\"></a>Main</h2><p>计算机主要组成如下</p>\n<ul>\n<li>控制：主卡（CPU）</li>\n<li>处理：显卡（GPU）、声卡、网卡  </li>\n<li>存储<ul>\n<li>内存：ROM、RAM</li>\n<li>外存：磁盘、光盘</li>\n<li>闪存：SD卡、TF卡、U盘</li>\n<li>磁盘：硬盘、软盘</li>\n<li>硬盘：机械硬盘（HDD）、固态硬盘（SSD）、混合硬盘（HHD）</li>\n</ul>\n</li>\n<li>输入：键盘、鼠标、触控板</li>\n<li>输出：显示器、耳机、投影仪</li>\n<li>外设<ul>\n<li>读取：读卡器、光驱</li>\n<li>插口：<ul>\n<li>USB、Type-C、Lighting</li>\n<li>VGA、DVI、HDMI、DP</li>\n<li>RJ45、RJ11</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Category\"><a href=\"#Category\" class=\"headerlink\" title=\"Category\"></a>Category</h2><p>计算机组成分类如下</p>\n<ul>\n<li>Software：软件</li>\n<li>Hardware：硬件（内嵌）</li>\n<li>Device：设备（外接）</li>\n</ul>\n<h1 id=\"Software\"><a href=\"#Software\" class=\"headerlink\" title=\"Software\"></a>Software</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_35645230/article/details/118510104\">计算机软件入门</a></li>\n<li><a href=\"https://blog.csdn.net/stay_foolish12/article/details/92988176\">计算机软件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ligonglanyuan/article/details/120133653\">计算机软件详解</a></li>\n<li><a href=\"https://blog.csdn.net/Hell_potato777/article/details/126585891\">软件的发展历史（时间轴）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42738998/article/details/120292166\">一文读懂计算机&#x2F;软件发展史（上）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42738998/article/details/120306833\">一文读懂计算机&#x2F;软件发展史（中）</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42738998/article/details/120331655\">一文读懂计算机&#x2F;软件发展史（下）</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Media\"><a href=\"#Media\" class=\"headerlink\" title=\"Media\"></a>Media</h2><blockquote>\n<ul>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1735670259107338919\">mp3、mp4、mp5的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_27149279/article/details/116072999\">win10与手机局域网内快速传输文件（免安装软件）</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/35555134?utm_id=0\">跨平台文件传输工具大全</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/620573656?utm_id=0\">跨平台文件传输工具之Edge Drop</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Hardware\"><a href=\"#Hardware\" class=\"headerlink\" title=\"Hardware\"></a>Hardware</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Liangren_/article/details/107730753\">计算机硬件入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_73993191/article/details/127767737\">计算机硬件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_29791447/article/details/118844985\">计算机硬件详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43655213/article/details/109653125\">存储器分类详解</a></li>\n<li><a href=\"https://blog.csdn.net/abraham76/article/details/122023934\">内存、外存、闪存详解</a></li>\n<li><a href=\"https://blog.csdn.net/Allenzyg/article/details/107911130\">磁盘、硬盘、软盘入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41080850/article/details/86726501\">磁盘、硬盘、软盘进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_63636799/article/details/126256782\">磁盘、硬盘、软盘详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42492215/article/details/118872472\">硬盘、光盘、U盘入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40424333/article/details/130032881\">硬盘、光盘、U盘进阶</a></li>\n<li><a href=\"https://blog.csdn.net/polar_night_down/article/details/124081785\">硬盘、光盘、U盘详解</a></li>\n</ul>\n</blockquote>\n<p>硬盘现在也可以移动了，即移动硬盘</p>\n<h2 id=\"Cpu\"><a href=\"#Cpu\" class=\"headerlink\" title=\"Cpu\"></a>Cpu</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/My__long/article/details/82822409\">CPU（中央处理器）和GPU（图像处理器）的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/shuiyixin/article/details/82915378\">CPU（中央处理器）和GPU（图像处理器）的区别详解</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1672455013407524171\">CPU老化后有什么表现</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Mem\"><a href=\"#Mem\" class=\"headerlink\" title=\"Mem\"></a>Mem</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/bjbz_cxy/article/details/120043537\">RAM和ROM详解</a></li>\n<li><a href=\"https://blog.csdn.net/wildand/article/details/91126833\">RAM和ROM的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Disk\"><a href=\"#Disk\" class=\"headerlink\" title=\"Disk\"></a>Disk</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tylt6688/article/details/113110525\">硬盘详解</a></li>\n<li><a href=\"https://blog.csdn.net/li_wen01/article/details/80221182\">硬盘原理</a></li>\n<li><a href=\"https://blog.csdn.net/xiaofei0859/article/details/50456930\">硬盘分类入门</a></li>\n<li><a href=\"https://blog.csdn.net/WannaHaha/article/details/106787154\">硬盘分类进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45277161/article/details/111827590\">硬盘分类详解</a></li>\n<li><a href=\"https://blog.csdn.net/sj349781478/article/details/125110544\">硬盘接口入门</a></li>\n<li><a href=\"https://blog.csdn.net/qlexcel/article/details/117429918\">硬盘接口进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shuai0845/article/details/98330290\">硬盘接口详解</a></li>\n</ul>\n</blockquote>\n<p>磁盘：disk<br>软盘：floppy disk<br>硬盘：hard disk</p>\n<h1 id=\"Device\"><a href=\"#Device\" class=\"headerlink\" title=\"Device\"></a>Device</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_33657499/article/details/112644019\">设备接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39880337/article/details/118143527\">计算机接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/Dontla/article/details/102803942\">手机接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45264425/article/details/130140409\">显示器接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/fengyjc/article/details/129488515\">网线接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/tiandiren111/article/details/116906053\">USB接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/104466885\">OTG详解</a></li>\n<li><a href=\"https://blog.csdn.net/csdn100861/article/details/51440563\">NAS详解</a></li>\n<li><a href=\"https://blog.csdn.net/dongjt_china/article/details/106578478\">miniPC详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>输入：键盘、鼠标、触控板</li>\n<li>输出：显示器、耳机、投影仪</li>\n<li>外设<ul>\n<li>读取：读卡器、光驱</li>\n<li>插口：<ul>\n<li>USB、Type-C、Lighting</li>\n<li>VGA、DVI、HDMI、DP</li>\n<li>RJ45、RJ11</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"Flash\"><a href=\"#Flash\" class=\"headerlink\" title=\"Flash\"></a>Flash</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LUOHUATINGYUSHENG/article/details/103017960\">SD和TF对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/u011729865/article/details/119246233\">SD和TF对比详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Display\"><a href=\"#Display\" class=\"headerlink\" title=\"Display\"></a>Display</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/MYMOTOE6/article/details/89038463\">八种显示器技术</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44752641/article/details/106742576\">LED显示器和CRT显示器对比</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44752641/article/details/106742521\">LCD显示器与LED显示器对比</a></li>\n<li><a href=\"https://blog.csdn.net/rtkj1122/article/details/128743428\">显示器接口入门</a></li>\n<li><a href=\"https://blog.csdn.net/didi_ya/article/details/122241863\">显示器接口详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"System\"><a href=\"#System\" class=\"headerlink\" title=\"System\"></a>System</h1><h2 id=\"Linux\"><a href=\"#Linux\" class=\"headerlink\" title=\"Linux\"></a>Linux</h2><h2 id=\"Windows\"><a href=\"#Windows\" class=\"headerlink\" title=\"Windows\"></a>Windows</h2><h2 id=\"Mac\"><a href=\"#Mac\" class=\"headerlink\" title=\"Mac\"></a>Mac</h2><h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><h2 id=\"CPU\"><a href=\"#CPU\" class=\"headerlink\" title=\"CPU\"></a>CPU</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yhb1047818384/article/details/79604976\">CPU缓存详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"MEM\"><a href=\"#MEM\" class=\"headerlink\" title=\"MEM\"></a>MEM</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/renfufei/article/details/105851728\">内存入门</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/106522076\">内存详解</a></li>\n<li><a href=\"https://blog.csdn.net/houxiaoni01/article/details/117822656\">cache和buffer的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/ithomer/article/details/79113288\">cache和buffer的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/109756207\">cache和buffer的区别详解</a></li>\n</ul>\n</blockquote>\n<p>cache：缓存（使用更快的设备加快访问速度），for faster read or write<br>buffer：缓冲（使用批量操作提高读写效率），for batch read or write<br>page cache：页缓存（逻辑缓存，依赖buffer cache来读设备）<br>buffer cache：块缓存（物理缓存，叫做block cache更合适）<br>ring buffer：环形缓冲（可以循环重复使用，避免重复的创建和分配内存）</p>\n<h3 id=\"Cache\"><a href=\"#Cache\" class=\"headerlink\" title=\"Cache\"></a>Cache</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingyuli/article/details/119304286\">page cache和buffer cache入门</a></li>\n<li><a href=\"https://blog.csdn.net/jinking01/article/details/107480248\">page cache和buffer cache进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/89399399\">page cache和buffer cache详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Buffer\"><a href=\"#Buffer\" class=\"headerlink\" title=\"Buffer\"></a>Buffer</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_28258885/article/details/118108746\">ring buffer（环形缓冲）入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangyx1234/article/details/107682237\">ring buffer（环形缓冲）进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u013860464/article/details/121772214\">ring buffer（环形缓冲）详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"DISK\"><a href=\"#DISK\" class=\"headerlink\" title=\"DISK\"></a>DISK</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LXWalaz1s1s/article/details/115841831\">磁盘入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53060366/article/details/120173654\">磁盘详解</a></li>\n<li><a href=\"https://blog.csdn.net/zzbeagle/article/details/106539687\">page（页）和block（块）详解</a></li>\n<li><a href=\"https://blog.csdn.net/fyifei0558/article/details/9532183\">track（磁道）和sector（扇区）详解</a></li>\n<li><a href=\"https://blog.csdn.net/william_munch/article/details/84347788\">磁盘的sector（扇区）、block（块）、cluster(簇)详解</a></li>\n<li><a href=\"https://blog.csdn.net/ybhuangfugui/article/details/121463317\">闪存的sector（扇区）、block（块）、cluster(簇)详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"NET\"><a href=\"#NET\" class=\"headerlink\" title=\"NET\"></a>NET</h2><h2 id=\"IO\"><a href=\"#IO\" class=\"headerlink\" title=\"IO\"></a>IO</h2><h1 id=\"Process\"><a href=\"#Process\" class=\"headerlink\" title=\"Process\"></a>Process</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37925202/article/details/78759408\">进程入门</a></li>\n<li><a href=\"https://blog.csdn.net/Jacky_Feng/article/details/108289943\">进程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19018277/article/details/98292367\">进程详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43101637/article/details/105079717\">子进程入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46984636/article/details/120276527\">子进程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_40921797/article/details/81948010\">子进程详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43165314/article/details/105212526\">子进程和父进程资源共享关系</a></li>\n<li><a href=\"https://blog.csdn.net/matafeiyanll/article/details/109788874\">进程组入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/117419933\">进程组进阶</a></li>\n<li><a href=\"https://blog.csdn.net/jinking01/article/details/126925313\">进程组详解</a></li>\n<li><a href=\"https://blog.csdn.net/LLZK_/article/details/57949103\">作业入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37925202/article/details/80211174\">作业进阶</a></li>\n<li><a href=\"https://blog.csdn.net/sandmm112/article/details/80102449\">作业详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhaohong_bo/article/details/89552188\">进程间通信详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43416601/article/details/105646768\">进程状态详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Thread\"><a href=\"#Thread\" class=\"headerlink\" title=\"Thread\"></a>Thread</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40271838/article/details/79998327\">线程入门</a></li>\n<li><a href=\"https://blog.csdn.net/Elephant_King/article/details/122559577\">线程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_51182368/article/details/125799573\">线程详解</a></li>\n<li><a href=\"https://blog.csdn.net/chen_geng/article/details/51613445\">进程和线程的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qinian8/article/details/100779193\">进程和线程的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/ThinkWon/article/details/102021274\">进程和线程的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42411214/article/details/107767326\">线程间通信详解</a></li>\n<li><a href=\"https://blog.csdn.net/pange1991/article/details/53860651\">线程状态详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"network","url":"/2017/09/01/tech/development/junior/dev-8-network/","content":"<h1 id=\"Network\"><a href=\"#Network\" class=\"headerlink\" title=\"Network\"></a>Network</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_35206244/article/details/101426860\">网络模型入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40309341/article/details/118997031\">网络模型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shao_yc/article/details/107394586\">网络模型详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35660280/article/details/81865800\">网络模型之各层的网络协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22238021/article/details/80279001\">网络模型之各层的网络协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yunxiu988622/article/details/105306012\">网络模型之各层的网络协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/rationalgo/article/details/8664453\">网络模型之各层的数据格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/a3192048/article/details/84671340\">网络模型之各层的数据格式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Hongwei_1990/article/details/105942164\">网络模型之各层的数据格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/zwj_jyzl/article/details/78639754\">集线器、交换机、路由器的区别</a></li>\n<li><a href=\"https://blog.csdn.net/chegkn/article/details/84723674\">交换机和集线器的区别</a></li>\n<li><a href=\"https://blog.csdn.net/chengyq116/article/details/88696319\">路由器和交换机的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42767604/article/details/104319828\">三层交换机和路由器的区别</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21989927/article/details/108416425\">MAC地址和IP地址的关系</a></li>\n<li><a href=\"https://blog.csdn.net/ice_masters/article/details/123177508\">冲突域和广播域入门</a></li>\n<li><a href=\"https://blog.csdn.net/starter_____/article/details/102609365\">冲突域和广播域进阶</a></li>\n<li><a href=\"https://blog.csdn.net/dwj_daiwenjie/article/details/108882700\">冲突域和广播域详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"LAN\"><a href=\"#LAN\" class=\"headerlink\" title=\"LAN\"></a>LAN</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44555294/article/details/118931050\">局域网和广域网入门</a></li>\n<li><a href=\"https://blog.csdn.net/liudachu/article/details/118559255\">局域网和广域网进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wangyx1234/article/details/113444581\">局域网和广域网详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq2539879928/article/details/106501889\">局域网游戏联机原理解析</a></li>\n<li><a href=\"https://blog.csdn.net/qq_29566629/article/details/111355342\">使用交换机组建局域网</a></li>\n<li><a href=\"https://blog.csdn.net/lizhenxiqnmlgb/article/details/88874612\">使用路由器组建局域网</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42187898/article/details/92671664\">两台电脑如何组建局域网</a></li>\n</ul>\n</blockquote>\n<h2 id=\"NIC\"><a href=\"#NIC\" class=\"headerlink\" title=\"NIC\"></a>NIC</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41679358/article/details/107344448\">网卡和网卡接口详解</a></li>\n<li><a href=\"https://blog.csdn.net/lewky_liu/article/details/81638892\">网卡和网卡驱动详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_32876681/article/details/118392450\">网卡和网络适配器详解</a></li>\n<li><a href=\"https://blog.csdn.net/Light_Travlling/article/details/101220544\">网络接口卡入门</a></li>\n<li><a href=\"https://blog.csdn.net/Jackliu200911/article/details/108553405\">网络接口卡进阶</a></li>\n<li><a href=\"https://blog.csdn.net/cunjiu9486/article/details/109072869\">网络接口卡详解</a></li>\n<li><a href=\"https://blog.csdn.net/liufei191010/article/details/81284488\">物理网卡入门</a></li>\n<li><a href=\"https://blog.csdn.net/FS_China/article/details/120351537\">物理网卡详解</a></li>\n<li><a href=\"https://blog.csdn.net/class_brick/article/details/72530713\">虚拟网卡入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42073629/article/details/103327136\">虚拟网卡详解</a></li>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/52761892\">如何区分虚拟网卡和物理网卡</a></li>\n<li><a href=\"https://blog.csdn.net/wozaiyizhideng/article/details/108228247\">linux添加虚拟网卡</a></li>\n<li><a href=\"https://blog.csdn.net/xiamofusheng/article/details/107605172\">linux配置单网卡之多个ip</a></li>\n<li><a href=\"https://blog.csdn.net/pamdora/article/details/81117268\">linux配置双网卡之同时访问内外网</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Physical-Layer（物理层）\"><a href=\"#Physical-Layer（物理层）\" class=\"headerlink\" title=\"Physical Layer（物理层）\"></a>Physical Layer（物理层）</h1><h1 id=\"Data-Link-Layer（链路层）\"><a href=\"#Data-Link-Layer（链路层）\" class=\"headerlink\" title=\"Data Link Layer（链路层）\"></a>Data Link Layer（链路层）</h1><h2 id=\"MAC\"><a href=\"#MAC\" class=\"headerlink\" title=\"MAC\"></a>MAC</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Bilson99/article/details/114540398\">MAC地址入门</a></li>\n<li><a href=\"https://blog.csdn.net/ZCShouCSDN/article/details/125277304\">MAC地址进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44081384/article/details/126485580\">MAC地址详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"ARP\"><a href=\"#ARP\" class=\"headerlink\" title=\"ARP\"></a>ARP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zz123456zl/article/details/115307876\">ARP协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32642107/article/details/105478858\">ARP协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiaoxiaoxiexies/article/details/120211303\">ARP协议详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Network-Layer（网络层）\"><a href=\"#Network-Layer（网络层）\" class=\"headerlink\" title=\"Network Layer（网络层）\"></a>Network Layer（网络层）</h1><h2 id=\"IP\"><a href=\"#IP\" class=\"headerlink\" title=\"IP\"></a>IP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wangyuxiang946/article/details/124538868\">IP协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/freee12/article/details/114416710\">IP协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_50964512/article/details/123687542\">IP协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40493277/article/details/90267862\">为什么网段不同不能直接通信</a></li>\n<li><a href=\"https://blog.csdn.net/tonglin12138/article/details/88714042\">同网段及跨网段主机间通信入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36570733/article/details/110387040\">同网段及跨网段主机间通信详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33754913/article/details/93424067\">IP绑定之0.0.0.0的作用</a></li>\n<li><a href=\"https://blog.csdn.net/junqiand/article/details/80567078\">IP设置之多个IP的作用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Address\"><a href=\"#Address\" class=\"headerlink\" title=\"Address\"></a>Address</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/whatday/article/details/105369412\">IP地址详解</a></li>\n<li><a href=\"https://blog.csdn.net/Anne033/article/details/107839894\">IP地址分类详解</a></li>\n<li><a href=\"https://blog.csdn.net/BHSZZY/article/details/105996016\">IP地址分类之最大网络数和主机数</a></li>\n<li><a href=\"https://blog.csdn.net/u010711495/article/details/118860113\">IP地址分类之私有地址入门</a></li>\n<li><a href=\"https://blog.csdn.net/Three__Curry/article/details/118678061\">IP地址分类之私有地址进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zdb292034/article/details/81194657\">IP地址分类之私有地址详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33805992/article/details/92620476\">IP地址之网络地址和广播地址的作用</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42333641/article/details/105158054\">IP地址之子网号不能为全0或全1</a></li>\n<li><a href=\"https://blog.csdn.net/feit2417/article/details/83152794\">IP地址之主机号全0和全1</a></li>\n<li><a href=\"https://blog.csdn.net/here962464/article/details/78940056\">已知ip地址如何算网络地址</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44864919/article/details/110926044\">已知ip地址如何算默认网关</a></li>\n<li><a href=\"https://blog.csdn.net/m0_56651882/article/details/119332989\">IPv4地址不够用的几种解决方案</a></li>\n<li><a href=\"https://blog.csdn.net/ledrsnet/article/details/116503519\">地址转换和端口映射详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Subnet\"><a href=\"#Subnet\" class=\"headerlink\" title=\"Subnet\"></a>Subnet</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LeeQiang8023/article/details/105896584\">IP地址和子网掩码详解</a></li>\n<li><a href=\"https://blog.csdn.net/LeeQiang8023/article/details/105896492\">IP地址和子网划分详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39414668/article/details/79594012\">IP地址和超网划分详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43999048/article/details/110368780\">IP地址、子网掩码和网关入门</a></li>\n<li><a href=\"https://blog.csdn.net/belongtocode/article/details/106453395\">IP地址、子网掩码和网关详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Gateway\"><a href=\"#Gateway\" class=\"headerlink\" title=\"Gateway\"></a>Gateway</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xuhao0258/article/details/120280138\">IP地址和默认网关入门</a></li>\n<li><a href=\"https://blog.csdn.net/wangdongm123/article/details/103999173\">IP地址和默认网关详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Route\"><a href=\"#Route\" class=\"headerlink\" title=\"Route\"></a>Route</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ZripenYe/article/details/117032978\">ROUTE协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_46254436/article/details/104839974\">ROUTE协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_51613313/article/details/109300224\">ROUTE协议详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Transport-Layer（传输层）\"><a href=\"#Transport-Layer（传输层）\" class=\"headerlink\" title=\"Transport Layer（传输层）\"></a>Transport Layer（传输层）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hansionz/article/details/86435127\">TCP和UDP详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43796685/article/details/104558965\">TCP和UDP区别</a></li>\n</ul>\n</blockquote>\n<p>TCP、UDP</p>\n<h2 id=\"TCP\"><a href=\"#TCP\" class=\"headerlink\" title=\"TCP\"></a>TCP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43145072/article/details/105565062\">TCP协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/sinat_36629696/article/details/80740678\">TCP协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/114527369\">TCP协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/sansipi/article/details/121459589\">TCP如何保证可靠传输的</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44024891/article/details/105786358\">TCP序列号详解</a></li>\n<li><a href=\"https://blog.csdn.net/zhangskd/article/details/11770647\">TCP数据校验详解</a></li>\n<li><a href=\"https://blog.csdn.net/rong_toa/article/details/108989875\">TCP超时重传详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44005483/article/details/117127099\">TCP流量控制详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41431406/article/details/97926927\">TCP拥塞控制详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37962600/article/details/79951780\">TCP滑动窗口详解</a></li>\n<li><a href=\"https://blog.csdn.net/small_engineer/article/details/124190620\">TCP连接队列详解</a></li>\n<li><a href=\"https://blog.csdn.net/a_tu_/article/details/80389878\">TCP连接重置详解</a></li>\n<li><a href=\"https://blog.csdn.net/ArtAndLife/article/details/114957693\">TCP的粘包和拆包详解</a></li>\n<li><a href=\"https://blog.csdn.net/Rengachan/article/details/113098431\">TCP之Nagle算法</a></li>\n<li><a href=\"https://blog.csdn.net/yuqingzhude/article/details/88974669\">TCP之延迟确认</a></li>\n<li><a href=\"https://blog.csdn.net/WEI_GW2012/article/details/123213084\">TCP之Socket选项</a></li>\n<li><a href=\"https://blog.csdn.net/str_lyc/article/details/109543525\">TCP之三次握手和四次挥手入门</a></li>\n<li><a href=\"https://blog.csdn.net/impact_factor/article/details/119394391\">TCP之三次握手和四次挥手进阶</a></li>\n<li><a href=\"https://blog.csdn.net/spade_Kwo/article/details/119464901\">TCP之三次握手和四次挥手详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_37841366/article/details/109271982\">TCP之TIME_WAIT和CLOSE_WAIT入门</a></li>\n<li><a href=\"https://blog.csdn.net/Firefly_zh/article/details/106526407\">TCP之TIME_WAIT和CLOSE_WAIT进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44718794/article/details/108649255\">TCP之TIME_WAIT和CLOSE_WAIT详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"UDP\"><a href=\"#UDP\" class=\"headerlink\" title=\"UDP\"></a>UDP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/aa1928992772/article/details/85240358\">UDP协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/alpha_xia/article/details/122036523\">UDP协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44241551/article/details/106048491\">UDP协议详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Session-Layer（会话层）\"><a href=\"#Session-Layer（会话层）\" class=\"headerlink\" title=\"Session Layer（会话层）\"></a>Session Layer（会话层）</h1><h1 id=\"Presentation-Layer（表示层）\"><a href=\"#Presentation-Layer（表示层）\" class=\"headerlink\" title=\"Presentation Layer（表示层）\"></a>Presentation Layer（表示层）</h1><h1 id=\"Application-Layer（应用层）\"><a href=\"#Application-Layer（应用层）\" class=\"headerlink\" title=\"Application Layer（应用层）\"></a>Application Layer（应用层）</h1><h2 id=\"DNS\"><a href=\"#DNS\" class=\"headerlink\" title=\"DNS\"></a>DNS</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baidu_37964071/article/details/80500825\">DNS入门</a></li>\n<li><a href=\"https://blog.csdn.net/z136370204/article/details/108346929\">DNS进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43914604/article/details/105583806\">DNS详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Operation\"><a href=\"#Operation\" class=\"headerlink\" title=\"Operation\"></a>Operation</h2><h3 id=\"network\"><a href=\"#network\" class=\"headerlink\" title=\"network\"></a>network</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shenyuanhaojie/article/details/119899419\">linux查看网络信息</a></li>\n<li><a href=\"https://blog.csdn.net/l_liangkk/article/details/114959914\">linux查看网络信息之ifconfig</a></li>\n<li><a href=\"https://blog.csdn.net/LL845876425/article/details/92801460\">linux查看网络信息之netstat</a></li>\n<li><a href=\"https://blog.csdn.net/iamlaosong/article/details/103591436\">windows查看网络信息</a></li>\n<li><a href=\"https://blog.csdn.net/cunjiu9486/article/details/109074353\">windows查看网络信息之ipconfig</a></li>\n<li><a href=\"https://blog.csdn.net/wb1046329430/article/details/115422340\">windows查看网络信息之netstat</a></li>\n</ul>\n</blockquote>\n<h3 id=\"route\"><a href=\"#route\" class=\"headerlink\" title=\"route\"></a>route</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kikajack/article/details/80457841\">linux查看路由信息</a></li>\n<li><a href=\"https://blog.csdn.net/bcbobo21cn/article/details/52548923\">windows查看路由信息</a></li>\n</ul>\n</blockquote>\n<h3 id=\"dns\"><a href=\"#dns\" class=\"headerlink\" title=\"dns\"></a>dns</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_55259539/article/details/114268743\">linux配置DNS</a></li>\n<li><a href=\"https://blog.csdn.net/sqlquan/article/details/99974553\">linux添加DNS</a></li>\n<li><a href=\"https://blog.csdn.net/u010599211/article/details/86572810\">linux查看DNS</a></li>\n<li><a href=\"https://blog.csdn.net/zhangpeterx/article/details/83895446\">linux清空DNS</a></li>\n<li><a href=\"https://blog.csdn.net/itnerd/article/details/106764904\">windows配置DNS</a></li>\n<li><a href=\"https://blog.csdn.net/helloxiaozhe/article/details/109366866\">windows添加DNS</a></li>\n<li><a href=\"https://blog.csdn.net/michaelwoshi/article/details/113831618\">windows查看DNS</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_53641036/article/details/126613194\">windows清空DNS</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Sniffing\"><a href=\"#Sniffing\" class=\"headerlink\" title=\"Sniffing\"></a>Sniffing</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42430824/article/details/110186907\">网络连通性测试入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39780260/article/details/110104388\">网络连通性测试详解</a></li>\n<li><a href=\"https://blog.csdn.net/m1585761297/article/details/80002722\">网络连通性测试之ping禁用后的测试</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Scanning\"><a href=\"#Scanning\" class=\"headerlink\" title=\"Scanning\"></a>Scanning</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/rendamy/article/details/103914324\">linux下如何查看本机所在局域网内所有可以访问的IP</a></li>\n<li><a href=\"https://blog.csdn.net/Running_free/article/details/107687196\">windows下如何查看本机所在局域网内所有可以访问的IP</a></li>\n</ul>\n</blockquote>\n","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"web","url":"/2017/09/01/tech/development/junior/dev-9-web/","content":"<h1 id=\"Html\"><a href=\"#Html\" class=\"headerlink\" title=\"Html\"></a>Html</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhongheng310/article/details/114052461\">如何区分HTML和HTML5</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45765949/article/details/117468101\">HTML、XHTML和HTML5的区别</a></li>\n<li><a href=\"https://blog.csdn.net/tianxintiandisheng/article/details/82424096\">HTML之DOCTYPE的作用是什么</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_54963682/article/details/115161278\">HTML之HTML5的DOCTYPE的是什么</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34342905/article/details/93059332\">HTML之HTML5和HTML的DOCTYPE的区别</a></li>\n</ul>\n</blockquote>\n<p>HTML、CSS、JS</p>\n<h2 id=\"Link\"><a href=\"#Link\" class=\"headerlink\" title=\"Link\"></a>Link</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43542745/article/details/114032685\">磁力链接详解</a></li>\n<li><a href=\"https://blog.csdn.net/EXIxiaozhou/article/details/128335958\">下载神器IDM详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Http\"><a href=\"#Http\" class=\"headerlink\" title=\"Http\"></a>Http</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/alokka/article/details/115981135\">HTTP协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/u014294681/article/details/86585326\">HTTP协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Dontla/article/details/121189955\">HTTP协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/glpghz/article/details/106063833\">HTTP协议精进</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Url\"><a href=\"#Url\" class=\"headerlink\" title=\"Url\"></a>Url</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_46331050/article/details/118071887\">URI、URL和URN入门</a></li>\n<li><a href=\"https://blog.csdn.net/K_sheep/article/details/126964806\">URI、URL和URN详解</a></li>\n<li><a href=\"https://blog.csdn.net/luluoluoa/article/details/115616220\">url入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46309087/article/details/119839043\">url进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45525272/article/details/109586021\">url详解</a></li>\n<li><a href=\"https://blog.csdn.net/github_38687585/article/details/80943067\">url之域名详解</a></li>\n<li><a href=\"https://blog.csdn.net/qiuchangyong/article/details/98264304\">url中的host和hostname的区别</a></li>\n<li><a href=\"https://blog.csdn.net/shenxiaomo1688/article/details/118192929\">url后面追加随机数的意义</a></li>\n<li><a href=\"https://blog.csdn.net/s646575997/article/details/51336943\">url中的连续的三个斜杠是什么意思</a></li>\n<li><a href=\"https://blog.csdn.net/bruce_6/article/details/82219522\">url中的末尾的斜杠的作用是什么</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Location\"><a href=\"#Location\" class=\"headerlink\" title=\"Location\"></a>Location</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Mr_EvanChen/article/details/64904814\">url之绝对地址和相对地址入门</a></li>\n<li><a href=\"https://blog.csdn.net/Cml_l/article/details/115653416\">url之绝对地址和相对地址进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Java_53/article/details/105548343\">url之绝对地址和相对地址详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_41267342/article/details/78750289\">url之路径的多种写法入门</a></li>\n<li><a href=\"https://blog.csdn.net/guitarist0505/article/details/102465107\">url之路径的多种写法详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Encoding\"><a href=\"#Encoding\" class=\"headerlink\" title=\"Encoding\"></a>Encoding</h3><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/jerrysion/p/5522673.html\">url编码之为什么需要对url进行编码</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46309087/article/details/119839122\">url编码之encodeURI和encodeURIComponent的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/androidyue/article/details/106545324\">url编码之encodeURI和encodeURIComponent的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/u013735511/article/details/78573865\">url中的保留和不安全字符</a></li>\n<li><a href=\"https://blog.csdn.net/hemeinvyiqiluoben/article/details/48961233\">url中的保留字符的作用</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Question\"><a href=\"#Question\" class=\"headerlink\" title=\"Question\"></a>Question</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingchengtx/article/details/106000231\">输入URL到显示页面的全过程入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiao_0509/article/details/82491299\">输入URL到显示页面的全过程进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Newbie___/article/details/107212575\">输入URL到显示页面的全过程详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Param\"><a href=\"#Param\" class=\"headerlink\" title=\"Param\"></a>Param</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/mingyuli/article/details/116265229\">HTTP Param入门</a></li>\n<li><a href=\"https://blog.csdn.net/AN0692/article/details/109675466\">HTTP Param进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42553082/article/details/84072301\">HTTP Param详解</a></li>\n<li><a href=\"https://blog.csdn.net/xujie3/article/details/52954940\">HTTP Param之json</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43845090/article/details/109691867\">HTTP Param之qs</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Method\"><a href=\"#Method\" class=\"headerlink\" title=\"Method\"></a>Method</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/beikepang/article/details/81351138\">HTTP Method入门</a></li>\n<li><a href=\"https://blog.csdn.net/sphinx1122/article/details/104608388\">HTTP Method进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wumingxiaoyao/article/details/115593045\">HTTP Method详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Header\"><a href=\"#Header\" class=\"headerlink\" title=\"Header\"></a>Header</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45598506/article/details/112917752\">HTTP Header入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37730732/article/details/82263609\">HTTP Header进阶</a></li>\n<li><a href=\"https://blog.csdn.net/W_jin/article/details/116602574\">HTTP Header详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_52358470/article/details/122111613\">HTTP Header之Host详解</a></li>\n<li><a href=\"https://blog.csdn.net/fsjwin/article/details/114444826\">HTTP Header之Origin详解</a></li>\n<li><a href=\"https://www.cnblogs.com/Renyi-Fan/p/12570726.html\">HTTP Header之Referer详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34556414/article/details/106634895\">HTTP Header之X-Real-IP和X-Forwarded-For详解</a></li>\n<li><a href=\"https://blog.csdn.net/ckwang6/article/details/88710049\">HTTP Header之自定义Header</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Status\"><a href=\"#Status\" class=\"headerlink\" title=\"Status\"></a>Status</h2><blockquote>\n<ul>\n<li><a href=\"https://code-start.blog.csdn.net/article/details/108986090\">HTTP Status入门</a></li>\n<li><a href=\"https://blog.csdn.net/glisten_/article/details/114339932\">HTTP Status进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42402086/article/details/107491536\">HTTP Status详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>1XX：继续请求</li>\n<li>2XX：请求成功</li>\n<li>3XX：重新请求</li>\n<li>4XX：客户端请求错误</li>\n<li>5XX：服务端处理错误</li>\n</ul>\n<h3 id=\"301和302的区别\"><a href=\"#301和302的区别\" class=\"headerlink\" title=\"301和302的区别\"></a>301和302的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lunahaijiao/article/details/114421575\">HTTP Status之301和302的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>301：永久重定向（Moved Permanently）</li>\n<li>302：临时重定向（Move Temporarily）</li>\n</ul>\n<h3 id=\"401和403的区别\"><a href=\"#401和403的区别\" class=\"headerlink\" title=\"401和403的区别\"></a>401和403的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Tom098/article/details/122919637\">HTTP Status之401和403的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>401：未认证（Unauthorized）</li>\n<li>403：未授权（Forbidden）</li>\n</ul>\n<h3 id=\"502和504的区别\"><a href=\"#502和504的区别\" class=\"headerlink\" title=\"502和504的区别\"></a>502和504的区别</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tiancityycf/article/details/106102808\">HTTP Status之502和504的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>502：服务挂掉了（Bad Gateway）</li>\n<li>504：服务超时了（Gateway Timeout）</li>\n</ul>\n<h2 id=\"Cookie\"><a href=\"#Cookie\" class=\"headerlink\" title=\"Cookie\"></a>Cookie</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40276626/article/details/120384964\">HTTP Cookie入门</a></li>\n<li><a href=\"https://blog.csdn.net/JokerLJG/article/details/121487927\">HTTP Cookie进阶</a></li>\n<li><a href=\"https://blog.csdn.net/zhizhengguan/article/details/119641224\">HTTP Cookie详解</a></li>\n<li><a href=\"https://blog.csdn.net/tuzi007a/article/details/108526562\">HTTP Cookie之保存用户信息</a></li>\n<li><a href=\"https://blog.csdn.net/qq_69555789/article/details/126858157\">HTTP Cookie之获取用户信息</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Session\"><a href=\"#Session\" class=\"headerlink\" title=\"Session\"></a>Session</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_51545690/article/details/123384986\">HTTP Session入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_55748719/article/details/120138518\">HTTP Session进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hcz666/article/details/108916119\">HTTP Session详解</a></li>\n<li><a href=\"https://blog.csdn.net/Sunshineoe/article/details/109288143\">HTTP Session原理</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39862847/article/details/111005862\">HTTP Session共享入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40606397/article/details/106900754\">HTTP Session共享进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35620501/article/details/95047642\">HTTP Session共享详解</a></li>\n<li><a href=\"https://blog.csdn.net/chen13333336677/article/details/100939030\">HTTP Session和Cookie的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qichangjian/article/details/88023494\">HTTP Session和Cookie的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45393094/article/details/104747360\">HTTP Session和Cookie的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46406553/article/details/109193922\">HTTP Session和Token的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_1290259791/article/details/81193914\">HTTP Session和Token的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44384728/article/details/127387791\">HTTP Session和Token的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/hantanxin/article/details/104283298\">HTTP Session和浏览器窗口的关系入门</a></li>\n<li><a href=\"https://bbs.csdn.net/topics/380239389\">HTTP Session和浏览器窗口的关系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/sl0007/article/details/8105801\">HTTP Session和浏览器窗口的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/iteye_12186/article/details/82603584\">HTTP Session和浏览器页面的关系入门</a></li>\n<li><a href=\"https://bbs.csdn.net/topics/310055696\">HTTP Session和浏览器页面的关系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010723709/article/details/41241789\">HTTP Session和浏览器页面的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38025219/article/details/86569560\">HTTP Session之浏览器如何新建会话</a></li>\n<li><a href=\"https://www.cnblogs.com/heyboom/p/11090616.html\">HTTP Session之浏览器关闭后Session就销毁了吗</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Storage\"><a href=\"#Storage\" class=\"headerlink\" title=\"Storage\"></a>Storage</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40738239/article/details/123702867\">HTTP Storage入门</a></li>\n<li><a href=\"https://blog.csdn.net/songjuntao8/article/details/114240807\">HTTP Storage进阶</a></li>\n<li><a href=\"https://blog.csdn.net/nanchen_j/article/details/120723864\">HTTP Storage详解</a></li>\n<li><a href=\"https://blog.csdn.net/first_shun/article/details/115747681\">HTTP Storage和Cookie的区别入门</a></li>\n<li><a href=\"https://www.cnblogs.com/minigrasshopper/p/8064367.html\">HTTP Storage和Cookie的区别详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47450807/article/details/123673116\">HTTP LocalStorage和SessionStorage的区别</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Cache\"><a href=\"#Cache\" class=\"headerlink\" title=\"Cache\"></a>Cache</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45316326/article/details/115751692\">HTTP Cache入门</a></li>\n<li><a href=\"https://blog.csdn.net/moxunjinmu/article/details/122916160\">HTTP Cache进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41648631/article/details/106895782\">HTTP Cache详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"KeepAlive\"><a href=\"#KeepAlive\" class=\"headerlink\" title=\"KeepAlive\"></a>KeepAlive</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_40230026/article/details/110919330\">Http保活（KeepAlive）机制</a></li>\n<li><a href=\"https://blog.csdn.net/chrisnotfound/article/details/80111559\">TCP保活（KeepAlive）机制</a></li>\n<li><a href=\"https://blog.csdn.net/ThinPikachu/article/details/128177194\">Http和TCP的KeepAlive对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/tianshouzhi/article/details/103922842\">Http和TCP的KeepAlive对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/shy871/article/details/121509606\">Http和TCP的KeepAlive对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39950838/article/details/102583855\">Http长连接入门</a></li>\n<li><a href=\"https://blog.csdn.net/hyxhbj1/article/details/124904092\">Http长连接进阶</a></li>\n<li><a href=\"https://blog.csdn.net/yeahPeng11/article/details/122419705\">Http长连接详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34024034/article/details/92388141\">Http长连接如何区分多个请求</a></li>\n<li><a href=\"https://blog.csdn.net/hayre/article/details/109911886\">Http长连接如何判断一个请求的完成</a></li>\n<li><a href=\"https://blog.csdn.net/lixinyi0622/article/details/87275984\">数据实时更新之轮询和长连接入门</a></li>\n<li><a href=\"https://www.cnblogs.com/huchong/p/8595644.html\">数据实时更新之轮询和长连接详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"MIME\"><a href=\"#MIME\" class=\"headerlink\" title=\"MIME\"></a>MIME</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_41800366/article/details/105835503\">MIME入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34227896/article/details/80326121\">MIME进阶</a></li>\n<li><a href=\"https://blog.csdn.net/dodod2012/article/details/88868930\">MIME详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Text\"><a href=\"#Text\" class=\"headerlink\" title=\"Text\"></a>Text</h2><h2 id=\"Application\"><a href=\"#Application\" class=\"headerlink\" title=\"Application\"></a>Application</h2><h2 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/MicroAnswer/article/details/102653959\">文件上传实现详解</a></li>\n<li><a href=\"https://blog.csdn.net/MicroAnswer/article/details/102545911\">文件下载实现详解</a></li>\n<li><a href=\"https://blog.csdn.net/wzy18210825916/article/details/81226511\">文件上传之java实现</a></li>\n<li><a href=\"https://blog.csdn.net/Boy_Martin/article/details/126058565\">文件下载之java实现</a></li>\n<li><a href=\"https://blog.csdn.net/a1191835397/article/details/90951345\">文件上传之spring实现</a></li>\n<li><a href=\"https://blog.csdn.net/user2025/article/details/107300831\">文件下载之spring实现</a></li>\n<li><a href=\"https://blog.csdn.net/chudelong1/article/details/117119335\">文件下载之Content-disposition</a></li>\n<li><a href=\"https://blog.csdn.net/xy3233/article/details/119729919\">文件存储方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/MrLee12/article/details/119532795\">文件存储之数据库</a></li>\n<li><a href=\"https://blog.csdn.net/CodeBlues/article/details/121574468\">对象存储服务FastDFS入门</a></li>\n<li><a href=\"https://blog.csdn.net/CuiHaoNB/article/details/121807871\">对象存储服务FastDFS进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38446413/article/details/106299429\">对象存储服务FastDFS详解</a></li>\n<li><a href=\"https://blog.csdn.net/mrxutada/article/details/120450811\">对象存储服务Minio入门</a></li>\n<li><a href=\"https://blog.csdn.net/easylife206/article/details/121782071\">对象存储服务Minio进阶</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/120855464\">对象存储服务Minio详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37351027/article/details/124454345\">对象存储服务之MinIO与FastDFS对比</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Image\"><a href=\"#Image\" class=\"headerlink\" title=\"Image\"></a>Image</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tscaxx/article/details/105502297\">图片格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_51233386/article/details/115286981\">图片格式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/woniuye/article/details/89218461\">图片格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45277161/article/details/111617529\">图片存储之数据库</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34975710/article/details/104649977\">图片服务器之Zimg详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46724562/article/details/116639768\">图片之base64编码详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Color\"><a href=\"#Color\" class=\"headerlink\" title=\"Color\"></a>Color</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43764974/article/details/125665202\">颜色模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_26654881/article/details/52442887\">颜色模式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/chanrancui0987/article/details/100967267\">颜色模式详解</a></li>\n<li><a href=\"https://blog.csdn.net/lt_1111/article/details/108274666\">CSS之颜色设置</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44296929/article/details/102934797\">CSS之RGB、RGBA</a></li>\n<li><a href=\"https://blog.csdn.net/VhWfR2u02Q/article/details/93803893\">CSS之RGB、HEX、HSL</a></li>\n<li><a href=\"https://blog.csdn.net/qinshenxue/article/details/17750777\">CSS之alpha通道与opacity属性的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Size\"><a href=\"#Size\" class=\"headerlink\" title=\"Size\"></a>Size</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/herr_kun/article/details/103276990\">分辨率和清晰度的关系入门</a></li>\n<li><a href=\"https://blog.csdn.net/yh13572438258/article/details/122243801\">分辨率和清晰度的关系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kl28978113/article/details/79143397\">分辨率和清晰度的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/hfy1237/article/details/129344498\">图像分辨率和像素的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/Foverve1/article/details/89380866\">图像分辨率和尺寸的关系入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36387683/article/details/99433315\">图像分辨率和尺寸的关系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46500149/article/details/127937548\">图像分辨率和尺寸的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/tugouxp/article/details/121428568\">图像调整之调整尺寸</a></li>\n<li><a href=\"https://blog.csdn.net/thlzjfefe/article/details/124898574\">屏幕分辨率和像素的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39546339/article/details/81987316\">屏幕分辨率和尺寸的关系入门</a></li>\n<li><a href=\"https://blog.csdn.net/ly1390811049/article/details/121461261\">屏幕分辨率和尺寸的关系进阶</a></li>\n<li><a href=\"https://blog.csdn.net/trusause/article/details/107353373\">屏幕分辨率和尺寸的关系详解</a></li>\n<li><a href=\"https://blog.csdn.net/datarecover/article/details/130361699\">屏幕调整之调整分辨率</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_46318413/article/details/122119073\">CSS之px和em详解</a></li>\n<li><a href=\"https://blog.csdn.net/cpfei_927/article/details/113997854\">Android之px和dp详解</a></li>\n</ul>\n</blockquote>\n<p>物理尺寸：物理长度，单位英寸（1英寸&#x3D;2.54厘米）或厘米<br>逻辑尺寸：逻辑长度，单位像素，不同的制造工艺会导致1像素对应不同的物理长度<br>点密度：DPI（Dots Per Inch：每英尺点数），用于印刷行业<br>像素密度：PPI（Pixels Per Inch：每英尺像素数），用于电子设备，混用的时候又等同于DPI<br>分辨率：描述手机时指屏幕的长和宽（单位像素），描述图像时等同于PPI（单位像素&#x2F;英寸）<br>尺寸：描述手机时指屏幕斜线的长度（单位英寸），描述图像时指图像的长和宽（单位像素）<br>大小：描述手机时指屏幕斜线的长度（单位英寸），描述图像时指像素的总个数（单位字节）<br>设备无关像素：DIP（Density independent pixels），能根据不同的设备映射到不同大小的物理像素上</p>\n<p>逻辑尺寸（单位像素） &#x3D; 物理尺寸（单位英寸） * 像素密度（单位像素&#x2F;英寸）</p>\n<p>对于手机来说，物理尺寸一般是固定的，逻辑尺寸和像素密度是可调（通过手机系统的设备无关像素机制实现）的<br>对于图像来说，像素密度一般是固定的，逻辑尺寸和物理尺寸是可调（放大和缩小时通过插入和删除像素实现）的</p>\n<h3 id=\"Depth\"><a href=\"#Depth\" class=\"headerlink\" title=\"Depth\"></a>Depth</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dontla/article/details/103203173\">图像深度入门</a></li>\n<li><a href=\"https://blog.csdn.net/thanklife/article/details/25780421\">图像深度进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41498261/article/details/104898045\">图像深度详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Video\"><a href=\"#Video\" class=\"headerlink\" title=\"Video\"></a>Video</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yezi0u0/article/details/115118064\">视频格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/fantian_/article/details/106560816\">视频格式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weekend_y45/article/details/125235203\">视频格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_44761063/article/details/104021376\">视频格式后缀</a></li>\n<li><a href=\"https://blog.csdn.net/ffffffff8/article/details/118671761\">视频格式分类</a></li>\n<li><a href=\"https://blog.csdn.net/hi_zhengjian/article/details/122041721\">视频参数详解</a></li>\n<li><a href=\"https://blog.csdn.net/weijunqiang1224/article/details/102752547\">视频服务器之Red5详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37655695/article/details/91489452\">视频服务器之EasyDarwin详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Bitrate\"><a href=\"#Bitrate\" class=\"headerlink\" title=\"Bitrate\"></a>Bitrate</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ffffffff8/article/details/84950014\">视频清晰度详解</a></li>\n<li><a href=\"https://blog.csdn.net/wuyofeng/article/details/106633225\">常用的分辨率和码率入门</a></li>\n<li><a href=\"https://blog.csdn.net/ffffffff8/article/details/120511450\">常用的分辨率和码率详解</a></li>\n<li><a href=\"https://blog.csdn.net/ma950924/article/details/80017349\">分辨率和码率的关系</a></li>\n<li><a href=\"https://blog.csdn.net/pc9319/article/details/79621352\">分辨率和码率、帧率的关系</a></li>\n</ul>\n</blockquote>\n<p>Resolution：分辨率，影响画面清晰度<br>Bitrate：码率，影响数据大小（会受网络带宽限制）<br>FPS：帧率，影响画面连贯性</p>\n<h2 id=\"Audio\"><a href=\"#Audio\" class=\"headerlink\" title=\"Audio\"></a>Audio</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wuyahui0124505/article/details/104523588\">音频格式入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34500270/article/details/82996502\">音频格式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/wyqwilliam/article/details/106595882\">音频格式详解</a></li>\n<li><a href=\"https://blog.csdn.net/wbsu2004/article/details/121027463\">音频服务器之Navidrome详解</a></li>\n<li><a href=\"https://blog.csdn.net/wyounger/article/details/105642133\">音频服务器之Funkwhale详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Codec\"><a href=\"#Codec\" class=\"headerlink\" title=\"Codec\"></a>Codec</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/swt369/article/details/77847896\">网页各种编码详解</a></li>\n<li><a href=\"https://blog.csdn.net/bianchengxiaosheng/article/details/120488537\">网页压缩编码详解</a></li>\n<li><a href=\"https://blog.csdn.net/liuxiao723846/article/details/107433395\">网页传输编码详解</a></li>\n<li><a href=\"https://blog.csdn.net/J080624/article/details/78569167\">网页内容编码详解</a></li>\n<li><a href=\"https://blog.csdn.net/DCFANS/article/details/90199487\">网页内容之查看编码</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Media\"><a href=\"#Media\" class=\"headerlink\" title=\"Media\"></a>Media</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ljy_1024/article/details/110082128\">直播和点播入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_60259116/article/details/125018105\">直播和点播进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Black_3717/article/details/104534644\">直播和点播详解</a></li>\n<li><a href=\"https://blog.csdn.net/MillerKevin/article/details/80100839\">直播和点播协议</a></li>\n<li><a href=\"https://blog.csdn.net/zgpeace/article/details/108552358\">直播和点播架构</a></li>\n</ul>\n</blockquote>\n<h2 id=\"OTT\"><a href=\"#OTT\" class=\"headerlink\" title=\"OTT\"></a>OTT</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45264425/article/details/130141695\">OTT与IPTV的区别</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30345055/article/details/95694275\">OTT详解</a></li>\n<li><a href=\"https://blog.csdn.net/datamining2005/article/details/81629019\">OTT厂商</a></li>\n<li><a href=\"https://blog.csdn.net/mazhitong1020/article/details/76209226\">IPTV详解</a></li>\n<li><a href=\"https://blog.csdn.net/m0_46278037/article/details/118919271\">IPTV厂商</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Stream\"><a href=\"#Stream\" class=\"headerlink\" title=\"Stream\"></a>Stream</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/feeltouch/article/details/82957377\">流媒体传输协议入门</a></li>\n<li><a href=\"https://blog.csdn.net/neusoft2016/article/details/128989752\">流媒体传输协议进阶</a></li>\n<li><a href=\"https://blog.csdn.net/Ciellee/article/details/108334021\">流媒体传输协议详解</a></li>\n<li><a href=\"https://blog.csdn.net/alwaysrun/article/details/89076382\">RTP和SRTP的区别</a></li>\n<li><a href=\"https://blog.csdn.net/Beyond_cn/article/details/46389537\">RTP和RTSP的区别</a></li>\n<li><a href=\"https://blog.csdn.net/2201_76108770/article/details/128961331\">RTMP和RTSP的区别</a></li>\n</ul>\n</blockquote>\n<p>Media Stream：流媒体</p>\n<h3 id=\"Protocol\"><a href=\"#Protocol\" class=\"headerlink\" title=\"Protocol\"></a>Protocol</h3><h4 id=\"RTMP\"><a href=\"#RTMP\" class=\"headerlink\" title=\"RTMP\"></a>RTMP</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/BigHorse110/article/details/119538683\">RTMP服务器搭建</a></li>\n<li><a href=\"https://blog.csdn.net/u014452812/article/details/93206943\">web页面中直接播放rtmp视频流入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013654125/article/details/78813501\">web页面中直接播放rtmp视频流详解</a></li>\n</ul>\n</blockquote>\n<h4 id=\"RTSP\"><a href=\"#RTSP\" class=\"headerlink\" title=\"RTSP\"></a>RTSP</h4><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/EthanCo/article/details/125321957\">RTSP服务器搭建</a></li>\n<li><a href=\"https://neveryu.blog.csdn.net/article/details/111428970\">web页面中直接播放rtsp视频流入门</a></li>\n<li><a href=\"https://blog.csdn.net/csdn_yudong/article/details/124124137\">web页面中直接播放rtsp视频流详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Browser\"><a href=\"#Browser\" class=\"headerlink\" title=\"Browser\"></a>Browser</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45835850/article/details/116190008\">Vue播放视频流的解决方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44989721/article/details/122177556\">Vue播放视频流的解决方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_52050769/article/details/120057519\">Vue播放视频流之使用video.js播放视频文件</a></li>\n<li><a href=\"https://blog.csdn.net/caseywei/article/details/109065752\">Vue播放视频流之使用flv.js播放flv文件</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45039579/article/details/123922904\">Vue播放视频流之RTMP转HTTP-FLV</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47914635/article/details/129691433\">Vue播放视频流之RTSP转HTTP-FLV</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37839403/article/details/108976384\">Vue播放视频流之RTMP转HLS</a></li>\n<li><a href=\"https://blog.csdn.net/lixiang987654321/article/details/122255049\">Vue播放视频流之RTSP转HLS</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Software\"><a href=\"#Software\" class=\"headerlink\" title=\"Software\"></a>Software</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_19309473/article/details/130208753\">OBS视频录制软件入门</a></li>\n<li><a href=\"https://blog.csdn.net/bacawa/article/details/128450429\">OBS视频录制软件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47261864/article/details/124659974\">OBS视频录制软件详解</a></li>\n<li><a href=\"https://blog.csdn.net/fengbingchun/article/details/44782279\">VLC视频播放软件入门</a></li>\n<li><a href=\"https://blog.csdn.net/zyhse/article/details/113771661\">VLC视频播放软件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_60259116/article/details/126351373\">VLC视频播放软件详解</a></li>\n<li><a href=\"https://blog.csdn.net/xueyukun1/article/details/118417383\">ffmpeg视频处理软件入门</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37605642/article/details/121566820\">ffmpeg视频处理软件进阶</a></li>\n<li><a href=\"https://blog.csdn.net/davidullua/article/details/120562737\">ffmpeg视频处理软件详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Player\"><a href=\"#Player\" class=\"headerlink\" title=\"Player\"></a>Player</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhiboqingyun/article/details/125196855\">PotPlayer详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"WebRTC\"><a href=\"#WebRTC\" class=\"headerlink\" title=\"WebRTC\"></a>WebRTC</h1><blockquote>\n<ul>\n<li><a href=\"https://webrtc.org.cn/\">WebRTC文档</a></li>\n<li><a href=\"https://blog.csdn.net/l569590478/article/details/130164769\">WebRTC入门</a></li>\n<li><a href=\"https://blog.csdn.net/l569590478/article/details/130164775\">WebRTC进阶</a></li>\n<li><a href=\"https://blog.csdn.net/kyl282889543/article/details/98784314\">WebRTC详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_27788177/article/details/119084106\">WebRTC精进</a></li>\n<li><a href=\"https://blog.csdn.net/weekend_y45/article/details/124912802\">WebRTC示例</a></li>\n</ul>\n</blockquote>\n<h1 id=\"WebGIS\"><a href=\"#WebGIS\" class=\"headerlink\" title=\"WebGIS\"></a>WebGIS</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gis_witch/article/details/123638020\">WebGIS详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"WebGL\"><a href=\"#WebGL\" class=\"headerlink\" title=\"WebGL\"></a>WebGL</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/terrychinaz/article/details/113639336\">WebGL详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1><h2 id=\"Crawl\"><a href=\"#Crawl\" class=\"headerlink\" title=\"Crawl\"></a>Crawl</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/miss_ok/article/details/107610742\">python爬虫之中文乱码入门</a></li>\n<li><a href=\"https://blog.csdn.net/Enexj/article/details/110875674\">python爬虫之中文乱码详解</a></li>\n</ul>\n</blockquote>\n<p>robots.txt<br>Crawl：抓取<br>Crawler：爬虫<br>Spider：蜘蛛<br>Scrapy：python爬虫框架<br>BeautifulSoup：python网页解析<br>Selenium：python自动化测试</p>\n","categories":["+ skill + dev + junior"],"tags":["+ dev"]},{"title":"library","url":"/2017/09/01/tech/development/senior/dev-1-library/","content":"<h1 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h1><h2 id=\"File\"><a href=\"#File\" class=\"headerlink\" title=\"File\"></a>File</h2><h3 id=\"Upload\"><a href=\"#Upload\" class=\"headerlink\" title=\"Upload\"></a>Upload</h3><h3 id=\"Preview\"><a href=\"#Preview\" class=\"headerlink\" title=\"Preview\"></a>Preview</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33697094/article/details/126076565\">kkFileView</a></li>\n</ul>\n</blockquote>\n<h2 id=\"ES\"><a href=\"#ES\" class=\"headerlink\" title=\"ES\"></a>ES</h2><blockquote>\n<ul>\n<li><a href=\"https://www.easy-es.cn/\">easy-es</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Captcha\"><a href=\"#Captcha\" class=\"headerlink\" title=\"Captcha\"></a>Captcha</h2><blockquote>\n<ul>\n<li><a href=\"https://gitee.com/ele-admin/EasyCaptcha\">EasyCaptcha</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Auth\"><a href=\"#Auth\" class=\"headerlink\" title=\"Auth\"></a>Auth</h2><blockquote>\n<ul>\n<li><a href=\"https://www.justauth.cn/\">JustAuth</a></li>\n<li><a href=\"https://sa-token.cc/index.html\">sa-token</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Pay\"><a href=\"#Pay\" class=\"headerlink\" title=\"Pay\"></a>Pay</h2><blockquote>\n<ul>\n<li><a href=\"https://gitee.com/jeequan/jeepay\">jeepay</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Trans\"><a href=\"#Trans\" class=\"headerlink\" title=\"Trans\"></a>Trans</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/shuaizai88/article/details/105250088\">easy-trans</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Wx\"><a href=\"#Wx\" class=\"headerlink\" title=\"Wx\"></a>Wx</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_45070175/article/details/118532572\">WxJava</a></li>\n</ul>\n</blockquote>\n<h1 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h1><h1 id=\"go\"><a href=\"#go\" class=\"headerlink\" title=\"go\"></a>go</h1><h1 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h1><h1 id=\"android\"><a href=\"#android\" class=\"headerlink\" title=\"android\"></a>android</h1>","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"function","url":"/2017/09/01/tech/development/senior/dev-2-function/","content":"<h1 id=\"编号\"><a href=\"#编号\" class=\"headerlink\" title=\"编号\"></a>编号</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/cl617287/article/details/117400406\">使用时间戳生成不重复编号入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38567039/article/details/124178696\">使用时间戳生成不重复编号详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"校验\"><a href=\"#校验\" class=\"headerlink\" title=\"校验\"></a>校验</h1><h2 id=\"验证码\"><a href=\"#验证码\" class=\"headerlink\" title=\"验证码\"></a>验证码</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lvxinchun/article/details/112155117\">数字验证码生成方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/xueyijin/article/details/122551547\">数字验证码生成方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weitao_666/article/details/91969138\">数字验证码生成方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37660876/article/details/79845388\">图形验证码生成方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_62982856/article/details/128796265\">图形验证码生成方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41946543/article/details/103709173\">图形验证码生成方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44845186/article/details/108075346\">验证码为什么是4位和6位</a></li>\n<li><a href=\"https://blog.csdn.net/zhuqiuhui/article/details/123172820\">验证码功能实现流程</a></li>\n<li><a href=\"https://blog.csdn.net/qq_38278799/article/details/82930012\">验证码的作用</a></li>\n</ul>\n</blockquote>\n<h2 id=\"取货码\"><a href=\"#取货码\" class=\"headerlink\" title=\"取货码\"></a>取货码</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/vivo_tech/article/details/126662751\">取货码生成方案详解</a></li>\n<li><a href=\"https://www.pmcaff.com/discuss/3229214201497664?newwindow=1\">取货时手机号后4位重复怎么办</a></li>\n</ul>\n</blockquote>\n<h1 id=\"认证\"><a href=\"#认证\" class=\"headerlink\" title=\"认证\"></a>认证</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zbw125/article/details/114770697\">第三方开源认证框架</a></li>\n</ul>\n</blockquote>\n<h1 id=\"授权\"><a href=\"#授权\" class=\"headerlink\" title=\"授权\"></a>授权</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_34364135/article/details/92613490\">第三方开源授权框架</a></li>\n</ul>\n</blockquote>\n<h1 id=\"支付\"><a href=\"#支付\" class=\"headerlink\" title=\"支付\"></a>支付</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_34730511/article/details/117257044\">第三方开源支付系统</a></li>\n</ul>\n</blockquote>\n<h1 id=\"工作流\"><a href=\"#工作流\" class=\"headerlink\" title=\"工作流\"></a>工作流</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_37583655/article/details/121335771\">工作流引擎Activiti详解</a></li>\n<li><a href=\"https://blog.csdn.net/shi_hong_fei_hei/article/details/127957444\">工作流引擎Flowable详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"状态机\"><a href=\"#状态机\" class=\"headerlink\" title=\"状态机\"></a>状态机</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jack_wang001/article/details/106322800\">状态机StateMachine入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45443879/article/details/123992480\">状态机StateMachine详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"IP地理\"><a href=\"#IP地理\" class=\"headerlink\" title=\"IP地理\"></a>IP地理</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hongyuancao/article/details/84963526\">ip转地区接口大全</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42272869/article/details/124453360\">ip转地区之ip2region</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/121247674\">ip转地区之GeoIP</a></li>\n</ul>\n</blockquote>\n","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"application","url":"/2017/09/01/tech/development/senior/dev-3-application/","content":"<h1 id=\"管理\"><a href=\"#管理\" class=\"headerlink\" title=\"管理\"></a>管理</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kimboyang/article/details/114961838\">第三方开源后台管理系统入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45697500/article/details/122319003\">第三方开源后台管理系统详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41209886/article/details/109245487\">第三方开源后台管理系统之AdminLTE</a></li>\n<li><a href=\"https://blog.csdn.net/zhiwenganyong/article/details/121442458\">第三方开源后台管理系统之RuoYi</a></li>\n<li><a href=\"https://blog.csdn.net/lili2922/article/details/109336801\">第三方开源后台管理系统之wetech-admin</a></li>\n</ul>\n</blockquote>\n<h2 id=\"SAP\"><a href=\"#SAP\" class=\"headerlink\" title=\"SAP\"></a>SAP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43718742/article/details/121796755\">SAP与ERP的区别</a></li>\n<li><a href=\"https://blog.csdn.net/sophicchen/article/details/109037799\">CRM和ERP的区别</a></li>\n</ul>\n</blockquote>\n<h1 id=\"大屏\"><a href=\"#大屏\" class=\"headerlink\" title=\"大屏\"></a>大屏</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jcmj123456/article/details/122219874\">大屏可视化开发入门</a></li>\n<li><a href=\"https://blog.csdn.net/Sophie_U/article/details/109582687\">大屏可视化开发进阶</a></li>\n<li><a href=\"https://blog.csdn.net/xiaohu12685/article/details/124621702\">大屏可视化开发详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"交易\"><a href=\"#交易\" class=\"headerlink\" title=\"交易\"></a>交易</h1><h2 id=\"订单号\"><a href=\"#订单号\" class=\"headerlink\" title=\"订单号\"></a>订单号</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/XuDream/article/details/121854229\">使用时间戳生成订单号入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44641729/article/details/103794242\">使用时间戳生成订单号详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"订单状态\"><a href=\"#订单状态\" class=\"headerlink\" title=\"订单状态\"></a>订单状态</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42980713/article/details/86092255\">订单状态入门</a></li>\n<li><a href=\"https://blog.csdn.net/liyanqiang19/article/details/112382232\">订单状态详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"订单流水\"><a href=\"#订单流水\" class=\"headerlink\" title=\"订单流水\"></a>订单流水</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/devotedwife/article/details/128117694\">用户账户资金表设计</a></li>\n<li><a href=\"https://blog.csdn.net/simplexiaobo/article/details/116236115\">用户账单流水表设计</a></li>\n</ul>\n</blockquote>\n<h1 id=\"电商\"><a href=\"#电商\" class=\"headerlink\" title=\"电商\"></a>电商</h1><h2 id=\"库存\"><a href=\"#库存\" class=\"headerlink\" title=\"库存\"></a>库存</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yishihuakai/article/details/104581576\">库存扣减之超卖问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/bookssea/article/details/123217374\">库存扣减之超卖问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/120521674\">库存扣减之超卖问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/user_san/article/details/109586350\">库存扣减之高并发问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/wx_it/article/details/116436542\">库存扣减之高并发问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u010391342/article/details/84372342\">库存扣减之高并发问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/xmtblog/article/details/107398880\">库存扣减之使用悲观锁解决并发问题</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_47067712/article/details/107513909\">库存扣减之使用悲观锁解决并发问题</a></li>\n<li><a href=\"https://blog.csdn.net/xmtblog/article/details/107373525\">库存扣减之使用乐观锁解决并发问题</a></li>\n<li><a href=\"https://blog.csdn.net/cmm0401/article/details/115854879\">库存扣减之使用乐观锁解决并发问题</a></li>\n</ul>\n</blockquote>\n<p>并发扣库存安全解决方案</p>\n<ul>\n<li>悲观锁：mysql锁和redis分布式锁</li>\n<li>乐观锁：mysql锁和redis分布式锁</li>\n<li>mq异步：后端用mq异步处理，前端轮询查询结果</li>\n</ul>\n<h2 id=\"秒杀\"><a href=\"#秒杀\" class=\"headerlink\" title=\"秒杀\"></a>秒杀</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43386944/article/details/119114870\">秒杀简介</a></li>\n<li><a href=\"https://blog.csdn.net/d875708765/article/details/108570008\">秒杀入门</a></li>\n<li><a href=\"https://blog.csdn.net/cyy_zyd/article/details/81741751\">秒杀进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lisu061714112/article/details/119218610\">秒杀详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35190492/article/details/107833096\">秒杀精进</a></li>\n</ul>\n</blockquote>\n<h2 id=\"优惠券\"><a href=\"#优惠券\" class=\"headerlink\" title=\"优惠券\"></a>优惠券</h2><h1 id=\"金融\"><a href=\"#金融\" class=\"headerlink\" title=\"金融\"></a>金融</h1>","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"distributed","url":"/2017/09/01/tech/development/senior/dev-4-distributed/","content":"<h1 id=\"分布式架构\"><a href=\"#分布式架构\" class=\"headerlink\" title=\"分布式架构\"></a>分布式架构</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/jiqiren1994/article/details/114854720\">分布式架构</a></li>\n<li><a href=\"https://blog.csdn.net/golden_zjy/article/details/99594356\">分布式架构之中心化与去中心化</a></li>\n</ul>\n</blockquote>\n<h2 id=\"集群和分布式的区别\"><a href=\"#集群和分布式的区别\" class=\"headerlink\" title=\"集群和分布式的区别\"></a>集群和分布式的区别</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_49948651/article/details/127003662\">集群和分布式对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiangyu1013/article/details/80417961\">集群和分布式对比详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>集群（Cluster）：多个人<code>轮流</code>干一件事</li>\n<li>分布式（Distributed）：多个人<code>分工</code>干一件事</li>\n</ul>\n<blockquote>\n<p>ps：服务是集群（集群对应的是单机），计算和存储是分布式</p>\n</blockquote>\n<h1 id=\"分布式理论\"><a href=\"#分布式理论\" class=\"headerlink\" title=\"分布式理论\"></a>分布式理论</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qwesxd/article/details/108589781\">分布式理论</a></li>\n</ul>\n</blockquote>\n<h2 id=\"CAP理论\"><a href=\"#CAP理论\" class=\"headerlink\" title=\"CAP理论\"></a>CAP理论</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u013332124/article/details/82874178\">CAP入门</a></li>\n<li><a href=\"https://blog.csdn.net/mInfoDavid/article/details/115426018\">CAP进阶</a></li>\n<li><a href=\"https://blog.csdn.net/lixinkuan328/article/details/95535691\">CAP详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40321119/article/details/106569498\">CAP为什么不能同时满足入门</a></li>\n<li><a href=\"https://blog.csdn.net/yeyazhishang/article/details/80758354\">CAP为什么不能同时满足详解</a></li>\n<li><a href=\"https://blog.csdn.net/Etoak_james/article/details/122140958\">CAP之CP和AP对比</a></li>\n</ul>\n</blockquote>\n<h2 id=\"BASE理论\"><a href=\"#BASE理论\" class=\"headerlink\" title=\"BASE理论\"></a>BASE理论</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u014439239/article/details/80269849\">BASE和ACID理论对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"分布式协同\"><a href=\"#分布式协同\" class=\"headerlink\" title=\"分布式协同\"></a>分布式协同</h1><h2 id=\"分布式一致性\"><a href=\"#分布式一致性\" class=\"headerlink\" title=\"分布式一致性\"></a>分布式一致性</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/gonghaiyu/article/details/108478266\">分布式一致性算法对比-Paxos、Raft、ZAB、Gossip</a></li>\n</ul>\n</blockquote>\n<h2 id=\"一致性hash\"><a href=\"#一致性hash\" class=\"headerlink\" title=\"一致性hash\"></a>一致性hash</h2><h1 id=\"分布式通信\"><a href=\"#分布式通信\" class=\"headerlink\" title=\"分布式通信\"></a>分布式通信</h1><p>选举 脑裂</p>\n<h1 id=\"分布式计算\"><a href=\"#分布式计算\" class=\"headerlink\" title=\"分布式计算\"></a>分布式计算</h1><h2 id=\"分布式计算模型\"><a href=\"#分布式计算模型\" class=\"headerlink\" title=\"分布式计算模型\"></a>分布式计算模型</h2><ul>\n<li>fork-join</li>\n<li>partition-merge</li>\n</ul>\n<h2 id=\"分布式计算框架\"><a href=\"#分布式计算框架\" class=\"headerlink\" title=\"分布式计算框架\"></a>分布式计算框架</h2><h1 id=\"分布式存储\"><a href=\"#分布式存储\" class=\"headerlink\" title=\"分布式存储\"></a>分布式存储</h1><p>replication（复制） shard（分片）</p>\n<h1 id=\"分布式应用\"><a href=\"#分布式应用\" class=\"headerlink\" title=\"分布式应用\"></a>分布式应用</h1><h2 id=\"分布式ID\"><a href=\"#分布式ID\" class=\"headerlink\" title=\"分布式ID\"></a>分布式ID</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44146379/article/details/109220528\">生成唯一id的方案入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37574623/article/details/119978432\">生成唯一id的方案进阶</a></li>\n<li><a href=\"https://blog.csdn.net/m0_68102643/article/details/124514486\">生成唯一id的方案详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41428035/article/details/103165055\">生成唯一id的方案对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40950903/article/details/108589837\">生成唯一id的方案对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/code_guo/article/details/103838891\">生成唯一的long型数字id</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>时间戳</li>\n<li>UUID</li>\n<li>雪花id</li>\n<li>mysql自增ID </li>\n<li>redis自增ID</li>\n</ul>\n<h3 id=\"Timestamp\"><a href=\"#Timestamp\" class=\"headerlink\" title=\"Timestamp\"></a>Timestamp</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/baidu_22583299/article/details/105141634\">使用时间戳生成单进程唯一ID入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_31572175/article/details/114623733\">使用时间戳生成单进程唯一ID进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_45393094/article/details/127690589\">使用时间戳生成单进程唯一ID详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"UUID\"><a href=\"#UUID\" class=\"headerlink\" title=\"UUID\"></a>UUID</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/sendudu/article/details/110913344\">UUID入门</a></li>\n<li><a href=\"https://blog.csdn.net/lizongti/article/details/109000359\">UUID进阶</a></li>\n<li><a href=\"https://blog.csdn.net/nawenqiang/article/details/82684001\">UUID详解</a></li>\n<li><a href=\"https://blog.csdn.net/zzhongcy/article/details/114284696\">UUID之生成短UUID</a></li>\n<li><a href=\"https://blog.csdn.net/u012760435/article/details/122304214\">UUID会重复吗入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39862847/article/details/111337652\">UUID会重复吗进阶</a></li>\n<li><a href=\"https://bbs.csdn.net/topics/390045377\">UUID会重复吗详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43127921/article/details/118618252\">为什么NanoID会取代UUID</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Snowflake\"><a href=\"#Snowflake\" class=\"headerlink\" title=\"Snowflake\"></a>Snowflake</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hacktan/article/details/105972455\">Snowflake ID入门</a></li>\n<li><a href=\"https://blog.csdn.net/u013465194/article/details/83385198\">Snowflake ID进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_35985092/article/details/126608103\">Snowflake ID详解</a></li>\n<li><a href=\"https://blog.csdn.net/leisurelen/article/details/107861658\">Snowflake ID之UidGenerator详解</a></li>\n<li><a href=\"https://blog.csdn.net/feiying0canglang/article/details/122830191\">Snowflake ID之Leaf详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_19595957/article/details/123294223\">Snowflake ID重复问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/wagnteng/article/details/117064242\">Snowflake ID重复问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/u014106644/article/details/122897709\">Snowflake ID重复问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/Wisimer/article/details/115584462\">Snowflake ID之如何解决时钟回拨的问题</a></li>\n<li><a href=\"https://blog.csdn.net/m0_37626564/article/details/121263753\">Snowflake ID之UidGenerator如何解决时钟回拨的问题</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34687559/article/details/115940210\">Snowflake ID之Leaf如何解决时钟回拨的问题</a></li>\n<li><a href=\"https://blog.csdn.net/u012410733/article/details/121882691\">Snowflake ID之动态生成workid和datacenterid</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_49592546/article/details/108083366\">Snowflake ID之感受一下性能高出587倍的全局唯一ID生成算法</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Mysql\"><a href=\"#Mysql\" class=\"headerlink\" title=\"Mysql\"></a>Mysql</h3><blockquote>\n<ul>\n<li><a href=\"https://www.cnblogs.com/kendoziyu/p/15323633.html\">Mysql单机生成全局唯一ID</a></li>\n<li><a href=\"https://blog.csdn.net/longjef/article/details/53117354\">Mysql集群生成全局唯一ID</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Redis\"><a href=\"#Redis\" class=\"headerlink\" title=\"Redis\"></a>Redis</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42937522/article/details/119840892\">Redis生成全局唯一ID</a></li>\n</ul>\n</blockquote>\n<h3 id=\"MongoDB\"><a href=\"#MongoDB\" class=\"headerlink\" title=\"MongoDB\"></a>MongoDB</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/xmtblog/article/details/117857431\">MongoDB ID入门</a></li>\n<li><a href=\"https://blog.csdn.net/fromzerojiyuan/article/details/121505909\">MongoDB ID详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Docker\"><a href=\"#Docker\" class=\"headerlink\" title=\"Docker\"></a>Docker</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yuii000000/article/details/115803517\">Docker环境下分布式ID重复的问题</a></li>\n</ul>\n</blockquote>\n<h2 id=\"分布式锁\"><a href=\"#分布式锁\" class=\"headerlink\" title=\"分布式锁\"></a>分布式锁</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/asd051377305/article/details/108384490\">分布式锁详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"分布式事务\"><a href=\"#分布式事务\" class=\"headerlink\" title=\"分布式事务\"></a>分布式事务</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/crazymakercircle/article/details/109459593\">分布式事务详解</a></li>\n<li><a href=\"https://blog.csdn.net/yiXin_Chen/article/details/123342892\">分布式事务核心</a></li>\n</ul>\n</blockquote>\n<h3 id=\"2PC（事务两阶段提交）\"><a href=\"#2PC（事务两阶段提交）\" class=\"headerlink\" title=\"2PC（事务两阶段提交）\"></a>2PC（事务两阶段提交）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43446767/article/details/96999456\">分布式2PC入门</a></li>\n<li><a href=\"https://blog.csdn.net/han_xuefeng/article/details/122454673\">分布式2PC进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_31821733/article/details/121321818\">分布式2PC详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"TCC（事务补偿）\"><a href=\"#TCC（事务补偿）\" class=\"headerlink\" title=\"TCC（事务补偿）\"></a>TCC（事务补偿）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/yuliying/article/details/52813302\">分布式TCC入门</a></li>\n<li><a href=\"https://blog.csdn.net/ibigboy/article/details/118994071\">分布式TCC进阶</a></li>\n<li><a href=\"https://blog.csdn.net/eluanshi12/article/details/84528393\">分布式TCC详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"分布式问题\"><a href=\"#分布式问题\" class=\"headerlink\" title=\"分布式问题\"></a>分布式问题</h1><h2 id=\"时钟问题\"><a href=\"#时钟问题\" class=\"headerlink\" title=\"时钟问题\"></a>时钟问题</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Zhangconglong123/article/details/125546635\">分布式系统时钟问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/No_Game_No_Life_/article/details/110872537\">分布式系统时钟问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/dotmai/article/details/107649338\">分布式系统时钟问题详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"时钟回拨\"><a href=\"#时钟回拨\" class=\"headerlink\" title=\"时钟回拨\"></a>时钟回拨</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Wisimer/article/details/115584462\">分布式系统时钟回拨问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37286668/article/details/107292527\">分布式系统时钟回拨问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_26222859/article/details/123689230\">分布式系统时钟回拨问题详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"时钟同步\"><a href=\"#时钟同步\" class=\"headerlink\" title=\"时钟同步\"></a>时钟同步</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ChenjCarryOn/article/details/104735473\">分布式系统时钟同步问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/showchi/article/details/106230110\">分布式系统时钟同步问题进阶</a></li>\n<li><a href=\"https://blog.csdn.net/sssssuuuuu666/article/details/106567391\">分布式系统时钟同步问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32486597/article/details/122315377\">Hadoop之时钟同步问题入门</a></li>\n<li><a href=\"https://blog.csdn.net/cclovezbf/article/details/116005487\">Hadoop之时钟同步问题详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_30687811/article/details/97677024\">时钟同步的重要性</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44990608/article/details/105651210\">时钟同步算法</a></li>\n</ul>\n</blockquote>\n<h1 id=\"分布式综合\"><a href=\"#分布式综合\" class=\"headerlink\" title=\"分布式综合\"></a>分布式综合</h1>","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"bigdata","url":"/2017/09/01/tech/development/senior/dev-5-bigdata/","content":"<h1 id=\"BigData\"><a href=\"#BigData\" class=\"headerlink\" title=\"BigData\"></a>BigData</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Until_U/article/details/104426960\">结构化数据和非结构化数据入门</a></li>\n<li><a href=\"https://blog.csdn.net/alice_tl/article/details/88142721\">结构化数据和非结构化数据进阶</a></li>\n<li><a href=\"https://blog.csdn.net/orDream/article/details/108573932\">结构化数据和非结构化数据详解</a></li>\n</ul>\n</blockquote>\n<p>结构化数据：记录数据（数据库record）<br>半结构化数据：对象数据（程序对象object：json、xml、html）<br>非结构化数据：日志数据（log）、音频数据（audio）、视频数据（video）</p>\n<h1 id=\"Collect（采集）\"><a href=\"#Collect（采集）\" class=\"headerlink\" title=\"Collect（采集）\"></a>Collect（采集）</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ZZQHELLO2018/article/details/105552419\">数据采集工具详解</a></li>\n</ul>\n</blockquote>\n<p>记录数据：CDC架构<br>对象数据：ETL架构<br>日志数据：ELK(EFK)架构</p>\n<h2 id=\"CDC\"><a href=\"#CDC\" class=\"headerlink\" title=\"CDC\"></a>CDC</h2><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/394811460\">数据库同步工具有哪些</a></li>\n<li><a href=\"https://blog.csdn.net/Johny_Beijing/article/details/119302166\">数据库同步工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/inrgihc/article/details/114000246\">数据库同步工具详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq30211478/article/details/100690948\">数据库同步之CDC技术原理</a></li>\n<li><a href=\"https://blog.csdn.net/qq_42847309/article/details/119389259\">数据库同步之OGG技术原理</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Canal\"><a href=\"#Canal\" class=\"headerlink\" title=\"Canal\"></a>Canal</h3><p>在Database之间同步数据</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_23329167/article/details/89873870\">Canal入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_45872465/article/details/119116769\">Canal详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_42460087/article/details/126133847\">Canal和DataX的区别详解</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Canal只能在数据库之间同步，DataX可以在不同存储系统之间同步</p>\n</blockquote>\n</blockquote>\n<h3 id=\"Sqoop\"><a href=\"#Sqoop\" class=\"headerlink\" title=\"Sqoop\"></a>Sqoop</h3><p>在Database和Hadoop之间同步数据</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/ancony_/article/details/80012908\">Sqoop入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_48482704/article/details/109821541\">Sqoop详解</a></li>\n<li><a href=\"https://blog.csdn.net/h8b6Pk7M7r8/article/details/99711815\">Sqoop和Flume的区别</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<blockquote>\n<p>Sqoop是同步工具（tool），Flume是同步服务（service）</p>\n</blockquote>\n</blockquote>\n<h2 id=\"ETL\"><a href=\"#ETL\" class=\"headerlink\" title=\"ETL\"></a>ETL</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_39032019/article/details/110635508\">ETL入门</a></li>\n<li><a href=\"https://blog.csdn.net/javastart/article/details/113838240\">ETL进阶</a></li>\n<li><a href=\"https://blog.csdn.net/rlnLo2pNEfx9c/article/details/110848234\">ETL详解</a></li>\n<li><a href=\"https://blog.csdn.net/zytbft/article/details/84455222\">ETL工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhanaolu4821/article/details/82458682\">ETL工具进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44433834/article/details/122620064\">ETL工具详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"DataX\"><a href=\"#DataX\" class=\"headerlink\" title=\"DataX\"></a>DataX</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_46902396/article/details/121904705\">DataX入门</a></li>\n<li><a href=\"https://blog.csdn.net/tototuzuoquan/article/details/102601515\">DataX详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Flume\"><a href=\"#Flume\" class=\"headerlink\" title=\"Flume\"></a>Flume</h3><p>基于Hdfs</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42837961/article/details/104533147\">Flume入门</a></li>\n<li><a href=\"https://blog.csdn.net/Poolweet_/article/details/109483963\">Flume详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"ELK\"><a href=\"#ELK\" class=\"headerlink\" title=\"ELK\"></a>ELK</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/enweitech/article/details/115868171\">常用的日志分析平台对比</a></li>\n<li><a href=\"https://blog.csdn.net/adparking/article/details/119565447\">常用的日志采集工具对比</a></li>\n<li><a href=\"https://blog.csdn.net/sinron_wu/article/details/105285265\">Docker日志采集方案</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44836662/article/details/120765852\">Docker日志采集工具</a></li>\n<li><a href=\"https://blog.csdn.net/JKX_geek/article/details/104858769\">Kubernetes日志采集方案</a></li>\n<li><a href=\"https://blog.csdn.net/easylife206/article/details/110848443\">Kubernetes日志采集工具</a></li>\n</ul>\n</blockquote>\n<h3 id=\"syslog\"><a href=\"#syslog\" class=\"headerlink\" title=\"syslog\"></a>syslog</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/allway2/article/details/120047890\">syslog入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhezhebie/article/details/75222667\">syslog详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"rsyslog\"><a href=\"#rsyslog\" class=\"headerlink\" title=\"rsyslog\"></a>rsyslog</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weibo1230123/article/details/116563695\">rsyslog入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_65690979/article/details/129003415\">rsyslog详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"syslog-ng\"><a href=\"#syslog-ng\" class=\"headerlink\" title=\"syslog-ng\"></a>syslog-ng</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhj100921/article/details/104326748\">syslog-ng入门</a></li>\n<li><a href=\"https://blog.csdn.net/codingcs/article/details/78001796\">syslog-ng详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"ELK-1\"><a href=\"#ELK-1\" class=\"headerlink\" title=\"ELK\"></a>ELK</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zkc7441976/article/details/115868050\">ELK入门</a></li>\n<li><a href=\"https://blog.csdn.net/qiushisoftware/article/details/100298046\">ELK详解</a></li>\n<li><a href=\"https://blog.csdn.net/fu_huo_1993/article/details/116655566\">ELK之logstash处理多行日志</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Fluentd\"><a href=\"#Fluentd\" class=\"headerlink\" title=\"Fluentd\"></a>Fluentd</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010038733/article/details/83185003\">Fluentd入门</a></li>\n<li><a href=\"https://blog.csdn.net/JacksonKing/article/details/117560662\">Fluentd详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Graylog\"><a href=\"#Graylog\" class=\"headerlink\" title=\"Graylog\"></a>Graylog</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/easylife206/article/details/123013275\">Graylog入门</a></li>\n<li><a href=\"https://blog.csdn.net/liuyij3430448/article/details/127609313\">Graylog详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Loki\"><a href=\"#Loki\" class=\"headerlink\" title=\"Loki\"></a>Loki</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43546282/article/details/115325468\">Loki入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44275820/article/details/120548004\">Loki详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"LogAgent\"><a href=\"#LogAgent\" class=\"headerlink\" title=\"LogAgent\"></a>LogAgent</h3><p>不常用</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/macalzheng/article/details/104778439\">LogAgent入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_34066347/article/details/92677984\">LogAgent详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Transform（转换）\"><a href=\"#Transform（转换）\" class=\"headerlink\" title=\"Transform（转换）\"></a>Transform（转换）</h1><h1 id=\"Storage（存储）\"><a href=\"#Storage（存储）\" class=\"headerlink\" title=\"Storage（存储）\"></a>Storage（存储）</h1><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/268247617\">大数据存储系统有哪些</a></li>\n</ul>\n</blockquote>\n<p>Hadoop：hdfs（分布式文件系统）、MapReducce（批处理框架），离线分析使用（全表扫描）<br>HBase：基于hdfs的分布式数据库（列式存储），在线分析使用（索引扫描）</p>\n<h1 id=\"Compute（计算）\"><a href=\"#Compute（计算）\" class=\"headerlink\" title=\"Compute（计算）\"></a>Compute（计算）</h1><blockquote>\n<ul>\n<li><a href=\"https://www.zhihu.com/question/415616804?utm_id=0\">大数据计算引擎有哪些</a></li>\n<li><a href=\"https://blog.csdn.net/julyclj55555/article/details/126872632\">大数据计算引擎详解</a></li>\n<li><a href=\"https://blog.csdn.net/BAO7988/article/details/103646764\">大数据计算引擎对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/spark_tang/article/details/108058285\">大数据批处理计算引擎对比详解</a></li>\n<li><a href=\"https://blog.csdn.net/yingfeng2oo8/article/details/113441402\">大数据流式计算引擎对比详解</a></li>\n</ul>\n</blockquote>\n<p>批处理计算引擎：Hadoop（离线处理）、Spark（在线处理）<br>流式计算引擎：Storm、Spark Stream、Flink</p>\n<h1 id=\"Analyze（分析）\"><a href=\"#Analyze（分析）\" class=\"headerlink\" title=\"Analyze（分析）\"></a>Analyze（分析）</h1><h2 id=\"OLTP\"><a href=\"#OLTP\" class=\"headerlink\" title=\"OLTP\"></a>OLTP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u010429286/article/details/79034938\">OLTP是什么入门</a></li>\n<li><a href=\"https://blog.csdn.net/jiagoushipro/article/details/125063084\">OLTP是什么详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_43270493/article/details/103123490\">OLAP和OLTP的区别入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhangzheng0413/article/details/8271322\">OLAP和OLTP的区别进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44080445/article/details/119171865\">OLAP和OLTP的区别详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"OLAP\"><a href=\"#OLAP\" class=\"headerlink\" title=\"OLAP\"></a>OLAP</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_36893938/article/details/124351944\">OLAP是什么入门</a></li>\n<li><a href=\"https://blog.csdn.net/wuxintdrh/article/details/119931658\">OLAP是什么进阶</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_52672149/article/details/119248932\">OLAP是什么详解</a></li>\n<li><a href=\"https://blog.csdn.net/xwc35047/article/details/86369465\">OLAP入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_39889544/article/details/111665861\">OLAP进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41018861/article/details/118028050\">OLAP详解</a></li>\n<li><a href=\"https://blog.csdn.net/chuancha1057/article/details/100813933\">OLAP操作</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44080445/article/details/119171865\">OLAP即席查询（ad hoc query）详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_22473611/article/details/109053952\">OLAP查询引擎详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_33724659/article/details/89548867\">OLAP查询引擎选型入门</a></li>\n<li><a href=\"https://blog.csdn.net/ZZQHELLO2018/article/details/106251658\">OLAP查询引擎选型进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41018861/article/details/117467804\">OLAP查询引擎选型详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_33161208/article/details/79441129\">OLAP之Hive、Pig、HBase对比</a></li>\n<li><a href=\"https://blog.csdn.net/u011250186/article/details/109343752\">OLAP之Hive、SparkSql、Impala、Presto对比</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_31351409/article/details/84549573\">OLAP之Hive、Impala、Presto对比</a></li>\n<li><a href=\"https://blog.csdn.net/debimeng/article/details/90744424\">OLAP之Hive、Impala对比</a></li>\n<li><a href=\"https://blog.csdn.net/u011250186/article/details/109343718\">OLAP之Impala、Presto对比</a></li>\n<li><a href=\"https://blog.csdn.net/wypblog/article/details/118036453\">OLAP之ClickHouse和Doris对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41982570/article/details/129240350\">OLAP之ClickHouse和Doris对比详解</a></li>\n</ul>\n</blockquote>\n<p>分析引擎：Pig、Hive<br>查询引擎：SparkSql、Impala、Presto、Kylin、Druid、Clickhouse、Doris</p>\n<ul>\n<li>HBase：存储</li>\n<li>Pig：分析（用脚本）</li>\n<li>Hive：分析（用HQL，类似SQL）</li>\n</ul>\n<h3 id=\"Data-Warehouse（数据仓库）\"><a href=\"#Data-Warehouse（数据仓库）\" class=\"headerlink\" title=\"Data Warehouse（数据仓库）\"></a>Data Warehouse（数据仓库）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_44186838/article/details/119934923\">数据仓库是什么</a></li>\n<li><a href=\"https://blog.csdn.net/Penglaixiaoke/article/details/124708545\">为什么需要数据仓库</a></li>\n<li><a href=\"https://blog.csdn.net/qq_21539671/article/details/99707786\">数据仓库和数据库的区别</a></li>\n<li><a href=\"https://blog.csdn.net/universsky2015/article/details/119965866\">详解数仓中的数据分层</a></li>\n<li><a href=\"https://blog.csdn.net/qq_58732706/article/details/121553081\">详解数仓中的衍生概念</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Data-Mart（数据集市）\"><a href=\"#Data-Mart（数据集市）\" class=\"headerlink\" title=\"Data Mart（数据集市）\"></a>Data Mart（数据集市）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42575593/article/details/84763340\">数据仓库和数据集市的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Data-Lake（数据湖）\"><a href=\"#Data-Lake（数据湖）\" class=\"headerlink\" title=\"Data Lake（数据湖）\"></a>Data Lake（数据湖）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u012921921/article/details/107208730\">数据仓库和数据湖的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Data-Middleground（数据中台）\"><a href=\"#Data-Middleground（数据中台）\" class=\"headerlink\" title=\"Data Middleground（数据中台）\"></a>Data Middleground（数据中台）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tianyeshiye/article/details/94742249\">数据仓库和数据中台的区别</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Data-Platform（数据平台）\"><a href=\"#Data-Platform（数据平台）\" class=\"headerlink\" title=\"Data Platform（数据平台）\"></a>Data Platform（数据平台）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/LXWalaz1s1s/article/details/119061337\">开源大数据平台</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Other\"><a href=\"#Other\" class=\"headerlink\" title=\"Other\"></a>Other</h1>","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"apm","url":"/2017/09/01/tech/development/senior/dev-6-apm/","content":"<h1 id=\"APM\"><a href=\"#APM\" class=\"headerlink\" title=\"APM\"></a>APM</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/garyond/article/details/81737866\">应用性能管理（APM）综述</a></li>\n</ul>\n</blockquote>\n<p>APM：Application Performance Management</p>\n<h2 id=\"Monitor\"><a href=\"#Monitor\" class=\"headerlink\" title=\"Monitor\"></a>Monitor</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/William0318/article/details/104304664\">常用的监控系统对比</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44411385/article/details/124234502\">Prometheus和OpenFalcon对比</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Prometheus\"><a href=\"#Prometheus\" class=\"headerlink\" title=\"Prometheus\"></a>Prometheus</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42684940/article/details/116303861\">Prometheus入门</a></li>\n<li><a href=\"https://blog.csdn.net/shenyuanhaojie/article/details/121775976\">Prometheus详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"OpenFalcon\"><a href=\"#OpenFalcon\" class=\"headerlink\" title=\"OpenFalcon\"></a>OpenFalcon</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42309324/article/details/107013925\">OpenFalcon入门</a></li>\n<li><a href=\"https://blog.csdn.net/Danielsm/article/details/123531933\">OpenFalcon详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Ganglia\"><a href=\"#Ganglia\" class=\"headerlink\" title=\"Ganglia\"></a>Ganglia</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/pisa8559/article/details/110904080\">Ganglia入门</a></li>\n<li><a href=\"https://blog.csdn.net/astudybear/article/details/124384425\">Ganglia详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Zabbix\"><a href=\"#Zabbix\" class=\"headerlink\" title=\"Zabbix\"></a>Zabbix</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wt334502157/article/details/117994107\">Zabbix入门</a></li>\n<li><a href=\"https://blog.csdn.net/F2001523/article/details/112855504\">Zabbix详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Nagios\"><a href=\"#Nagios\" class=\"headerlink\" title=\"Nagios\"></a>Nagios</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_40283570/article/details/106540770\">Nagios入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41819965/article/details/109702039\">Nagios详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Visual\"><a href=\"#Visual\" class=\"headerlink\" title=\"Visual\"></a>Visual</h2><h3 id=\"Grafana\"><a href=\"#Grafana\" class=\"headerlink\" title=\"Grafana\"></a>Grafana</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/A13581861752/article/details/124148803\">Grafana入门</a></li>\n<li><a href=\"https://blog.csdn.net/freeking101/article/details/128585245\">Grafana详解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39458679/article/details/79865744\">Grafana和OpenTSDB</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41475058/article/details/108050440\">Grafana和InfluxDB</a></li>\n<li><a href=\"https://blog.csdn.net/leifurong6/article/details/42414279\">Grafana和Graphite</a></li>\n<li><a href=\"https://blog.csdn.net/forrest420/article/details/121569253\">Grafana和Elasticsearch</a></li>\n<li><a href=\"https://blog.csdn.net/m0_67159981/article/details/129033441\">Grafana和Prometheus</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Error\"><a href=\"#Error\" class=\"headerlink\" title=\"Error\"></a>Error</h2><h3 id=\"Sentry\"><a href=\"#Sentry\" class=\"headerlink\" title=\"Sentry\"></a>Sentry</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/arnolan/article/details/105880882\">Sentry入门</a></li>\n<li><a href=\"https://blog.csdn.net/hjb2722404/article/details/120001825\">Sentry详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Metric\"><a href=\"#Metric\" class=\"headerlink\" title=\"Metric\"></a>Metric</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/linjiaYY/article/details/121661716\">维度和指标</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37688023/article/details/106460962\">指标分析工具之Telegraf+InfluxDB+Grafana</a></li>\n<li><a href=\"https://blog.csdn.net/qq_37688023/article/details/106440503\">接口测试报告之Jmeter+InfluxDB+Grafana</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Telegraf\"><a href=\"#Telegraf\" class=\"headerlink\" title=\"Telegraf\"></a>Telegraf</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_43786255/article/details/107127508\">Telegraf入门</a></li>\n<li><a href=\"https://blog.csdn.net/lulongji2035/article/details/109029677\">Telegraf详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"MetricBeat\"><a href=\"#MetricBeat\" class=\"headerlink\" title=\"MetricBeat\"></a>MetricBeat</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/laoyang360/article/details/122833878\">MetricBeat入门</a></li>\n<li><a href=\"https://blog.csdn.net/shm19990131/article/details/107323076\">MetricBeat详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Trace\"><a href=\"#Trace\" class=\"headerlink\" title=\"Trace\"></a>Trace</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_21033663/article/details/114168332\">常用的链路追踪框架对比</a></li>\n<li><a href=\"https://blog.csdn.net/generalfu/article/details/105801005\">通过字节码插桩监控方法采集运行时入参出参和异常信息</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Zipkin\"><a href=\"#Zipkin\" class=\"headerlink\" title=\"Zipkin\"></a>Zipkin</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lovelichao12/article/details/115321413\">Zipkin入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40587263/article/details/117338097\">Zipkin详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"SkyWalking\"><a href=\"#SkyWalking\" class=\"headerlink\" title=\"SkyWalking\"></a>SkyWalking</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_38001814/article/details/104061708\">SkyWalking入门</a></li>\n<li><a href=\"https://blog.csdn.net/CSDN_WYL2016/article/details/115689947\">SkyWalking详解</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Cat\"><a href=\"#Cat\" class=\"headerlink\" title=\"Cat\"></a>Cat</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/tiny_du/article/details/119148287\">Cat入门</a></li>\n<li><a href=\"https://blog.csdn.net/My_Way666/article/details/86679229\">Cat详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"TSDB\"><a href=\"#TSDB\" class=\"headerlink\" title=\"TSDB\"></a>TSDB</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/u011537073/article/details/80305804\">常用的时序数据库对比入门</a></li>\n<li><a href=\"https://blog.csdn.net/xuruilll/article/details/125808992\">常用的时序数据库对比进阶</a></li>\n<li><a href=\"https://blog.csdn.net/vtnews/article/details/80307023\">常用的时序数据库对比详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"OpenTSDB\"><a href=\"#OpenTSDB\" class=\"headerlink\" title=\"OpenTSDB\"></a>OpenTSDB</h2><p>基于HBase</p>\n<blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/lixinkuan328/article/details/106782643\">OpenTSDB入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_24084925/article/details/80339695\">OpenTSDB详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"InfluxDB\"><a href=\"#InfluxDB\" class=\"headerlink\" title=\"InfluxDB\"></a>InfluxDB</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhangxm_qz/article/details/121723919\">InfluxDB入门</a></li>\n<li><a href=\"https://blog.csdn.net/fuhanghang/article/details/105484610\">InfluxDB详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Graphite\"><a href=\"#Graphite\" class=\"headerlink\" title=\"Graphite\"></a>Graphite</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chszs/article/details/50927812\">Graphite入门</a></li>\n<li><a href=\"https://blog.csdn.net/u010467184/article/details/106733326\">Graphite详解</a></li>\n</ul>\n</blockquote>\n","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"ops","url":"/2017/09/01/tech/development/senior/dev-7-ops/","content":"<h1 id=\"OPS\"><a href=\"#OPS\" class=\"headerlink\" title=\"OPS\"></a>OPS</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/kevinjin2011/article/details/125603446\">CICD入门</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44903147/article/details/96291588\">CICD进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_43148810/article/details/123347396\">CICD详解</a></li>\n<li><a href=\"https://blog.csdn.net/wz_coming/article/details/115478903\">CICD工具入门</a></li>\n<li><a href=\"https://blog.csdn.net/dg313/article/details/126270138\">CICD工具进阶</a></li>\n<li><a href=\"https://blog.csdn.net/hupengfei_shenyang/article/details/106917354\">CICD工具详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Build\"><a href=\"#Build\" class=\"headerlink\" title=\"Build\"></a>Build</h1><h2 id=\"Jenkins\"><a href=\"#Jenkins\" class=\"headerlink\" title=\"Jenkins\"></a>Jenkins</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/hanjinjuan/article/details/120237067\">Jenkins入门</a></li>\n<li><a href=\"https://blog.csdn.net/zhishidi/article/details/118082509\">Jenkins进阶</a></li>\n<li><a href=\"https://blog.csdn.net/qq_32352777/article/details/109267847\">Jenkins详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Buddy\"><a href=\"#Buddy\" class=\"headerlink\" title=\"Buddy\"></a>Buddy</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/dg313/article/details/125811302\">Buddy入门</a></li>\n<li><a href=\"https://blog.csdn.net/cunjie3951/article/details/106902487\">Buddy详解</a></li>\n<li><a href=\"https://blog.csdn.net/dg313/article/details/127733744\">Buddy和Jenkins对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Check\"><a href=\"#Check\" class=\"headerlink\" title=\"Check\"></a>Check</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_43843725/article/details/100551645\">Sonar入门</a></li>\n<li><a href=\"https://blog.csdn.net/zjy_love_java/article/details/107347644\">Sonar详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Upload\"><a href=\"#Upload\" class=\"headerlink\" title=\"Upload\"></a>Upload</h1><h2 id=\"Repository\"><a href=\"#Repository\" class=\"headerlink\" title=\"Repository\"></a>Repository</h2><h3 id=\"Nexus\"><a href=\"#Nexus\" class=\"headerlink\" title=\"Nexus\"></a>Nexus</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/chetuodao0481/article/details/100849458\">Nexus入门</a></li>\n<li><a href=\"https://blog.csdn.net/qq_36441169/article/details/102481392\">Nexus详解</a></li>\n<li><a href=\"https://blog.csdn.net/jianghuafeng0/article/details/109518353\">Nexus和Artifactory对比</a></li>\n</ul>\n</blockquote>\n<h1 id=\"Deploy\"><a href=\"#Deploy\" class=\"headerlink\" title=\"Deploy\"></a>Deploy</h1>","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"design","url":"/2017/09/01/tech/development/senior/dev-8-design/","content":"<h1 id=\"Design\"><a href=\"#Design\" class=\"headerlink\" title=\"Design\"></a>Design</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/penriver/article/details/118571991\">设计模式入门</a></li>\n<li><a href=\"https://blog.csdn.net/sugar_no1/article/details/88317950\">设计模式详解</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>创建型设计模式：处理对象的<code>创建</code></li>\n<li>结构型设计模式：处理对象的<code>结构</code></li>\n<li>行为型设计模式：处理对象的<code>行为</code></li>\n</ul>\n<h2 id=\"Creator（创建型设计模式）\"><a href=\"#Creator（创建型设计模式）\" class=\"headerlink\" title=\"Creator（创建型设计模式）\"></a>Creator（创建型设计模式）</h2><ul>\n<li>单例模式</li>\n<li>原型模式</li>\n<li>工厂模式<ul>\n<li>简单工厂模式</li>\n<li>工厂方法模式</li>\n<li>抽象工厂模式</li>\n</ul>\n</li>\n<li>建造者模式</li>\n</ul>\n<h3 id=\"Singleton（单例模式）\"><a href=\"#Singleton（单例模式）\" class=\"headerlink\" title=\"Singleton（单例模式）\"></a>Singleton（单例模式）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_39763246/article/details/114553165\">设计模式之单例模式</a></li>\n<li><a href=\"https://blog.csdn.net/leo187/article/details/104332138\">设计模式之单例模式和序列化</a></li>\n<li><a href=\"https://blog.csdn.net/LoveLion/article/details/110983839\">设计模式之单例模式和防破坏</a></li>\n</ul>\n</blockquote>\n<blockquote>\n<p>ps：枚举类单例可以防止单例被破坏</p>\n</blockquote>\n<h4 id=\"饿汉式\"><a href=\"#饿汉式\" class=\"headerlink\" title=\"饿汉式\"></a>饿汉式</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Singleton</span> <span class=\"variable\">INSTANCE</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Singleton</span>();</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">Singleton</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"懒汉式\"><a href=\"#懒汉式\" class=\"headerlink\" title=\"懒汉式\"></a>懒汉式</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">volatile</span> Singleton INSTANCE;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">Singleton</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">synchronized</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (INSTANCE == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">      INSTANCE = <span class=\"keyword\">new</span> <span class=\"title class_\">Singleton</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"双检查\"><a href=\"#双检查\" class=\"headerlink\" title=\"双检查\"></a>双检查</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">volatile</span> Singleton INSTANCE;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">Singleton</span><span class=\"params\">()</span> &#123;&#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (INSTANCE == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (Singleton.class) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (INSTANCE == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                INSTANCE = <span class=\"keyword\">new</span> <span class=\"title class_\">Singleton</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"内部类\"><a href=\"#内部类\" class=\"headerlink\" title=\"内部类\"></a>内部类</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"title function_\">Singleton</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SingletonHolder</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Singleton</span> <span class=\"variable\">INSTANCE</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Singleton</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">      </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> SingletonHolder.INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"枚举类\"><a href=\"#枚举类\" class=\"headerlink\" title=\"枚举类\"></a>枚举类</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">enum</span> <span class=\"title class_\">Singleton</span> &#123;</span><br><span class=\"line\">  INSTANCE;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Singleton <span class=\"title function_\">getInstance</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> INSTANCE;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Prototype（原型模式）\"><a href=\"#Prototype（原型模式）\" class=\"headerlink\" title=\"Prototype（原型模式）\"></a>Prototype（原型模式）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/wsndbbhh/article/details/106025535\">设计模式之原型模式</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Factory（工厂模式）\"><a href=\"#Factory（工厂模式）\" class=\"headerlink\" title=\"Factory（工厂模式）\"></a>Factory（工厂模式）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_42804736/article/details/115168313\">设计模式之工厂模式</a></li>\n</ul>\n</blockquote>\n<h3 id=\"Builder（建造者模式）\"><a href=\"#Builder（建造者模式）\" class=\"headerlink\" title=\"Builder（建造者模式）\"></a>Builder（建造者模式）</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/zhenghuishengq/article/details/126911223\">设计模式之建造者模式</a></li>\n</ul>\n</blockquote>\n<h2 id=\"Structure（结构型设计模式）\"><a href=\"#Structure（结构型设计模式）\" class=\"headerlink\" title=\"Structure（结构型设计模式）\"></a>Structure（结构型设计模式）</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/SPACESTUDIO/article/details/107434876\">代理模式和装饰模式的区别</a></li>\n<li><a href=\"https://blog.csdn.net/xiefangjin/article/details/51056411\">适配模式和桥接模式的区别</a></li>\n<li><a href=\"https://blog.csdn.net/MirkoWug/article/details/115486682\">外观模式和中介者模式的区别</a></li>\n</ul>\n</blockquote>\n<ul>\n<li>代理模式：代理对象的访问（代理后的对象不会新增方法）</li>\n<li>装饰模式：扩展对象的功能（装饰后的对象可以新增方法）</li>\n<li>适配模式：让两个不兼容的对象协同工作</li>\n<li>桥接模式：让两个不兼容的对象协同工作</li>\n<li>外观模式：为复杂的系统提供统一的入口</li>\n<li>组合模式：实现树形结构</li>\n<li>享元模式：缓存对象并重复使用</li>\n</ul>\n<h2 id=\"Behavior（行为型结构模式）\"><a href=\"#Behavior（行为型结构模式）\" class=\"headerlink\" title=\"Behavior（行为型结构模式）\"></a>Behavior（行为型结构模式）</h2><ul>\n<li>模版模式</li>\n<li>策略模式</li>\n<li>状态模式</li>\n<li>观察者模式</li>\n<li>访问者模式</li>\n<li>中介者模式</li>\n<li>迭代器模式</li>\n<li>解释器模式</li>\n<li>备忘录模式</li>\n<li>命令模式</li>\n<li>责任链模式</li>\n</ul>\n","categories":["+ skill + dev + senior"],"tags":["+ dev"]},{"title":"paradigm","url":"/2017/09/01/tech/development/senior/dev-9-paradigm/","content":"<h1 id=\"Paradigm\"><a href=\"#Paradigm\" class=\"headerlink\" title=\"Paradigm\"></a>Paradigm</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_38638020/article/details/89318501\">常见的编程范式入门</a></li>\n<li><a href=\"https://blog.csdn.net/lonelymanontheway/article/details/88657609\">常见的编程范式进阶</a></li>\n<li><a href=\"https://blog.csdn.net/diaowen8993/article/details/101208831\">常见的编程范式详解</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_44961455/article/details/107662688\">OOP和AOP对比</a></li>\n<li><a href=\"https://blog.csdn.net/ViVivan1992/article/details/101302889\">OOP和FP对比</a></li>\n</ul>\n</blockquote>\n<p>编程范式中的关键字</p>\n<blockquote>\n<ul>\n<li>POP（procedure oriented programming）：面向过程编程</li>\n<li>OOP（object oriented programming）：面向对象编程</li>\n<li>AOP（aspect oriented programming）：面向切面编程  </li>\n<li>COP（component oriented programming）：面向组件编程</li>\n<li>SOP（service oriented programming）：面向服务编程</li>\n<li>FP（functional programming）：函数式编程</li>\n<li>SP（stream programming）：流式编程</li>\n<li>RP（reactive programming）：响应式编程</li>\n</ul>\n</blockquote>\n<h1 id=\"POP\"><a href=\"#POP\" class=\"headerlink\" title=\"POP\"></a>POP</h1><p>POP（procedure oriented programming）：面向过程编程</p>\n<h1 id=\"OOP\"><a href=\"#OOP\" class=\"headerlink\" title=\"OOP\"></a>OOP</h1><p>OOP（object oriented programming）：面向对象编程</p>\n<h1 id=\"AOP\"><a href=\"#AOP\" class=\"headerlink\" title=\"AOP\"></a>AOP</h1><p>AOP（aspect oriented programming）：面向切面编程 </p>\n<h1 id=\"COP\"><a href=\"#COP\" class=\"headerlink\" title=\"COP\"></a>COP</h1><p>COP（component oriented programming）：面向组件编程</p>\n<h1 id=\"SOP\"><a href=\"#SOP\" class=\"headerlink\" title=\"SOP\"></a>SOP</h1><p>SOP（service oriented programming）：面向服务编程</p>\n<h1 id=\"FP\"><a href=\"#FP\" class=\"headerlink\" title=\"FP\"></a>FP</h1><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_50964668/article/details/113958422\">函数式编程入门</a></li>\n<li><a href=\"https://blog.csdn.net/reliveIT/article/details/82959858\">函数式编程理论</a></li>\n<li><a href=\"https://blog.csdn.net/bbbeoy/article/details/80689643\">函数式编程之Functor、Applicative和Monad详解</a></li>\n<li><a href=\"https://blog.csdn.net/jywHltj/article/details/88335705\">函数式编程之Functor、Applicative和Monad图解</a></li>\n<li><a href=\"https://blog.csdn.net/qq_40262372/article/details/118341687\">函数式编程之Monad思想图解</a></li>\n</ul>\n</blockquote>\n<p>FP（functional programming）：函数式编程</p>\n<h2 id=\"java\"><a href=\"#java\" class=\"headerlink\" title=\"java\"></a>java</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/Roger_CoderLife/article/details/84135084\">java高阶函数</a></li>\n</ul>\n</blockquote>\n<h3 id=\"scala\"><a href=\"#scala\" class=\"headerlink\" title=\"scala\"></a>scala</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44079636/article/details/119492810\">scala高阶函数</a></li>\n</ul>\n</blockquote>\n<h3 id=\"kotlin\"><a href=\"#kotlin\" class=\"headerlink\" title=\"kotlin\"></a>kotlin</h3><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_55362248/article/details/121746014\">kotlin高阶函数</a></li>\n</ul>\n</blockquote>\n<h2 id=\"python\"><a href=\"#python\" class=\"headerlink\" title=\"python\"></a>python</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_44983653/article/details/113788516\">python高阶函数</a></li>\n<li><a href=\"https://blog.csdn.net/bigzql/article/details/109251414\">python内置函数入门</a></li>\n<li><a href=\"https://blog.csdn.net/lemonbit/article/details/115153134\">python内置函数详解</a></li>\n</ul>\n</blockquote>\n<h2 id=\"javascript\"><a href=\"#javascript\" class=\"headerlink\" title=\"javascript\"></a>javascript</h2><blockquote>\n<ul>\n<li><a href=\"https://blog.csdn.net/guizi0809/article/details/119112767\">javascript高阶函数</a></li>\n<li><a href=\"https://blog.csdn.net/m0_66139206/article/details/126677465\">javascript内置函数入门</a></li>\n<li><a href=\"https://blog.csdn.net/WuLex/article/details/83339674\">javascript内置函数详解</a></li>\n</ul>\n</blockquote>\n<h1 id=\"SP\"><a href=\"#SP\" class=\"headerlink\" title=\"SP\"></a>SP</h1><p>SP（stream programming）：流式编程，基于 <code>生产消费模式</code> 实现的编程范式</p>\n<h2 id=\"java-1\"><a href=\"#java-1\" class=\"headerlink\" title=\"java\"></a>java</h2><p>java Stream</p>\n<h3 id=\"Framework\"><a href=\"#Framework\" class=\"headerlink\" title=\"Framework\"></a>Framework</h3><p>Storm、Spark Stream、Flink</p>\n<h1 id=\"RP\"><a href=\"#RP\" class=\"headerlink\" title=\"RP\"></a>RP</h1><p>RP（reactive programming）：响应式编程，基于 <code>发布订阅模式</code> 实现的编程范式</p>\n<h2 id=\"java-2\"><a href=\"#java-2\" class=\"headerlink\" title=\"java\"></a>java</h2><h3 id=\"Framework-1\"><a href=\"#Framework-1\" class=\"headerlink\" title=\"Framework\"></a>Framework</h3><p>RxJava</p>\n","categories":["+ skill + dev + senior"],"tags":["+ dev"]}]